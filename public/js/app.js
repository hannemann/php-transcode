/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@babel/runtime/regenerator/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! regenerator-runtime */ \"./node_modules/regenerator-runtime/runtime.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsZ0hBQStDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yL2luZGV4LmpzP2EzNGEiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicmVnZW5lcmF0b3ItcnVudGltZVwiKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/regenerator/index.js\n");

/***/ }),

/***/ "./node_modules/@iconify/iconify/dist/iconify.min.js":
/*!***********************************************************!*\
  !*** ./node_modules/@iconify/iconify/dist/iconify.min.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/**\n* (c) Iconify\n*\n* For the full copyright and license information, please view the license.txt or license.gpl.txt\n* files at https://github.com/iconify/iconify\n*\n* Licensed under Apache 2.0 or GPL 2.0 at your option.\n* If derivative product is not compatible with one of licenses, you can pick one of licenses.\n*\n* @license Apache 2.0\n* @license GPL 2.0\n*/\nvar Iconify=function(){\"use strict\";function e(e,n,t){return e(t={path:n,exports:{},require:function(e,n){return function(){throw new Error(\"Dynamic requires are not currently supported by @rollup/plugin-commonjs\")}(null==n&&t.path)}},t.exports),t.exports}var n=e((function(e,n){Object.defineProperty(n,\"__esModule\",{value:!0}),n.fullIcon=n.iconDefaults=n.minifyProps=n.matchName=void 0,n.matchName=/^[a-z0-9]+(-[a-z0-9]+)*$/,n.minifyProps=[\"width\",\"height\",\"top\",\"left\"],n.iconDefaults=Object.freeze({left:0,top:0,width:16,height:16,rotate:0,vFlip:!1,hFlip:!1}),n.fullIcon=function(e){return Object.assign({},n.iconDefaults,e)}})),t=e((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.mergeIconData=void 0,t.mergeIconData=function(e,t){var r=Object.assign({},e);for(var o in n.iconDefaults){var i=o;if(void 0!==t[i]){var a=t[i];if(void 0===r[i]){r[i]=a;continue}switch(i){case\"rotate\":r[i]=(r[i]+a)%4;break;case\"hFlip\":case\"vFlip\":r[i]=a!==r[i];break;default:r[i]=a}}}return r}})),r=e((function(e,r){Object.defineProperty(r,\"__esModule\",{value:!0}),r.parseIconSet=void 0;var o=Object.keys(n.iconDefaults);function i(e,n,r,o){void 0===o&&(o=0);var a=e.parent;if(void 0!==n[a])return t.mergeIconData(n[a],e);if(void 0!==r[a]){if(o>2)return null;var c=i(r[a],n,r,o+1);if(c)return t.mergeIconData(c,e)}return null}r.parseIconSet=function(e,t,r){void 0===r&&(r=\"none\");var a=[];if(\"object\"!=typeof e)return\"none\"!==r&&a;if(e.not_found instanceof Array&&e.not_found.forEach((function(e){t(e,null),\"all\"===r&&a.push(e)})),\"object\"!=typeof e.icons)return\"none\"!==r&&a;var c=Object.create(null);o.forEach((function(n){void 0!==e[n]&&\"object\"!=typeof e[n]&&(c[n]=e[n])}));var u=e.icons;if(Object.keys(u).forEach((function(e){var r=u[e];\"string\"==typeof r.body&&(t(e,Object.freeze(Object.assign({},n.iconDefaults,c,r))),a.push(e))})),\"object\"==typeof e.aliases){var f=e.aliases;Object.keys(f).forEach((function(e){var r=i(f[e],u,f,1);r&&(t(e,Object.freeze(Object.assign({},n.iconDefaults,c,r))),a.push(e))}))}return\"none\"===r?a.length>0:a}})),o=e((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.validateIcon=t.stringToIcon=void 0;t.stringToIcon=function(e,n,r,o){void 0===o&&(o=\"\");var i=e.split(\":\");if(\"@\"===e.slice(0,1)){if(i.length<2||i.length>3)return null;o=i.shift().slice(1)}if(i.length>3||!i.length)return null;if(i.length>1){var a=i.pop(),c=i.pop(),u={provider:i.length>0?i[0]:o,prefix:c,name:a};return n&&!t.validateIcon(u)?null:u}var f=i[0],l=f.split(\"-\");if(l.length>1){var s={provider:o,prefix:l.shift(),name:l.join(\"-\")};return n&&!t.validateIcon(s)?null:s}if(r&&\"\"===o){var d={provider:o,prefix:\"\",name:f};return n&&!t.validateIcon(d,r)?null:d}return null};t.validateIcon=function(e,t){return!!e&&!(\"\"!==e.provider&&!e.provider.match(n.matchName)||!(t&&\"\"===e.prefix||e.prefix.match(n.matchName))||!e.name.match(n.matchName))}})),i=e((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.listIcons=t.getIcon=t.iconExists=t.addIcon=t.addIconSet=t.getStorage=t.newStorage=void 0;var o=Object.create(null);function i(e,n){return{provider:e,prefix:n,icons:Object.create(null),missing:Object.create(null)}}function a(e,n){void 0===o[e]&&(o[e]=Object.create(null));var t=o[e];return void 0===t[n]&&(t[n]=i(e,n)),t[n]}t.newStorage=i,t.getStorage=a,t.addIconSet=function(e,n,t){void 0===t&&(t=\"none\");var o=Date.now();return r.parseIconSet(n,(function(n,t){null===t?e.missing[n]=o:e.icons[n]=t}),t)},t.addIcon=function(e,t,r){try{if(\"string\"==typeof r.body)return e.icons[t]=Object.freeze(n.fullIcon(r)),!0}catch(e){}return!1},t.iconExists=function(e,n){return void 0!==e.icons[n]},t.getIcon=function(e,n){var t=e.icons[n];return void 0===t?null:t},t.listIcons=function(e,n){var t=[];return(\"string\"==typeof e?[e]:Object.keys(o)).forEach((function(e){(\"string\"==typeof e&&\"string\"==typeof n?[n]:void 0===o[e]?[]:Object.keys(o[e])).forEach((function(n){var r=a(e,n),o=Object.keys(r.icons).map((function(t){return(\"\"!==e?\"@\"+e+\":\":\"\")+n+\":\"+t}));t=t.concat(o)}))})),t}})),a=e((function(e,n){Object.defineProperty(n,\"__esModule\",{value:!0}),n.storageFunctions=n.addCollection=n.addIcon=n.getIconData=n.allowSimpleNames=void 0;var t=!1;function a(e){var n=\"string\"==typeof e?o.stringToIcon(e,!0,t):e;return n?i.getIcon(i.getStorage(n.provider,n.prefix),n.name):null}function c(e,n){var r=o.stringToIcon(e,!0,t);if(!r)return!1;var a=i.getStorage(r.provider,r.prefix);return i.addIcon(a,r.name,n)}function u(e,n){if(\"object\"!=typeof e)return!1;if(\"string\"!=typeof n&&(n=\"string\"==typeof e.provider?e.provider:\"\"),t&&\"\"===n&&(\"string\"!=typeof e.prefix||\"\"===e.prefix)){var a=!1;return r.parseIconSet(e,(function(e,n){null!==n&&c(e,n)&&(a=!0)})),a}if(\"string\"!=typeof e.prefix||!o.validateIcon({provider:n,prefix:e.prefix,name:\"a\"}))return!1;var u=i.getStorage(n,e.prefix);return!!i.addIconSet(u,e)}n.allowSimpleNames=function(e){return\"boolean\"==typeof e&&(t=e),t},n.getIconData=a,n.addIcon=c,n.addCollection=u,n.storageFunctions={iconExists:function(e){return null!==a(e)},getIcon:function(e){var n=a(e);return n?Object.assign({},n):null},listIcons:i.listIcons,addIcon:c,addCollection:u}})),c=e((function(e,n){Object.defineProperty(n,\"__esModule\",{value:!0}),n.replaceIDs=void 0;var t=/\\sid=\"(\\S+)\"/g,r=\"([^A-Za-z0-9_-])\";var o=\"IconifyId-\"+Date.now().toString(16)+\"-\"+(16777216*Math.random()|0).toString(16)+\"-\",i=0;n.replaceIDs=function(e,n){void 0===n&&(n=o);for(var a,c=[];a=t.exec(e);)c.push(a[1]);return c.length?(c.forEach((function(t){var o=\"function\"==typeof n?n():n+i++;e=e.replace(new RegExp(r+\"(\"+(t.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\")+\")\")+r,\"g\"),\"$1\"+o+\"$3\")})),e):e}})),u=e((function(e,n){Object.defineProperty(n,\"__esModule\",{value:!0}),n.calculateSize=void 0;var t=/(-?[0-9.]*[0-9]+[0-9.]*)/g,r=/^-?[0-9.]*[0-9]+[0-9.]*$/g;n.calculateSize=function(e,n,o){if(1===n)return e;if(o=void 0===o?100:o,\"number\"==typeof e)return Math.ceil(e*n*o)/o;if(\"string\"!=typeof e)return e;var i=e.split(t);if(null===i||!i.length)return e;for(var a=[],c=i.shift(),u=r.test(c);;){if(u){var f=parseFloat(c);isNaN(f)?a.push(c):a.push(Math.ceil(f*n*o)/o)}else a.push(c);if(void 0===(c=i.shift()))return a.join(\"\");u=!u}}})),f=e((function(e,n){Object.defineProperty(n,\"__esModule\",{value:!0}),n.mergeCustomisations=n.defaults=void 0,n.defaults=Object.freeze({inline:!1,width:null,height:null,hAlign:\"center\",vAlign:\"middle\",slice:!1,hFlip:!1,vFlip:!1,rotate:0}),n.mergeCustomisations=function(e,n){var t={};for(var r in e){var o=r;if(t[o]=e[o],void 0!==n[o]){var i=n[o];switch(o){case\"inline\":case\"slice\":\"boolean\"==typeof i&&(t[o]=i);break;case\"hFlip\":case\"vFlip\":!0===i&&(t[o]=!t[o]);break;case\"hAlign\":case\"vAlign\":\"string\"==typeof i&&\"\"!==i&&(t[o]=i);break;case\"width\":case\"height\":(\"string\"==typeof i&&\"\"!==i||\"number\"==typeof i&&i||null===i)&&(t[o]=i);break;case\"rotate\":\"number\"==typeof i&&(t[o]+=i)}}}return t}})),l=e((function(e,n){function t(e){var n=\"\";switch(e.hAlign){case\"left\":n+=\"xMin\";break;case\"right\":n+=\"xMax\";break;default:n+=\"xMid\"}switch(e.vAlign){case\"top\":n+=\"YMin\";break;case\"bottom\":n+=\"YMax\";break;default:n+=\"YMid\"}return n+=e.slice?\" slice\":\" meet\"}Object.defineProperty(n,\"__esModule\",{value:!0}),n.iconToSVG=void 0,n.iconToSVG=function(e,n){var r,o,i={left:e.left,top:e.top,width:e.width,height:e.height},a=e.body;[e,n].forEach((function(e){var n,t=[],r=e.hFlip,o=e.vFlip,c=e.rotate;switch(r?o?c+=2:(t.push(\"translate(\"+(i.width+i.left)+\" \"+(0-i.top)+\")\"),t.push(\"scale(-1 1)\"),i.top=i.left=0):o&&(t.push(\"translate(\"+(0-i.left)+\" \"+(i.height+i.top)+\")\"),t.push(\"scale(1 -1)\"),i.top=i.left=0),c<0&&(c-=4*Math.floor(c/4)),c%=4){case 1:n=i.height/2+i.top,t.unshift(\"rotate(90 \"+n+\" \"+n+\")\");break;case 2:t.unshift(\"rotate(180 \"+(i.width/2+i.left)+\" \"+(i.height/2+i.top)+\")\");break;case 3:n=i.width/2+i.left,t.unshift(\"rotate(-90 \"+n+\" \"+n+\")\")}c%2==1&&(0===i.left&&0===i.top||(n=i.left,i.left=i.top,i.top=n),i.width!==i.height&&(n=i.width,i.width=i.height,i.height=n)),t.length&&(a='<g transform=\"'+t.join(\" \")+'\">'+a+\"</g>\")})),null===n.width&&null===n.height?(o=\"1em\",r=u.calculateSize(o,i.width/i.height)):null!==n.width&&null!==n.height?(r=n.width,o=n.height):null!==n.height?(o=n.height,r=u.calculateSize(o,i.width/i.height)):(r=n.width,o=u.calculateSize(r,i.height/i.width)),\"auto\"===r&&(r=i.width),\"auto\"===o&&(o=i.height);var c={attributes:{width:r=\"string\"==typeof r?r:r+\"\",height:o=\"string\"==typeof o?o:o+\"\",preserveAspectRatio:t(n),viewBox:i.left+\" \"+i.top+\" \"+i.width+\" \"+i.height},body:a};return n.inline&&(c.inline=!0),c}})),s=e((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.builderFunctions=void 0,t.builderFunctions={replaceIDs:c.replaceIDs,calculateSize:u.calculateSize,buildIcon:function(e,t){return l.iconToSVG(n.fullIcon(e),f.mergeCustomisations(f.defaults,t))}}})),d=e((function(e,n){Object.defineProperty(n,\"__esModule\",{value:!0}),n.coreModules=void 0,n.coreModules={}})),v=e((function(e,n){Object.defineProperty(n,\"__esModule\",{value:!0}),n.storeCache=n.loadCache=n.mock=n.emptyList=n.count=n.config=void 0;var t=\"iconify2\",r=\"iconify\",o=\"iconify-count\",a=\"iconify-version\",c=36e5;n.config={local:!0,session:!0};var u=!1;n.count={local:0,session:0},n.emptyList={local:[],session:[]};var f=\"undefined\"==typeof window?{}:window;function l(e){var t=e+\"Storage\";try{if(f&&f[t]&&\"number\"==typeof f[t].length)return f[t]}catch(e){}return n.config[e]=!1,null}function s(e,t,r){try{return e.setItem(o,r+\"\"),n.count[t]=r,!0}catch(e){return!1}}function d(e){var n=e.getItem(o);if(n){var t=parseInt(n);return t||0}return 0}n.mock=function(e){u=!1,f=e};n.loadCache=function(){if(!u){u=!0;var e=Math.floor(Date.now()/c)-168;for(var o in n.config)f(o)}function f(o){var c=l(o);if(c){var u=function(n){var t=r+n,o=c.getItem(t);if(\"string\"!=typeof o)return!1;var a=!0;try{var u=JSON.parse(o);if(\"object\"!=typeof u||\"number\"!=typeof u.cached||u.cached<e||\"string\"!=typeof u.provider||\"object\"!=typeof u.data||\"string\"!=typeof u.data.prefix)a=!1;else{var f=u.provider,l=u.data.prefix,s=i.getStorage(f,l);a=i.addIconSet(s,u.data)}}catch(e){a=!1}return a||c.removeItem(t),a};try{var f=c.getItem(a);if(f!==t)return f&&function(e){try{for(var n=d(e),t=0;t<n;t++)e.removeItem(r+t)}catch(e){}}(c),void function(e,n){try{e.setItem(a,t)}catch(e){}s(e,n,0)}(c,o);for(var v=d(c),p=v-1;p>=0;p--)u(p)||(p===v-1?v--:n.emptyList[o].push(p));s(c,o,v)}catch(e){}}}};n.storeCache=function(e,t){function o(o){if(!n.config[o])return!1;var i=l(o);if(!i)return!1;var a=n.emptyList[o].shift();if(void 0===a&&!s(i,o,(a=n.count[o])+1))return!1;try{var u={cached:Math.floor(Date.now()/c),provider:e,data:t};i.setItem(r+a,JSON.stringify(u))}catch(e){return!1}return!0}u||n.loadCache(),o(\"local\")||o(\"session\")}})),p=e((function(e,n){Object.defineProperty(n,\"__esModule\",{value:!0}),n.toggleBrowserCache=void 0,n.toggleBrowserCache=function(e,n){switch(e){case\"local\":case\"session\":v.config[e]=n;break;case\"all\":for(var t in v.config)v.config[t]=n}}})),h=e((function(e,n){Object.defineProperty(n,\"__esModule\",{value:!0}),n.defaultConfig=void 0,n.defaultConfig={resources:[],index:0,timeout:2e3,rotate:750,random:!1,dataAfterTimeout:!1}})),g=e((function(e,n){Object.defineProperty(n,\"__esModule\",{value:!0}),n.sendQuery=void 0,n.sendQuery=function(e,n,t,r,o){var i,a=e.resources.length,c=e.random?Math.floor(Math.random()*a):e.index;if(e.random){var u=e.resources.slice(0);for(i=[];u.length>1;){var f=Math.floor(Math.random()*u.length);i.push(u[f]),u=u.slice(0,f).concat(u.slice(f+1))}i=i.concat(u)}else i=e.resources.slice(c).concat(e.resources.slice(0,c));var l=Date.now(),s=\"pending\",d=0,v=void 0,p=null,h=[],g=[];function m(){p&&(clearTimeout(p),p=null)}function b(){\"pending\"===s&&(s=\"aborted\"),m(),h.forEach((function(e){e.abort&&e.abort(),\"pending\"===e.status&&(e.status=\"aborted\")})),h=[]}function y(e,n){n&&(g=[]),\"function\"==typeof e&&g.push(e)}function I(){return{startTime:l,payload:n,status:s,queriesSent:d,queriesPending:h.length,subscribe:y,abort:b}}function j(){s=\"failed\",g.forEach((function(e){e(void 0,v)}))}function x(){h=h.filter((function(e){return\"pending\"===e.status&&(e.status=\"aborted\"),e.abort&&e.abort(),!1}))}function O(){if(\"pending\"===s){m();var r=i.shift();if(void 0!==r){var a={getQueryStatus:I,status:\"pending\",resource:r,done:function(n,t){!function(n,t,r){var a=void 0===t;switch(h=h.filter((function(e){return e!==n})),s){case\"pending\":break;case\"failed\":if(a||!e.dataAfterTimeout)return;break;default:return}if(a)return void 0!==r&&(v=r),void(h.length||(i.length?O():j()));if(m(),x(),o&&!e.random){var c=e.resources.indexOf(n.resource);-1!==c&&c!==e.index&&o(c)}s=\"completed\",g.forEach((function(e){e(t)}))}(a,n,t)}};h.push(a),d++;var c=\"function\"==typeof e.rotate?e.rotate(d,l):e.rotate;p=setTimeout(O,c),t(r,n,a)}else{if(h.length){var u=\"function\"==typeof e.timeout?e.timeout(l):e.timeout;if(u)return void(p=setTimeout((function(){m(),\"pending\"===s&&(x(),j())}),u))}j()}}}return\"function\"==typeof r&&g.push(r),setTimeout(O),I}})),m=e((function(e,n){Object.defineProperty(n,\"__esModule\",{value:!0}),n.initRedundancy=void 0,n.initRedundancy=function(e){var n=function(e){if(!(\"object\"==typeof e&&\"object\"==typeof e.resources&&e.resources instanceof Array&&e.resources.length))throw new Error(\"Invalid Reduncancy configuration\");var n,t=Object.create(null);for(n in h.defaultConfig)void 0!==e[n]?t[n]=e[n]:t[n]=h.defaultConfig[n];return t}(e),t=[];function r(){t=t.filter((function(e){return\"pending\"===e().status}))}return{query:function(e,o,i){var a=g.sendQuery(n,e,o,(function(e,n){r(),i&&i(e,n)}),(function(e){n.index=e}));return t.push(a),a},find:function(e){var n=t.find((function(n){return e(n)}));return void 0!==n?n:null},setIndex:function(e){n.index=e},getIndex:function(){return n.index},cleanup:r}}})),b=e((function(e,n){Object.defineProperty(n,\"__esModule\",{value:!0}),n.sortIcons=void 0,n.sortIcons=function(e){var n={loaded:[],missing:[],pending:[]},t=Object.create(null);e.sort((function(e,n){return e.provider!==n.provider?e.provider.localeCompare(n.provider):e.prefix!==n.prefix?e.prefix.localeCompare(n.prefix):e.name.localeCompare(n.name)}));var r={provider:\"\",prefix:\"\",name:\"\"};return e.forEach((function(e){if(r.name!==e.name||r.prefix!==e.prefix||r.provider!==e.provider){r=e;var o=e.provider,a=e.prefix,c=e.name;void 0===t[o]&&(t[o]=Object.create(null));var u=t[o];void 0===u[a]&&(u[a]=i.getStorage(o,a));var f=u[a],l={provider:o,prefix:a,name:c};(void 0!==f.icons[c]?n.loaded:\"\"===a||void 0!==f.missing[c]?n.missing:n.pending).push(l)}})),n}})),y=e((function(e,n){Object.defineProperty(n,\"__esModule\",{value:!0}),n.storeCallback=n.updateCallbacks=n.callbacks=void 0,n.callbacks=Object.create(null);var t=Object.create(null);function r(e,t){e.forEach((function(e){var r=e.provider;if(void 0!==n.callbacks[r]){var o=n.callbacks[r],i=e.prefix,a=o[i];a&&(o[i]=a.filter((function(e){return e.id!==t})))}}))}n.updateCallbacks=function(e,o){void 0===t[e]&&(t[e]=Object.create(null));var a=t[e];a[o]||(a[o]=!0,setTimeout((function(){if(a[o]=!1,void 0!==n.callbacks[e]&&void 0!==n.callbacks[e][o]){var t=n.callbacks[e][o].slice(0);if(t.length){var c=i.getStorage(e,o),u=!1;t.forEach((function(n){var t=n.icons,i=t.pending.length;t.pending=t.pending.filter((function(n){if(n.prefix!==o)return!0;var r=n.name;if(void 0!==c.icons[r])t.loaded.push({provider:e,prefix:o,name:r});else{if(void 0===c.missing[r])return u=!0,!0;t.missing.push({provider:e,prefix:o,name:r})}return!1})),t.pending.length!==i&&(u||r([{provider:e,prefix:o}],n.id),n.callback(t.loaded.slice(0),t.missing.slice(0),t.pending.slice(0),n.abort))}))}}})))};var o=0;n.storeCallback=function(e,t,i){var a=o++,c=r.bind(null,i,a);if(!t.pending.length)return c;var u={id:a,icons:t,callback:e,abort:c};return i.forEach((function(e){var t=e.provider,r=e.prefix;void 0===n.callbacks[t]&&(n.callbacks[t]=Object.create(null));var o=n.callbacks[t];void 0===o[r]&&(o[r]=[]),o[r].push(u)})),c}})),I=e((function(e,n){Object.defineProperty(n,\"__esModule\",{value:!0}),n.getAPIModule=n.setAPIModule=void 0;var t=Object.create(null);n.setAPIModule=function(e,n){t[e]=n},n.getAPIModule=function(e){return void 0===t[e]?t[\"\"]:t[e]}})),j=e((function(e,n){function t(e){var n;if(\"string\"==typeof e.resources)n=[e.resources];else if(!((n=e.resources)instanceof Array&&n.length))return null;return{resources:n,path:void 0===e.path?\"/\":e.path,maxURL:e.maxURL?e.maxURL:500,rotate:e.rotate?e.rotate:750,timeout:e.timeout?e.timeout:5e3,random:!0===e.random,index:e.index?e.index:0,dataAfterTimeout:!1!==e.dataAfterTimeout}}Object.defineProperty(n,\"__esModule\",{value:!0}),n.getAPIConfig=n.setAPIConfig=void 0;for(var r=Object.create(null),o=[\"https://api.simplesvg.com\",\"https://api.unisvg.com\"],i=[];o.length>0;)1===o.length||Math.random()>.5?i.push(o.shift()):i.push(o.pop());r[\"\"]=t({resources:[\"https://api.iconify.design\"].concat(i)}),n.setAPIConfig=function(e,n){var o=t(n);return null!==o&&(r[e]=o,!0)};n.getAPIConfig=function(e){return r[e]}})),x=e((function(e,n){Object.defineProperty(n,\"__esModule\",{value:!0}),n.getProviders=n.listToIcons=void 0,n.listToIcons=function(e,n,t){void 0===n&&(n=!0),void 0===t&&(t=!1);var r=[];return e.forEach((function(e){var i=\"string\"==typeof e?o.stringToIcon(e,!1,t):e;n&&!o.validateIcon(i,t)||r.push({provider:i.provider,prefix:i.prefix,name:i.name})})),r},n.getProviders=function(e){var n=Object.create(null);return e.forEach((function(e){n[e.provider]=!0})),Object.keys(n)}})),O=e((function(e,n){function t(){}Object.defineProperty(n,\"__esModule\",{value:!0}),n.API=n.getRedundancyCache=void 0;var r=Object.create(null),o=Object.create(null),c=Object.create(null),u=Object.create(null),f=Object.create(null);function l(e){if(void 0===f[e]){var n=j.getAPIConfig(e);if(!n)return;var t={config:n,redundancy:m.initRedundancy(n)};f[e]=t}return f[e]}n.getRedundancyCache=l;var s=Object.create(null);function v(e,n,t){function a(){var t=(\"\"===e?\"\":\"@\"+e+\":\")+n,r=Math.floor(Date.now()/6e4);s[t]<r&&(s[t]=r,console.error('Unable to retrieve icons for \"'+t+'\" because API is not configured properly.'))}void 0===o[e]&&(o[e]=Object.create(null));var f=o[e];void 0===u[e]&&(u[e]=Object.create(null));var v=u[e];void 0===r[e]&&(r[e]=Object.create(null));var p,h=r[e];void 0===f[n]?f[n]=t:f[n]=f[n].concat(t).sort(),v[n]||(v[n]=!0,setTimeout((function(){v[n]=!1;var t=f[n];delete f[n];var r=I.getAPIModule(e);if(r){if(void 0===p){var o=l(e);if(void 0===o)return void a();p=o}r.prepare(e,n,t).forEach((function(t){p.redundancy.query(t,r.send,(function(r,o){var a=i.getStorage(e,n);if(\"object\"!=typeof r){if(404!==o)return;var u=Date.now();t.icons.forEach((function(e){a.missing[e]=u}))}else try{var f=i.addIconSet(a,r,\"all\");if(\"boolean\"==typeof f)return;var l=h[n];f.forEach((function(e){delete l[e]})),d.coreModules.cache&&d.coreModules.cache(e,r)}catch(e){console.error(e)}!function(e,n){void 0===c[e]&&(c[e]=Object.create(null));var t=c[e];t[n]||(t[n]=!0,setTimeout((function(){t[n]=!1,y.updateCallbacks(e,n)})))}(e,n)}))}))}else a()})))}n.API={isPending:function(e){return void 0!==r[e.provider]&&void 0!==r[e.provider][e.prefix]&&void 0!==r[e.provider][e.prefix][e.name]},loadIcons:function(e,n){var o=x.listToIcons(e,!0,a.allowSimpleNames()),i=b.sortIcons(o);if(!i.pending.length){var c=!0;return n&&setTimeout((function(){c&&n(i.loaded,i.missing,i.pending,t)})),function(){c=!1}}var u,f,l=Object.create(null),s=[];i.pending.forEach((function(e){var n=e.provider,t=e.prefix;if(t!==f||n!==u){u=n,f=t,s.push({provider:n,prefix:t}),void 0===r[n]&&(r[n]=Object.create(null));var o=r[n];void 0===o[t]&&(o[t]=Object.create(null)),void 0===l[n]&&(l[n]=Object.create(null));var i=l[n];void 0===i[t]&&(i[t]=[])}}));var d=Date.now();return i.pending.forEach((function(e){var n=e.provider,t=e.prefix,o=e.name,i=r[n][t];void 0===i[o]&&(i[o]=d,l[n][t].push(o))})),s.forEach((function(e){var n=e.provider,t=e.prefix;l[n][t].length&&v(n,t,l[n][t])})),n?y.storeCallback(n,i,s):t}}})),P=e((function(e,n){Object.defineProperty(n,\"__esModule\",{value:!0}),n.APIInternalFunctions=n.APIFunctions=void 0,n.APIFunctions={loadIcons:O.API.loadIcons,addAPIProvider:j.setAPIConfig},n.APIInternalFunctions={getAPI:O.getRedundancyCache,getAPIConfig:j.getAPIConfig,setAPIModule:I.setAPIModule}})),w=e((function(e,n){Object.defineProperty(n,\"__esModule\",{value:!0}),n.getAPIModule=void 0;var t=null,r=\"{prefix}.js?icons={icons}&callback={callback}\",o=Object.create(null),i=Object.create(null);function a(){if(null===t){var e=self,n=\"Iconify\",o=\".cb\";if(void 0===e[n])o=\"\",void 0===e[n=\"IconifyJSONP\"]&&(e[n]=Object.create(null)),t=e[n];else{var i=e[n];void 0===i.cb&&(i.cb=Object.create(null)),t=i.cb}r=r.replace(\"{callback}\",n+o+\".{cb}\")}return t}n.getAPIModule=function(e){return{prepare:function(n,t,c){var u=[],f=o[n+\":\"+t];void 0===f&&(f=function(n,t){var c,u=e(n);if(!u)return 0;if(u.maxURL){var f=0;u.resources.forEach((function(e){var n=e;f=Math.max(f,n.length)})),a(),c=u.maxURL-f-u.path.length-r.replace(\"{provider}\",n).replace(\"{prefix}\",t).replace(\"{icons}\",\"\").length-3}else c=0;var l=n+\":\"+t;return i[l]=u.path,o[l]=c,c}(n,t));var l={provider:n,prefix:t,icons:[]},s=0;return c.forEach((function(e,r){(s+=e.length+1)>=f&&r>0&&(u.push(l),l={provider:n,prefix:t,icons:[]},s=e.length),l.icons.push(e)})),u.push(l),u},send:function(e,n,t){for(var o=n.provider,c=n.prefix,u=n.icons.join(\",\"),f=o+\":\"+c,l=c.split(\"-\").shift().slice(0,3),s=a(),d=function(e){var n,t=0;for(n=e.length-1;n>=0;n--)t+=e.charCodeAt(n);return t%999}(o+\":\"+e+\":\"+c+\":\"+u);void 0!==s[l+d];)d++;var v=l+d,p=i[f]+r.replace(\"{provider}\",o).replace(\"{prefix}\",c).replace(\"{icons}\",u).replace(\"{cb}\",v);s[v]=function(e){delete s[v],t.done(e)};var h=e+p,g=document.createElement(\"script\");g.type=\"text/javascript\",g.async=!0,g.src=h,document.head.appendChild(g)}}}})),M=e((function(e,n){Object.defineProperty(n,\"__esModule\",{value:!0}),n.getAPIModule=n.setFetch=void 0;var t=\"{prefix}.json?icons={icons}\",r=Object.create(null),o=Object.create(null),i=null;try{i=fetch}catch(e){}n.setFetch=function(e){i=e};n.getAPIModule=function(e){return{prepare:function(n,i,a){var c=[],u=r[i];void 0===u&&(u=function(n,i){var a,c=e(n);if(!c)return 0;if(c.maxURL){var u=0;c.resources.forEach((function(e){var n=e;u=Math.max(u,n.length)})),a=c.maxURL-u-c.path.length-t.replace(\"{provider}\",n).replace(\"{prefix}\",i).replace(\"{icons}\",\"\").length}else a=0;var f=n+\":\"+i;return o[f]=c.path,r[f]=a,a}(n,i));var f={provider:n,prefix:i,icons:[]},l=0;return a.forEach((function(e,t){(l+=e.length+1)>=u&&t>0&&(c.push(f),f={provider:n,prefix:i,icons:[]},l=e.length),f.icons.push(e)})),c.push(f),c},send:function(e,n,r){var a=n.provider,c=n.prefix,u=n.icons.join(\",\"),f=o[a+\":\"+c]+t.replace(\"{provider}\",a).replace(\"{prefix}\",c).replace(\"{icons}\",u);i?i(e+f).then((function(e){if(200===e.status)return e.json();r.done(void 0,e.status)})).then((function(e){\"object\"==typeof e&&null!==e&&r.done(e)})).catch((function(e){r.done(void 0,e.errno)})):r.done(void 0,424)}}}})),A=\"iconifyFinder\"+Date.now(),S=\"iconifyData\"+Date.now();function _(e,n,t,r){var o;try{o=document.createElement(\"span\")}catch(e){return r?\"\":null}var i=l.iconToSVG(t,f.mergeCustomisations(f.defaults,n)),a=e.element,u=e.finder,s=e.name,d=a?a.getAttribute(\"class\"):\"\",v=u?u.classFilter(d?d.split(/\\s+/):[]):[],p='<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-hidden=\"true\" role=\"img\" class=\"'+(\"iconify iconify--\"+s.prefix+(\"\"===s.provider?\"\":\" iconify--\"+s.provider)+(v.length?\" \"+v.join(\" \"):\"\"))+'\">'+c.replaceIDs(i.body)+\"</svg>\";o.innerHTML=p;var h=o.childNodes[0],g=h.style,m=i.attributes;if(Object.keys(m).forEach((function(e){h.setAttribute(e,m[e])})),i.inline&&(g.verticalAlign=\"-0.125em\"),a){for(var b=a.attributes,y=0;y<b.length;y++){var I=b.item(y);if(I){var j=I.name;if(\"class\"!==j&&\"style\"!==j&&void 0===m[j])try{h.setAttribute(j,I.value)}catch(e){}}}for(var x=a.style,O=0;O<x.length;O++){var P=x[O];g[P]=x[P]}}if(u){var w={name:s,status:\"loaded\",customisations:n};h[S]=w,h[A]=u}var M=r?o.innerHTML:h;return a&&a.parentNode?a.parentNode.replaceChild(h,a):o.removeChild(h),M}var E=[];function k(e){for(var n=0;n<E.length;n++){var t=E[n];if((\"function\"==typeof t.node?t.node():t.node)===e)return t}}function C(e,n){void 0===n&&(n=!1);var t=k(e);return t?(t.temporary&&(t.temporary=n),t):(t={node:e,temporary:n},E.push(t),t)}function F(){return E}var T=null,D={childList:!0,subtree:!0,attributes:!0};function N(e){if(e.observer){var n=e.observer;n.pendingScan||(n.pendingScan=setTimeout((function(){delete n.pendingScan,T&&T(e)})))}}function L(e,n){if(e.observer){var t=e.observer;if(!t.pendingScan)for(var r=0;r<n.length;r++){var o=n[r];if(o.addedNodes&&o.addedNodes.length>0||\"attributes\"===o.type&&void 0!==o.target[A])return void(t.paused||N(e))}}}function z(e,n){e.observer.instance.observe(n,D)}function R(e){var n=e.observer;if(!n||!n.instance){var t=\"function\"==typeof e.node?e.node():e.node;t&&(n||(n={paused:0},e.observer=n),n.instance=new MutationObserver(L.bind(null,e)),z(e,t),n.paused||N(e))}}function q(){F().forEach(R)}function U(e){if(e.observer){var n=e.observer;n.pendingScan&&(clearTimeout(n.pendingScan),delete n.pendingScan),n.instance&&(n.instance.disconnect(),delete n.instance)}}function V(e){var n=null!==T;T!==e&&(T=e,n&&F().forEach(U)),n?q():function(e){var n=document;\"complete\"===n.readyState||\"loading\"!==n.readyState&&!n.documentElement.doScroll?e():(n.addEventListener(\"DOMContentLoaded\",e),window.addEventListener(\"load\",e))}(q)}function G(e){(e?[e]:F()).forEach((function(e){if(e.observer){var n=e.observer;if(n.paused++,!(n.paused>1)&&n.instance)n.instance.disconnect()}else e.observer={paused:1}}))}function $(e){(e?[e]:F()).forEach((function(e){if(e.observer){var n=e.observer;if(n.paused&&(n.paused--,!n.paused)){var t=\"function\"==typeof e.node?e.node():e.node;if(!t)return;n.instance?z(e,t):R(e)}}else R(e)}))}function B(e,n){void 0===n&&(n=!1);var t=C(e,n);return R(t),t}function Q(e){var n=k(e);n&&(U(n),function(e){E=E.filter((function(n){var t=\"function\"==typeof n.node?n.node():n.node;return e!==t}))}(e))}var H=[];function J(e){return\"string\"==typeof e&&(e=o.stringToIcon(e)),null!==e&&o.validateIcon(e)?e:null}function Y(e){var n=[];H.forEach((function(t){var r=t.find(e);Array.prototype.forEach.call(r,(function(e){var r=e;if(void 0===r[A]||r[A]===t){var o=J(t.name(r));if(null!==o){r[A]=t;var i={element:r,finder:t,name:o};n.push(i)}}}))}));var t=e.querySelectorAll(\"svg.iconify\");return Array.prototype.forEach.call(t,(function(e){var t=e,r=t[A],o=t[S];if(r&&o){var i=J(r.name(t));if(null!==i){var a,c=!1;if(i.prefix!==o.name.prefix||i.name!==o.name.name?c=!0:(a=r.customisations(t),function(e,n){var t=Object.keys(e),r=Object.keys(n);if(t.length!==r.length)return!1;for(var o=0;o<t.length;o++){var i=t[o];if(n[i]!==e[i])return!1}return!0}(o.customisations,a)||(c=!0)),c){var u={element:t,finder:r,name:i,customisations:a};n.push(u)}}}})),n}var Z=!1;function K(){Z||(Z=!0,setTimeout((function(){Z&&(Z=!1,W())})))}function W(e,n){void 0===n&&(n=!1),Z=!1;var t=Object.create(null);if((e?[e]:F()).forEach((function(e){var r=\"function\"==typeof e.node?e.node():e.node;if(r&&r.querySelectorAll){var o=!1,a=!1;Y(r).forEach((function(n){var r,c,u=n.element,f=n.name,l=f.provider,s=f.prefix,v=f.name,p=u[S];if(void 0!==p&&(r=p.name,c=f,null!==r&&null!==c&&r.name===c.name&&r.prefix===c.prefix))switch(p.status){case\"missing\":return;case\"loading\":if(d.coreModules.api&&d.coreModules.api.isPending({provider:l,prefix:s,name:v}))return void(o=!0)}var h=i.getStorage(l,s);if(void 0===h.icons[v]){if(h.missing[v])return p={name:f,status:\"missing\",customisations:{}},void(u[S]=p);if(d.coreModules.api&&!d.coreModules.api.isPending({provider:l,prefix:s,name:v})){void 0===t[l]&&(t[l]=Object.create(null));var g=t[l];void 0===g[s]&&(g[s]=Object.create(null)),g[s][v]=!0}p={name:f,status:\"loading\",customisations:{}},u[S]=p,o=!0}else{!a&&e.observer&&(G(e),a=!0);var m=void 0!==n.customisations?n.customisations:n.finder.customisations(u);_(n,m,i.getIcon(h,v))}})),e.temporary&&!o?Q(r):n&&o?B(r,!0):a&&e.observer&&$(e)}})),d.coreModules.api){var r=d.coreModules.api;Object.keys(t).forEach((function(e){var n=t[e];Object.keys(n).forEach((function(t){r.loadIcons(Object.keys(n[t]).map((function(n){return{provider:e,prefix:t,name:n}})),K)}))}))}}var X=e((function(e,n){Object.defineProperty(n,\"__esModule\",{value:!0}),n.rotateFromString=void 0,n.rotateFromString=function(e){var n=e.replace(/^-?[0-9.]*/,\"\");function t(e){for(;e<0;)e+=4;return e%4}if(\"\"===n){var r=parseInt(e);return isNaN(r)?0:t(r)}if(n!==e){var o=0;switch(n){case\"%\":o=25;break;case\"deg\":o=90}if(o){var i=parseFloat(e.slice(0,e.length-n.length));return isNaN(i)?0:(i/=o)%1==0?t(i):0}}return 0}})),ee=e((function(e,n){Object.defineProperty(n,\"__esModule\",{value:!0}),n.alignmentFromString=n.flipFromString=void 0;var t=/[\\s,]+/;n.flipFromString=function(e,n){n.split(t).forEach((function(n){switch(n.trim()){case\"horizontal\":e.hFlip=!0;break;case\"vertical\":e.vFlip=!0}}))},n.alignmentFromString=function(e,n){n.split(t).forEach((function(n){var t=n.trim();switch(t){case\"left\":case\"center\":case\"right\":e.hAlign=t;break;case\"top\":case\"middle\":case\"bottom\":e.vAlign=t;break;case\"slice\":case\"crop\":e.slice=!0;break;case\"meet\":e.slice=!1}}))}}));function ne(e,n){return e.hasAttribute(n)}function te(e,n){return e.getAttribute(n)}var re=[\"inline\",\"hFlip\",\"vFlip\"],oe=[\"width\",\"height\"],ie=\"iconify-inline\",ae={find:function(e){return e.querySelectorAll(\"i.iconify, span.iconify, i.iconify-inline, span.iconify-inline\")},name:function(e){return ne(e,\"data-icon\")?te(e,\"data-icon\"):null},customisations:function(e,n){void 0===n&&(n={inline:!1});var t=n,r=e.getAttribute(\"class\");if(-1!==(r?r.split(/\\s+/):[]).indexOf(ie)&&(t.inline=!0),ne(e,\"data-rotate\")){var o=X.rotateFromString(te(e,\"data-rotate\"));o&&(t.rotate=o)}return ne(e,\"data-flip\")&&ee.flipFromString(t,te(e,\"data-flip\")),ne(e,\"data-align\")&&ee.alignmentFromString(t,te(e,\"data-align\")),re.forEach((function(n){if(ne(e,\"data-\"+n)){var r=function(e,n){var t=e.getAttribute(n);return t===n||\"true\"===t||\"\"!==t&&\"false\"!==t&&null}(e,\"data-\"+n);\"boolean\"==typeof r&&(t[n]=r)}})),oe.forEach((function(n){if(ne(e,\"data-\"+n)){var r=te(e,\"data-\"+n);\"\"!==r&&(t[n]=r)}})),t},classFilter:function(e){var n=[];return e.forEach((function(e){\"iconify\"!==e&&\"\"!==e&&\"iconify--\"!==e.slice(0,9)&&n.push(e)})),n}};function ce(e,n,t){var r=a.getIconData(e);return r?_({name:o.stringToIcon(e)},f.mergeCustomisations(f.defaults,\"object\"==typeof n?n:{}),r,t):null}var ue={getVersion:function(){return\"2.0.4\"},renderSVG:function(e,n){return ce(e,n,!1)},renderHTML:function(e,n){return ce(e,n,!0)},renderIcon:function(e,n){var t=a.getIconData(e);if(!t)return null;var r=f.mergeCustomisations(f.defaults,\"object\"==typeof n?n:{});return l.iconToSVG(t,r)},scan:function(e){e?function(e){var n=k(e);n?W(n):W({node:e,temporary:!0},!0)}(e):W()},observe:function(e){B(e)},stopObserving:function(e){Q(e)},pauseObserver:function(e){if(e){var n=k(e);n&&G(n)}else G()},resumeObserver:function(e){if(e){var n=k(e);n&&$(n)}else $()}};if(\"undefined\"!=typeof document&&\"undefined\"!=typeof window){!function(){if(document.documentElement)return C(document.documentElement);E.push({node:function(){return document.documentElement}})}(),function(e){-1===H.indexOf(e)&&H.push(e)}(ae);var fe=window;if(void 0!==fe.IconifyPreload){var le=fe.IconifyPreload,se=\"Invalid IconifyPreload syntax.\";\"object\"==typeof le&&null!==le&&(le instanceof Array?le:[le]).forEach((function(e){try{(\"object\"!=typeof e||null===e||e instanceof Array||\"object\"!=typeof e.icons||\"string\"!=typeof e.prefix||!a.storageFunctions.addCollection(e))&&console.error(se)}catch(e){console.error(se)}}))}setTimeout((function(){V(W),W()}))}var de={enableCache:function(e,n){return p.toggleBrowserCache(e,!1!==n)},disableCache:function(e){return p.toggleBrowserCache(e,!0)}},ve={_api:P.APIInternalFunctions};[a.storageFunctions,s.builderFunctions,ue,de,P.APIFunctions].forEach((function(e){for(var n in e)ve[n]=e[n]})),d.coreModules.api=O.API;var pe=M.getAPIModule;try{\"undefined\"!=typeof document&&\"undefined\"!=typeof window&&(pe=\"function\"==typeof fetch&&\"function\"==typeof Promise?M.getAPIModule:w.getAPIModule)}catch(se){}if(I.setAPIModule(\"\",pe(j.getAPIConfig)),ve._api.setFetch=function(e){M.setFetch(e),pe!==M.getAPIModule&&(pe=M.getAPIModule,I.setAPIModule(\"\",pe(j.getAPIConfig)))},\"undefined\"!=typeof document&&\"undefined\"!=typeof window){d.coreModules.cache=v.storeCache,v.loadCache();var he=window;if(void 0!==he.IconifyProviders){var ge=he.IconifyProviders;if(\"object\"==typeof ge&&null!==ge)for(var me in ge){var be=\"IconifyProviders[\"+me+\"] is invalid.\";try{var ye=ge[me];if(\"object\"!=typeof ye||!ye||void 0===ye.resources)continue;j.setAPIConfig(me,ye)||console.error(be)}catch(e){console.error(be)}}}}return ve}();try{void 0===self.Iconify&&(self.Iconify=Iconify)}catch(e){}if(true)try{exports.__esModule=!0,exports.default=Iconify}catch(e){}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@iconify/iconify/dist/iconify.min.js\n");

/***/ }),

/***/ "./resources/js/Helper/File.js":
/*!*************************************!*\
  !*** ./resources/js/Helper/File.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar FileHelper = /*#__PURE__*/function () {\n  function FileHelper() {\n    _classCallCheck(this, FileHelper);\n  }\n\n  _createClass(FileHelper, null, [{\n    key: \"fileSizeH\",\n    value: function fileSizeH(size) {\n      var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var base = 0;\n\n      if (size > 0) {\n        base = Math.log(size) / Math.log(1000);\n        size = Math.round(Math.pow(1000, base - Math.floor(base)), precision);\n      }\n\n      return [size, FileHelper.fileSizeSuffix[Math.floor(base)]].join(' ');\n    }\n  }]);\n\n  return FileHelper;\n}();\n\nObject.defineProperty(FileHelper, 'fileSizeSuffix', {\n  value: ['Bytes', 'KB', 'MB', 'GB', 'TB'],\n  writable: false,\n  configurable: false,\n  enumerable: false\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FileHelper);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvSGVscGVyL0ZpbGUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztJQUFNQTs7Ozs7OztXQUVGLG1CQUFpQkMsSUFBakIsRUFBc0M7QUFBQSxVQUFmQyxTQUFlLHVFQUFILENBQUc7QUFFbEMsVUFBSUMsSUFBSSxHQUFHLENBQVg7O0FBQ0EsVUFBSUYsSUFBSSxHQUFHLENBQVgsRUFBYztBQUNWRSxRQUFBQSxJQUFJLEdBQUdDLElBQUksQ0FBQ0MsR0FBTCxDQUFTSixJQUFULElBQWlCRyxJQUFJLENBQUNDLEdBQUwsQ0FBUyxJQUFULENBQXhCO0FBQ0FKLFFBQUFBLElBQUksR0FBR0csSUFBSSxDQUFDRSxLQUFMLENBQVdGLElBQUksQ0FBQ0csR0FBTCxDQUFTLElBQVQsRUFBZUosSUFBSSxHQUFHQyxJQUFJLENBQUNJLEtBQUwsQ0FBV0wsSUFBWCxDQUF0QixDQUFYLEVBQW9ERCxTQUFwRCxDQUFQO0FBQ0g7O0FBQ0QsYUFBTyxDQUFDRCxJQUFELEVBQU9ELFVBQVUsQ0FBQ1MsY0FBWCxDQUEwQkwsSUFBSSxDQUFDSSxLQUFMLENBQVdMLElBQVgsQ0FBMUIsQ0FBUCxFQUFvRE8sSUFBcEQsQ0FBeUQsR0FBekQsQ0FBUDtBQUNIOzs7Ozs7QUFHTEMsTUFBTSxDQUFDQyxjQUFQLENBQXNCWixVQUF0QixFQUFrQyxnQkFBbEMsRUFBb0Q7QUFDaERhLEVBQUFBLEtBQUssRUFBRSxDQUFDLE9BQUQsRUFBVSxJQUFWLEVBQWdCLElBQWhCLEVBQXNCLElBQXRCLEVBQTRCLElBQTVCLENBRHlDO0FBRWhEQyxFQUFBQSxRQUFRLEVBQUUsS0FGc0M7QUFHaERDLEVBQUFBLFlBQVksRUFBRSxLQUhrQztBQUloREMsRUFBQUEsVUFBVSxFQUFFO0FBSm9DLENBQXBEO0FBT0EsaUVBQWVoQixVQUFmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2pzL0hlbHBlci9GaWxlLmpzP2IwMWUiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgRmlsZUhlbHBlciB7XG5cbiAgICBzdGF0aWMgZmlsZVNpemVIKHNpemUsIHByZWNpc2lvbiA9IDEpIHtcblxuICAgICAgICBsZXQgYmFzZSA9IDA7XG4gICAgICAgIGlmIChzaXplID4gMCkge1xuICAgICAgICAgICAgYmFzZSA9IE1hdGgubG9nKHNpemUpIC8gTWF0aC5sb2coMTAwMCk7XG4gICAgICAgICAgICBzaXplID0gTWF0aC5yb3VuZChNYXRoLnBvdygxMDAwLCBiYXNlIC0gTWF0aC5mbG9vcihiYXNlKSksIHByZWNpc2lvbik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFtzaXplLCBGaWxlSGVscGVyLmZpbGVTaXplU3VmZml4W01hdGguZmxvb3IoYmFzZSldXS5qb2luKCcgJyk7XG4gICAgfVxufVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoRmlsZUhlbHBlciwgJ2ZpbGVTaXplU3VmZml4Jywge1xuICAgIHZhbHVlOiBbJ0J5dGVzJywgJ0tCJywgJ01CJywgJ0dCJywgJ1RCJ10sXG4gICAgd3JpdGFibGU6IGZhbHNlLFxuICAgIGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gICAgZW51bWVyYWJsZTogZmFsc2Vcbn0pXG5cbmV4cG9ydCBkZWZhdWx0IEZpbGVIZWxwZXIiXSwibmFtZXMiOlsiRmlsZUhlbHBlciIsInNpemUiLCJwcmVjaXNpb24iLCJiYXNlIiwiTWF0aCIsImxvZyIsInJvdW5kIiwicG93IiwiZmxvb3IiLCJmaWxlU2l6ZVN1ZmZpeCIsImpvaW4iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwid3JpdGFibGUiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/Helper/File.js\n");

/***/ }),

/***/ "./resources/js/Helper/String.js":
/*!***************************************!*\
  !*** ./resources/js/Helper/String.js ***!
  \***************************************/
/***/ (() => {

eval("String.prototype.wrapSquareBrackets = function () {\n  return \"[\".concat(this, \"]\");\n};\n\nString.prototype.wrapBrackets = function () {\n  return \"(\".concat(this, \")\");\n};\n\nString.prototype.wrap = function () {\n  var start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return \"\".concat(start).concat(this).concat(end);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvSGVscGVyL1N0cmluZy5qcz8wODdmIl0sIm5hbWVzIjpbIlN0cmluZyIsInByb3RvdHlwZSIsIndyYXBTcXVhcmVCcmFja2V0cyIsIndyYXBCcmFja2V0cyIsIndyYXAiLCJzdGFydCIsImVuZCJdLCJtYXBwaW5ncyI6IkFBQUFBLE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQkMsa0JBQWpCLEdBQXNDLFlBQVc7QUFDN0Msb0JBQVcsSUFBWDtBQUNILENBRkQ7O0FBSUFGLE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQkUsWUFBakIsR0FBZ0MsWUFBVztBQUN2QyxvQkFBVyxJQUFYO0FBQ0gsQ0FGRDs7QUFJQUgsTUFBTSxDQUFDQyxTQUFQLENBQWlCRyxJQUFqQixHQUF3QixZQUErQjtBQUFBLE1BQXRCQyxLQUFzQix1RUFBZCxFQUFjO0FBQUEsTUFBVkMsR0FBVSx1RUFBSixFQUFJO0FBQ25ELG1CQUFVRCxLQUFWLFNBQWtCLElBQWxCLFNBQXlCQyxHQUF6QjtBQUNILENBRkQiLCJzb3VyY2VzQ29udGVudCI6WyJTdHJpbmcucHJvdG90eXBlLndyYXBTcXVhcmVCcmFja2V0cyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBgWyR7dGhpc31dYFxufVxuXG5TdHJpbmcucHJvdG90eXBlLndyYXBCcmFja2V0cyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBgKCR7dGhpc30pYFxufVxuXG5TdHJpbmcucHJvdG90eXBlLndyYXAgPSBmdW5jdGlvbihzdGFydCA9ICcnLCBlbmQgPSAnJykge1xuICAgIHJldHVybiBgJHtzdGFydH0ke3RoaXN9JHtlbmR9YFxufSJdLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvSGVscGVyL1N0cmluZy5qcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/Helper/String.js\n");

/***/ }),

/***/ "./resources/js/app.js":
/*!*****************************!*\
  !*** ./resources/js/app.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _bootstrap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bootstrap */ \"./resources/js/bootstrap.js\");\n/* harmony import */ var _Helper_String__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Helper/String */ \"./resources/js/Helper/String.js\");\n/* harmony import */ var _Helper_String__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_Helper_String__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_Transcoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/Transcoder */ \"./resources/js/components/Transcoder.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvYXBwLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9qcy9hcHAuanM/NmQ0MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4vYm9vdHN0cmFwJ1xuXG5pbXBvcnQgJy4vSGVscGVyL1N0cmluZydcbmltcG9ydCAnLi9jb21wb25lbnRzL1RyYW5zY29kZXInIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/app.js\n");

/***/ }),

/***/ "./resources/js/bootstrap.js":
/*!***********************************!*\
  !*** ./resources/js/bootstrap.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var laravel_echo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! laravel-echo */ \"./node_modules/laravel-echo/dist/echo.js\");\n/**\n * Echo exposes an expressive API for subscribing to channels and listening\n * for events that are broadcast by Laravel. Echo and event broadcasting\n * allows your team to easily build robust real-time web applications.\n */\n\nwindow.Pusher = __webpack_require__(/*! pusher-js */ \"./node_modules/pusher-js/dist/web/pusher.js\");\nwindow.Echo = new laravel_echo__WEBPACK_IMPORTED_MODULE_0__.default({\n  broadcaster: 'pusher',\n  key: \"2\",\n  wsHost: window.location.hostname,\n  wsPort: 6001,\n  forceTLS: false,\n  disableStats: true\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvYm9vdHN0cmFwLmpzLmpzIiwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNDO0FBRUFDLE1BQU0sQ0FBQ0MsTUFBUCxHQUFnQkMsbUJBQU8sQ0FBQyw4REFBRCxDQUF2QjtBQUVBRixNQUFNLENBQUNELElBQVAsR0FBYyxJQUFJQSxpREFBSixDQUFTO0FBQ25CSSxFQUFBQSxXQUFXLEVBQUUsUUFETTtBQUVuQkMsRUFBQUEsR0FBRyxFQUFFQyxHQUZjO0FBR25CRyxFQUFBQSxNQUFNLEVBQUVSLE1BQU0sQ0FBQ1MsUUFBUCxDQUFnQkMsUUFITDtBQUluQkMsRUFBQUEsTUFBTSxFQUFFLElBSlc7QUFLbkJDLEVBQUFBLFFBQVEsRUFBRSxLQUxTO0FBTW5CQyxFQUFBQSxZQUFZLEVBQUU7QUFOSyxDQUFULENBQWQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvYm9vdHN0cmFwLmpzP2Y1NjgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFY2hvIGV4cG9zZXMgYW4gZXhwcmVzc2l2ZSBBUEkgZm9yIHN1YnNjcmliaW5nIHRvIGNoYW5uZWxzIGFuZCBsaXN0ZW5pbmdcbiAqIGZvciBldmVudHMgdGhhdCBhcmUgYnJvYWRjYXN0IGJ5IExhcmF2ZWwuIEVjaG8gYW5kIGV2ZW50IGJyb2FkY2FzdGluZ1xuICogYWxsb3dzIHlvdXIgdGVhbSB0byBlYXNpbHkgYnVpbGQgcm9idXN0IHJlYWwtdGltZSB3ZWIgYXBwbGljYXRpb25zLlxuICovXG4gaW1wb3J0IEVjaG8gZnJvbSBcImxhcmF2ZWwtZWNob1wiXG5cbiB3aW5kb3cuUHVzaGVyID0gcmVxdWlyZSgncHVzaGVyLWpzJyk7XG4gXG4gd2luZG93LkVjaG8gPSBuZXcgRWNobyh7XG4gICAgIGJyb2FkY2FzdGVyOiAncHVzaGVyJyxcbiAgICAga2V5OiBwcm9jZXNzLmVudi5NSVhfUFVTSEVSX0FQUF9LRVksXG4gICAgIHdzSG9zdDogd2luZG93LmxvY2F0aW9uLmhvc3RuYW1lLFxuICAgICB3c1BvcnQ6IDYwMDEsXG4gICAgIGZvcmNlVExTOiBmYWxzZSxcbiAgICAgZGlzYWJsZVN0YXRzOiB0cnVlLFxuIH0pO1xuIl0sIm5hbWVzIjpbIkVjaG8iLCJ3aW5kb3ciLCJQdXNoZXIiLCJyZXF1aXJlIiwiYnJvYWRjYXN0ZXIiLCJrZXkiLCJwcm9jZXNzIiwiZW52IiwiTUlYX1BVU0hFUl9BUFBfS0VZIiwid3NIb3N0IiwibG9jYXRpb24iLCJob3N0bmFtZSIsIndzUG9ydCIsImZvcmNlVExTIiwiZGlzYWJsZVN0YXRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/bootstrap.js\n");

/***/ }),

/***/ "./resources/js/components/FilePicker/FilePicker.js":
/*!**********************************************************!*\
  !*** ./resources/js/components/FilePicker/FilePicker.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _FilePickerBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FilePickerBase */ \"./resources/js/components/FilePicker/FilePickerBase.js\");\n/* harmony import */ var _FilePickerItem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FilePickerItem */ \"./resources/js/components/FilePicker/FilePickerItem.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\n\nvar FilePicker = /*#__PURE__*/function (_FilePickerBase) {\n  _inherits(FilePicker, _FilePickerBase);\n\n  var _super = _createSuper(FilePicker);\n\n  function FilePicker() {\n    _classCallCheck(this, FilePicker);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FilePicker, [{\n    key: \"onAdded\",\n    value: function onAdded() {\n      _get(_getPrototypeOf(FilePicker.prototype), \"onAdded\", this).call(this);\n\n      this.path = 'root';\n      this.channel.subscribed(this.fetch.bind(this));\n    }\n  }]);\n\n  return FilePicker;\n}(_FilePickerBase__WEBPACK_IMPORTED_MODULE_0__.FilePickerBase);\n\nFilePicker.template =\n/*html*/\n\"\\n<div>\\n    \".concat(_FilePickerItem__WEBPACK_IMPORTED_MODULE_1__.default, \"\\n</div>\\n\");\ncustomElements.define('filepicker-root', FilePicker);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvY29tcG9uZW50cy9GaWxlUGlja2VyL0ZpbGVQaWNrZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBRUE7O0lBRU1FOzs7Ozs7Ozs7Ozs7O1dBRUYsbUJBQVU7QUFDTjs7QUFDQSxXQUFLQyxJQUFMLEdBQVksTUFBWjtBQUNBLFdBQUtDLE9BQUwsQ0FBYUMsVUFBYixDQUF3QixLQUFLQyxLQUFMLENBQVdDLElBQVgsQ0FBZ0IsSUFBaEIsQ0FBeEI7QUFDSDs7OztFQU5vQlA7O0FBU3pCRSxVQUFVLENBQUNNLFFBQVg7QUFBc0I7QUFBdEIsdUJBRU1QLG9EQUZOO0FBS0FRLGNBQWMsQ0FBQ0MsTUFBZixDQUFzQixpQkFBdEIsRUFBeUNSLFVBQXpDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2pzL2NvbXBvbmVudHMvRmlsZVBpY2tlci9GaWxlUGlja2VyLmpzPzZkNTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRmlsZVBpY2tlckJhc2UgfSBmcm9tICcuL0ZpbGVQaWNrZXJCYXNlJztcbmltcG9ydCAnLi9GaWxlUGlja2VySXRlbSc7XG5cbmltcG9ydCBJVEVNX1RFTVBMQVRFIGZyb20gJy4vRmlsZVBpY2tlckl0ZW0nO1xuXG5jbGFzcyBGaWxlUGlja2VyIGV4dGVuZHMgRmlsZVBpY2tlckJhc2Uge1xuXG4gICAgb25BZGRlZCgpIHtcbiAgICAgICAgc3VwZXIub25BZGRlZCgpXG4gICAgICAgIHRoaXMucGF0aCA9ICdyb290J1xuICAgICAgICB0aGlzLmNoYW5uZWwuc3Vic2NyaWJlZCh0aGlzLmZldGNoLmJpbmQodGhpcykpXG4gICAgfVxufVxuXG5GaWxlUGlja2VyLnRlbXBsYXRlID0gLypodG1sKi9gXG48ZGl2PlxuICAgICR7SVRFTV9URU1QTEFURX1cbjwvZGl2PlxuYFxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdmaWxlcGlja2VyLXJvb3QnLCBGaWxlUGlja2VyKTsiXSwibmFtZXMiOlsiRmlsZVBpY2tlckJhc2UiLCJJVEVNX1RFTVBMQVRFIiwiRmlsZVBpY2tlciIsInBhdGgiLCJjaGFubmVsIiwic3Vic2NyaWJlZCIsImZldGNoIiwiYmluZCIsInRlbXBsYXRlIiwiY3VzdG9tRWxlbWVudHMiLCJkZWZpbmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/components/FilePicker/FilePicker.js\n");

/***/ }),

/***/ "./resources/js/components/FilePicker/FilePickerBase.js":
/*!**************************************************************!*\
  !*** ./resources/js/components/FilePicker/FilePickerBase.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FilePickerBase\": () => (/* binding */ FilePickerBase),\n/* harmony export */   \"TYPE_FILE\": () => (/* binding */ TYPE_FILE),\n/* harmony export */   \"TYPE_DIRECTORY\": () => (/* binding */ TYPE_DIRECTORY)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar TYPE_DIRECTORY = 'd';\nvar TYPE_FILE = 'f';\n\nvar FilePickerBase = /*#__PURE__*/function (_Slim) {\n  _inherits(FilePickerBase, _Slim);\n\n  var _super = _createSuper(FilePickerBase);\n\n  function FilePickerBase() {\n    var _this;\n\n    _classCallCheck(this, FilePickerBase);\n\n    _this = _super.call(this);\n    _this.items = [];\n    _this.wsUrl = [_this.wsBaseUrl];\n    return _this;\n  }\n\n  _createClass(FilePickerBase, [{\n    key: \"onAdded\",\n    value: function onAdded() {\n      this.wsChannel = \"\".concat(this.wsEvent, \".\").concat(this.channelHash);\n      this.channel = window.Echo.channel(this.wsChannel);\n      this.channel.listen(this.wsEvent, this.onWsEvent.bind(this));\n    }\n  }, {\n    key: \"onRemoved\",\n    value: function onRemoved() {\n      this.items = [];\n      this.channel.stopListening(this.wsEvent);\n      window.Echo.leave(this.wsChannel);\n    }\n  }, {\n    key: \"onWsEvent\",\n    value: function onWsEvent(e) {\n      this.items = e.items;\n      console.info('Fetched %d items in %s', this.items.length, this.path);\n      document.dispatchEvent(new CustomEvent('loading', {\n        detail: false\n      }));\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      if (!this.items.length) {\n        if (TYPE_DIRECTORY === this.type) {\n          this.fetch();\n        } else if (TYPE_FILE === this.type) {\n          this.handleFileClick();\n        }\n      }\n    }\n  }, {\n    key: \"handleFileClick\",\n    value: function handleFileClick() {\n      var evt = new CustomEvent('file-clicked', {\n        detail: {\n          path: this.path,\n          channel: this.channelHash,\n          mime: this.mime,\n          size: this.size,\n          type: this.type\n        }\n      });\n      document.dispatchEvent(evt);\n    }\n  }, {\n    key: \"fetch\",\n    value: function (_fetch) {\n      function fetch() {\n        return _fetch.apply(this, arguments);\n      }\n\n      fetch.toString = function () {\n        return _fetch.toString();\n      };\n\n      return fetch;\n    }( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n      var response, error;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.info('Fetch items in %s', this.path);\n              _context.prev = 1;\n              document.dispatchEvent(new CustomEvent('loading', {\n                detail: true\n              }));\n              this.classList.add(this.loadingClass);\n              _context.next = 6;\n              return fetch(this.wsUrl.join(''));\n\n            case 6:\n              response = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 12;\n                break;\n              }\n\n              _context.next = 10;\n              return response.json();\n\n            case 10:\n              error = _context.sent;\n              throw new Error(error.message);\n\n            case 12:\n              _context.next = 19;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](1);\n              console.error(_context.t0);\n              document.dispatchEvent(new CustomEvent('loading', {\n                detail: false\n              }));\n              document.dispatchEvent(new CustomEvent('toast', {\n                detail: {\n                  message: _context.t0,\n                  type: 'error'\n                }\n              }));\n\n            case 19:\n              _context.prev = 19;\n              this.classList.remove(this.loadingClass);\n              return _context.finish(19);\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[1, 14, 19, 22]]);\n    })))\n  }]);\n\n  return FilePickerBase;\n}(Slim);\n\nFilePickerBase.prototype.wsBaseUrl = '/file-picker/';\nFilePickerBase.prototype.wsEvent = 'FilePicker';\nFilePickerBase.prototype.loadingClass = 'loading';\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvY29tcG9uZW50cy9GaWxlUGlja2VyL0ZpbGVQaWNrZXJCYXNlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQU1BLGNBQWMsR0FBRyxHQUF2QjtBQUNBLElBQU1DLFNBQVMsR0FBRyxHQUFsQjs7SUFDTUM7Ozs7O0FBRUYsNEJBQWM7QUFBQTs7QUFBQTs7QUFDVjtBQUNBLFVBQUtDLEtBQUwsR0FBYSxFQUFiO0FBQ0EsVUFBS0MsS0FBTCxHQUFhLENBQUMsTUFBS0MsU0FBTixDQUFiO0FBSFU7QUFJYjs7OztXQUVELG1CQUFVO0FBQ04sV0FBS0MsU0FBTCxhQUFvQixLQUFLQyxPQUF6QixjQUFvQyxLQUFLQyxXQUF6QztBQUNBLFdBQUtDLE9BQUwsR0FBZUMsTUFBTSxDQUFDQyxJQUFQLENBQVlGLE9BQVosQ0FBb0IsS0FBS0gsU0FBekIsQ0FBZjtBQUNBLFdBQUtHLE9BQUwsQ0FBYUcsTUFBYixDQUFvQixLQUFLTCxPQUF6QixFQUFrQyxLQUFLTSxTQUFMLENBQWVDLElBQWYsQ0FBb0IsSUFBcEIsQ0FBbEM7QUFDSDs7O1dBRUQscUJBQVk7QUFDUixXQUFLWCxLQUFMLEdBQWEsRUFBYjtBQUNBLFdBQUtNLE9BQUwsQ0FBYU0sYUFBYixDQUEyQixLQUFLUixPQUFoQztBQUNBRyxNQUFBQSxNQUFNLENBQUNDLElBQVAsQ0FBWUssS0FBWixDQUFrQixLQUFLVixTQUF2QjtBQUNIOzs7V0FFRCxtQkFBVVcsQ0FBVixFQUFhO0FBQ1QsV0FBS2QsS0FBTCxHQUFhYyxDQUFDLENBQUNkLEtBQWY7QUFDQWUsTUFBQUEsT0FBTyxDQUFDQyxJQUFSLENBQWEsd0JBQWIsRUFBdUMsS0FBS2hCLEtBQUwsQ0FBV2lCLE1BQWxELEVBQTBELEtBQUtDLElBQS9EO0FBQ0FDLE1BQUFBLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixJQUFJQyxXQUFKLENBQWdCLFNBQWhCLEVBQTJCO0FBQUNDLFFBQUFBLE1BQU0sRUFBRTtBQUFULE9BQTNCLENBQXZCO0FBQ0g7OztXQUVELHVCQUFjO0FBQ1YsVUFBSSxDQUFDLEtBQUt0QixLQUFMLENBQVdpQixNQUFoQixFQUF3QjtBQUNwQixZQUFJcEIsY0FBYyxLQUFLLEtBQUswQixJQUE1QixFQUFrQztBQUM5QixlQUFLQyxLQUFMO0FBQ0gsU0FGRCxNQUVPLElBQUkxQixTQUFTLEtBQUssS0FBS3lCLElBQXZCLEVBQTZCO0FBQ2hDLGVBQUtFLGVBQUw7QUFDSDtBQUNKO0FBQ0o7OztXQUVELDJCQUFrQjtBQUNkLFVBQUlDLEdBQUcsR0FBRyxJQUFJTCxXQUFKLENBQWdCLGNBQWhCLEVBQWdDO0FBQ3RDQyxRQUFBQSxNQUFNLEVBQUU7QUFDSkosVUFBQUEsSUFBSSxFQUFFLEtBQUtBLElBRFA7QUFFSlosVUFBQUEsT0FBTyxFQUFFLEtBQUtELFdBRlY7QUFHSnNCLFVBQUFBLElBQUksRUFBRSxLQUFLQSxJQUhQO0FBSUpDLFVBQUFBLElBQUksRUFBRSxLQUFLQSxJQUpQO0FBS0pMLFVBQUFBLElBQUksRUFBRSxLQUFLQTtBQUxQO0FBRDhCLE9BQWhDLENBQVY7QUFVQUosTUFBQUEsUUFBUSxDQUFDQyxhQUFULENBQXVCTSxHQUF2QjtBQUNIOzs7Ozs7Ozs7Ozs7OzJIQUVEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNJWCxjQUFBQSxPQUFPLENBQUNDLElBQVIsQ0FBYSxtQkFBYixFQUFrQyxLQUFLRSxJQUF2QztBQURKO0FBR1FDLGNBQUFBLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixJQUFJQyxXQUFKLENBQWdCLFNBQWhCLEVBQTJCO0FBQUNDLGdCQUFBQSxNQUFNLEVBQUU7QUFBVCxlQUEzQixDQUF2QjtBQUNBLG1CQUFLTyxTQUFMLENBQWVDLEdBQWYsQ0FBbUIsS0FBS0MsWUFBeEI7QUFKUjtBQUFBLHFCQUs2QlAsS0FBSyxDQUFDLEtBQUt2QixLQUFMLENBQVcrQixJQUFYLENBQWdCLEVBQWhCLENBQUQsQ0FMbEM7O0FBQUE7QUFLWUMsY0FBQUEsUUFMWjs7QUFBQSxvQkFNWUEsUUFBUSxDQUFDQyxNQUFULEtBQW9CLEdBTmhDO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUEscUJBTzhCRCxRQUFRLENBQUNFLElBQVQsRUFQOUI7O0FBQUE7QUFPZ0JDLGNBQUFBLEtBUGhCO0FBQUEsb0JBUWtCLElBQUlDLEtBQUosQ0FBVUQsS0FBSyxDQUFDRSxPQUFoQixDQVJsQjs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBV1F2QixjQUFBQSxPQUFPLENBQUNxQixLQUFSO0FBQ0FqQixjQUFBQSxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsSUFBSUMsV0FBSixDQUFnQixTQUFoQixFQUEyQjtBQUFDQyxnQkFBQUEsTUFBTSxFQUFFO0FBQVQsZUFBM0IsQ0FBdkI7QUFDQUgsY0FBQUEsUUFBUSxDQUFDQyxhQUFULENBQXVCLElBQUlDLFdBQUosQ0FBZ0IsT0FBaEIsRUFBeUI7QUFDNUNDLGdCQUFBQSxNQUFNLEVBQUU7QUFDSmdCLGtCQUFBQSxPQUFPLGFBREg7QUFFSmYsa0JBQUFBLElBQUksRUFBRTtBQUZGO0FBRG9DLGVBQXpCLENBQXZCOztBQWJSO0FBQUE7QUFvQlEsbUJBQUtNLFNBQUwsQ0FBZVUsTUFBZixDQUFzQixLQUFLUixZQUEzQjtBQXBCUjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7OztFQWxEeUJTOztBQTJFN0J6QyxjQUFjLENBQUMwQyxTQUFmLENBQXlCdkMsU0FBekIsR0FBcUMsZUFBckM7QUFDQUgsY0FBYyxDQUFDMEMsU0FBZixDQUF5QnJDLE9BQXpCLEdBQW1DLFlBQW5DO0FBQ0FMLGNBQWMsQ0FBQzBDLFNBQWYsQ0FBeUJWLFlBQXpCLEdBQXdDLFNBQXhDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2pzL2NvbXBvbmVudHMvRmlsZVBpY2tlci9GaWxlUGlja2VyQmFzZS5qcz9jNWRjIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFRZUEVfRElSRUNUT1JZID0gJ2QnXG5jb25zdCBUWVBFX0ZJTEUgPSAnZidcbmNsYXNzIEZpbGVQaWNrZXJCYXNlIGV4dGVuZHMgU2xpbSB7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKVxuICAgICAgICB0aGlzLml0ZW1zID0gW11cbiAgICAgICAgdGhpcy53c1VybCA9IFt0aGlzLndzQmFzZVVybF1cbiAgICB9XG5cbiAgICBvbkFkZGVkKCkge1xuICAgICAgICB0aGlzLndzQ2hhbm5lbCA9IGAke3RoaXMud3NFdmVudH0uJHt0aGlzLmNoYW5uZWxIYXNofWBcbiAgICAgICAgdGhpcy5jaGFubmVsID0gd2luZG93LkVjaG8uY2hhbm5lbCh0aGlzLndzQ2hhbm5lbClcbiAgICAgICAgdGhpcy5jaGFubmVsLmxpc3Rlbih0aGlzLndzRXZlbnQsIHRoaXMub25Xc0V2ZW50LmJpbmQodGhpcykpO1xuICAgIH1cblxuICAgIG9uUmVtb3ZlZCgpIHtcbiAgICAgICAgdGhpcy5pdGVtcyA9IFtdXG4gICAgICAgIHRoaXMuY2hhbm5lbC5zdG9wTGlzdGVuaW5nKHRoaXMud3NFdmVudClcbiAgICAgICAgd2luZG93LkVjaG8ubGVhdmUodGhpcy53c0NoYW5uZWwpXG4gICAgfVxuXG4gICAgb25Xc0V2ZW50KGUpIHtcbiAgICAgICAgdGhpcy5pdGVtcyA9IGUuaXRlbXNcbiAgICAgICAgY29uc29sZS5pbmZvKCdGZXRjaGVkICVkIGl0ZW1zIGluICVzJywgdGhpcy5pdGVtcy5sZW5ndGgsIHRoaXMucGF0aClcbiAgICAgICAgZG9jdW1lbnQuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoJ2xvYWRpbmcnLCB7ZGV0YWlsOiBmYWxzZX0pKVxuICAgIH1cblxuICAgIGhhbmRsZUNsaWNrKCkge1xuICAgICAgICBpZiAoIXRoaXMuaXRlbXMubGVuZ3RoKSB7XG4gICAgICAgICAgICBpZiAoVFlQRV9ESVJFQ1RPUlkgPT09IHRoaXMudHlwZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuZmV0Y2goKVxuICAgICAgICAgICAgfSBlbHNlIGlmIChUWVBFX0ZJTEUgPT09IHRoaXMudHlwZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlRmlsZUNsaWNrKClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGhhbmRsZUZpbGVDbGljaygpIHtcbiAgICAgICAgbGV0IGV2dCA9IG5ldyBDdXN0b21FdmVudCgnZmlsZS1jbGlja2VkJywge1xuICAgICAgICAgICAgZGV0YWlsOiB7XG4gICAgICAgICAgICAgICAgcGF0aDogdGhpcy5wYXRoLFxuICAgICAgICAgICAgICAgIGNoYW5uZWw6IHRoaXMuY2hhbm5lbEhhc2gsXG4gICAgICAgICAgICAgICAgbWltZTogdGhpcy5taW1lLFxuICAgICAgICAgICAgICAgIHNpemU6IHRoaXMuc2l6ZSxcbiAgICAgICAgICAgICAgICB0eXBlOiB0aGlzLnR5cGVcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcblxuICAgICAgICBkb2N1bWVudC5kaXNwYXRjaEV2ZW50KGV2dClcbiAgICB9XG5cbiAgICBhc3luYyBmZXRjaCgpIHtcbiAgICAgICAgY29uc29sZS5pbmZvKCdGZXRjaCBpdGVtcyBpbiAlcycsIHRoaXMucGF0aClcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGRvY3VtZW50LmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KCdsb2FkaW5nJywge2RldGFpbDogdHJ1ZX0pKVxuICAgICAgICAgICAgdGhpcy5jbGFzc0xpc3QuYWRkKHRoaXMubG9hZGluZ0NsYXNzKVxuICAgICAgICAgICAgbGV0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godGhpcy53c1VybC5qb2luKCcnKSlcbiAgICAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgIT09IDIwMCkge1xuICAgICAgICAgICAgICAgIGxldCBlcnJvciA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKVxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvci5tZXNzYWdlKVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcilcbiAgICAgICAgICAgIGRvY3VtZW50LmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KCdsb2FkaW5nJywge2RldGFpbDogZmFsc2V9KSlcbiAgICAgICAgICAgIGRvY3VtZW50LmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KCd0b2FzdCcsIHtcbiAgICAgICAgICAgICAgICBkZXRhaWw6IHtcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogZXJyb3IsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdlcnJvcidcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KSlcbiAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgIHRoaXMuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLmxvYWRpbmdDbGFzcylcbiAgICAgICAgfVxuICAgIH1cbn1cblxuRmlsZVBpY2tlckJhc2UucHJvdG90eXBlLndzQmFzZVVybCA9ICcvZmlsZS1waWNrZXIvJ1xuRmlsZVBpY2tlckJhc2UucHJvdG90eXBlLndzRXZlbnQgPSAnRmlsZVBpY2tlcidcbkZpbGVQaWNrZXJCYXNlLnByb3RvdHlwZS5sb2FkaW5nQ2xhc3MgPSAnbG9hZGluZydcblxuZXhwb3J0IHsgRmlsZVBpY2tlckJhc2UsIFRZUEVfRklMRSwgVFlQRV9ESVJFQ1RPUlkgfSJdLCJuYW1lcyI6WyJUWVBFX0RJUkVDVE9SWSIsIlRZUEVfRklMRSIsIkZpbGVQaWNrZXJCYXNlIiwiaXRlbXMiLCJ3c1VybCIsIndzQmFzZVVybCIsIndzQ2hhbm5lbCIsIndzRXZlbnQiLCJjaGFubmVsSGFzaCIsImNoYW5uZWwiLCJ3aW5kb3ciLCJFY2hvIiwibGlzdGVuIiwib25Xc0V2ZW50IiwiYmluZCIsInN0b3BMaXN0ZW5pbmciLCJsZWF2ZSIsImUiLCJjb25zb2xlIiwiaW5mbyIsImxlbmd0aCIsInBhdGgiLCJkb2N1bWVudCIsImRpc3BhdGNoRXZlbnQiLCJDdXN0b21FdmVudCIsImRldGFpbCIsInR5cGUiLCJmZXRjaCIsImhhbmRsZUZpbGVDbGljayIsImV2dCIsIm1pbWUiLCJzaXplIiwiY2xhc3NMaXN0IiwiYWRkIiwibG9hZGluZ0NsYXNzIiwiam9pbiIsInJlc3BvbnNlIiwic3RhdHVzIiwianNvbiIsImVycm9yIiwiRXJyb3IiLCJtZXNzYWdlIiwicmVtb3ZlIiwiU2xpbSIsInByb3RvdHlwZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/components/FilePicker/FilePickerBase.js\n");

/***/ }),

/***/ "./resources/js/components/FilePicker/FilePickerItem.js":
/*!**************************************************************!*\
  !*** ./resources/js/components/FilePicker/FilePickerItem.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _FilePickerBase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FilePickerBase */ \"./resources/js/components/FilePicker/FilePickerBase.js\");\n/* harmony import */ var _iconify_iconify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @iconify/iconify */ \"./node_modules/@iconify/iconify/dist/iconify.min.js\");\n/* harmony import */ var _iconify_iconify__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_iconify_iconify__WEBPACK_IMPORTED_MODULE_2__);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\nvar FFMPEG_PROCESS_STAGE_PENDING = 0;\nvar FFMPEG_PROCESS_STAGE_RUNNING = 1;\nvar FFMPEG_PROCESS_STAGE_DONE = 2;\n\nvar FilePickerItem = /*#__PURE__*/function (_FilePickerBase) {\n  _inherits(FilePickerItem, _FilePickerBase);\n\n  var _super = _createSuper(FilePickerItem);\n\n  function FilePickerItem() {\n    var _this;\n\n    _classCallCheck(this, FilePickerItem);\n\n    _this = _super.call(this);\n\n    _this.wsUrl.push(encodeURIComponent(_this.path));\n\n    _this.isDirectory = _this.type === _FilePickerBase__WEBPACK_IMPORTED_MODULE_1__.TYPE_DIRECTORY;\n    _this.isFile = _this.type === _FilePickerBase__WEBPACK_IMPORTED_MODULE_1__.TYPE_FILE;\n    _this.canConcat = false;\n    _this.concatPending = false;\n    _this.concatRunning = false;\n    return _this;\n  }\n\n  _createClass(FilePickerItem, [{\n    key: \"onAdded\",\n    value: function onAdded() {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(FilePickerItem.prototype), \"onAdded\", this).call(this);\n\n      requestAnimationFrame(function () {\n        return _iconify_iconify__WEBPACK_IMPORTED_MODULE_2___default().scan(_this2.shadowRoot);\n      });\n    }\n  }, {\n    key: \"onWsEvent\",\n    value: function onWsEvent(e) {\n      _get(_getPrototypeOf(FilePickerItem.prototype), \"onWsEvent\", this).call(this, e);\n\n      this.setCanConcat();\n    }\n  }, {\n    key: \"setCanConcat\",\n    value: function setCanConcat() {\n      var _this3 = this;\n\n      this.canConcat = this.videoFiles.length > 1 && !this.videoFiles.find(function (i) {\n        return i.name === \"\".concat(_this3.channelHash, \"-concat.ts\");\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      _get(_getPrototypeOf(FilePickerItem.prototype), \"handleClick\", this).call(this);\n\n      if (this.items.length) {\n        this.items = [];\n        this.setCanConcat();\n      }\n    }\n  }, {\n    key: \"requestConcat\",\n    value: function requestConcat() {\n      var _this4 = this;\n\n      console.info('Concat video files in %s', this.path);\n      var event = 'FFMpegProcess';\n      var channel = window.Echo.channel(\"FFMpegProcess.\".concat(this.channelHash));\n\n      try {\n        channel.listen(event, this.handleProcessEvent.bind(this, channel, event));\n        channel.subscribed( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n          return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return fetch(\"/concat/\".concat(_this4.path));\n\n                case 2:\n                  return _context.abrupt(\"return\", _context.sent);\n\n                case 3:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        })));\n        console.info('%s has subscribed to channel %s', this.path, channel.name);\n      } catch (error) {\n        this.leaveProcessChannel(channel, event);\n        console.error(error);\n      }\n    }\n  }, {\n    key: \"requestTranscode\",\n    value: function requestTranscode() {\n      if (_FilePickerBase__WEBPACK_IMPORTED_MODULE_1__.TYPE_FILE === this.type) {\n        var evt = new CustomEvent('file-clicked', {\n          detail: {\n            path: this.path,\n            channel: this.channelHash,\n            mime: this.mime,\n            size: this.size,\n            type: this.type\n          }\n        });\n        document.dispatchEvent(evt);\n      }\n      /*\n              console.info('Transcode video file %s', this.path)\n              let event = 'FFMpegProcess'\n              let channel = window.Echo.channel(`FFMpegProcess.${this.channelHash}`)\n              try {\n                  channel.listen(event, this.handleProcessEvent.bind(this, channel, event))\n                  channel.subscribed(async () => await fetch(`/transcode/${this.path}`))\n                  console.info('%s has subscribed to channel %s', this.path, channel.name)\n              } catch (error) {\n                  this.leaveProcessChannel(channel, event);\n                  console.error(error)\n              }\n              */\n\n    }\n  }, {\n    key: \"handleProcessEvent\",\n    value: function handleProcessEvent(channel, event, ws) {\n      var process = ws.name.split('.').shift();\n      var processU = process[0].toUpperCase() + process.slice(1);\n\n      switch (ws.name) {\n        case \"\".concat(process, \".pending\"):\n          console.info('%s video file %s queued at %s', processU, this.path, new Date().toLocaleTimeString());\n          this.concatPending = true;\n          this.canConcat = false;\n          break;\n\n        case \"\".concat(process, \".running\"):\n          console.info('%s video file %s started at %s', processU, this.path, new Date().toLocaleTimeString());\n          this.concatRunning = true;\n          this.canConcat = false;\n          break;\n\n        case \"\".concat(process, \".done\"):\n          console.info('%s video files in %s done at %s', processU, this.path, new Date().toLocaleTimeString());\n          this.leaveProcessChannel(channel, event);\n\n          if (this.items.length) {\n            this.items = [];\n            requestAnimationFrame(this.fetch.bind(this));\n          }\n\n          break;\n\n        case \"\".concat(process, \".progress\"):\n          console.info('%s progress: %d%%', processU, ws.data.percentage);\n          break;\n\n        case \"\".concat(process, \".failed\"):\n          console.error('%s video files in %s failed', processU, this.path);\n          this.leaveProcessChannel(channel, event);\n          this.setCanConcat();\n      }\n    }\n  }, {\n    key: \"leaveProcessChannel\",\n    value: function leaveProcessChannel(channel, event) {\n      channel.stopListening(event);\n      window.Echo.leave(channel.name);\n      console.info('%s has left channel %s', this.path, channel.name);\n    }\n  }, {\n    key: \"icon\",\n    get: function get() {\n      if (this.isDirectory) {\n        return 'mdi-folder';\n      }\n\n      switch (this.fileType) {\n        case 'video':\n          return 'mdi-filmstrip';\n\n        case 'text':\n          return 'mdi-note-text-outline';\n\n        case 'image':\n          return 'mdi-file-image-outline';\n\n        default:\n          return 'mdi-file';\n      }\n    }\n  }, {\n    key: \"title\",\n    get: function get() {\n      var result = this.path.trim();\n\n      if (this.mime) {\n        result += \" - \".concat(this.mime);\n      }\n\n      if (this.size) {\n        result += \" - \".concat(this.size);\n      }\n\n      if (this.lastModified) {\n        var d = new Date(this.lastModified * 1000);\n        var date = d.toLocaleDateString(d.getTimezoneOffset(), {\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit'\n        });\n        var time = d.toLocaleTimeString(d.getTimezoneOffset());\n        result += \" - \".concat(date, \" \").concat(time);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"fileType\",\n    get: function get() {\n      var mime = this.mime.split('/').shift().toLowerCase();\n\n      switch (mime) {\n        case 'video':\n        case 'text':\n        case 'image':\n          return mime;\n\n        default:\n          return 'unknown';\n      }\n    }\n  }, {\n    key: \"hasFiles\",\n    get: function get() {\n      return this.isDirectory && this.items.filter(function (i) {\n        return i.type === _FilePickerBase__WEBPACK_IMPORTED_MODULE_1__.TYPE_FILE;\n      }).length > 0;\n    }\n  }, {\n    key: \"videoFiles\",\n    get: function get() {\n      if (this.hasFiles) {\n        return this.items.filter(function (i) {\n          return i.type === _FilePickerBase__WEBPACK_IMPORTED_MODULE_1__.TYPE_FILE && 'video' === i.mime.split('/').shift().toLowerCase();\n        });\n      }\n\n      return [];\n    }\n  }]);\n\n  return FilePickerItem;\n}(_FilePickerBase__WEBPACK_IMPORTED_MODULE_1__.FilePickerBase);\n\nvar CSS =\n/*css*/\n\"\\n<style>\\n    :host {\\n        display: block;\\n    }\\n    :host(.\".concat(_FilePickerBase__WEBPACK_IMPORTED_MODULE_1__.FilePickerBase.prototype.loadingClass, \") {\\n        animation: pulse 1s infinite;\\n    }\\n    span {\\n        display: inline-block;\\n        cursor: pointer;\\n        padding: calc(var(--gutter-base) / 4) calc(var(--gutter-base) / 2);\\n    }\\n    span:hover {\\n        background-color: var(--clr-bg-100);\\n    }\\n    filepicker-item {\\n        margin-left: var(--gutter-base);\\n    }\\n    @keyframes pulse {\\n        0% {\\n            opacity: 1;\\n        }\\n        50% {\\n            opacity: .5;\\n        }\\n        100% {\\n            opacity: 1;\\n        }\\n    }\\n</style>\\n\");\nvar ICON_TEMPLATE =\n/*html*/\n\"\\n<span class=\\\"iconify\\\" data-icon=\\\"{{ this.icon }}\\\"></span>\\n\";\n/** preserve whitespaces! */\n\nvar ITEM_TEMPLATE =\n/*html*/\n\"\\n<filepicker-item\\n    *foreach=\\\"{{ this.items }}\\\"\\n    .type=\\\"{{ item.type }}\\\"\\n    .path=\\\"{{ item.path }}\\\"\\n    .channel-hash=\\\"{{ item.channel }}\\\"\\n    .mime=\\\"{{ item.mime }}\\\"\\n    .size=\\\"{{ item.size }}\\\"\\n    .last-modified=\\\"{{ item.lastModified }}\\\"\\n>\\n        {{ item.name }}\\n</filepicker-item>\\n\";\nFilePickerItem.template =\n/*html*/\n\"\\n\".concat(CSS, \"\\n<div>\\n    <div>\\n        \").concat(ICON_TEMPLATE, \"\\n        <span @click=\\\"this.handleClick()\\\" title=\\\"{{ this.title }}\\\">\\n            <slot></slot>\\n        </span>\\n        <span *if=\\\"{{ this.canConcat }}\\\" @click=\\\"this.requestConcat()\\\">Concat?</span>\\n    </div>\\n    \").concat(ITEM_TEMPLATE, \"\\n</div>\\n\");\ncustomElements.define('filepicker-item', FilePickerItem);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ITEM_TEMPLATE);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/components/FilePicker/FilePickerItem.js\n");

/***/ }),

/***/ "./resources/js/components/Loading.js":
/*!********************************************!*\
  !*** ./resources/js/components/Loading.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var slim_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! slim-js */ \"./node_modules/slim-js/dist/index.js\");\n/* harmony import */ var _slim_directives__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../slim-directives */ \"./resources/js/slim-directives.js\");\n/* harmony import */ var _iconify_iconify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @iconify/iconify */ \"./node_modules/@iconify/iconify/dist/iconify.min.js\");\n/* harmony import */ var _iconify_iconify__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_iconify_iconify__WEBPACK_IMPORTED_MODULE_2__);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\n\nvar Loading = /*#__PURE__*/function (_Slim) {\n  _inherits(Loading, _Slim);\n\n  var _super = _createSuper(Loading);\n\n  function Loading() {\n    _classCallCheck(this, Loading);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Loading, [{\n    key: \"onAdded\",\n    value: function onAdded() {\n      var _this = this;\n\n      document.addEventListener('loading', function (e) {\n        return _this.classList.toggle('active', !!e.detail);\n      });\n      requestAnimationFrame(function () {\n        return _iconify_iconify__WEBPACK_IMPORTED_MODULE_2___default().scan(_this.shadowRoot);\n      });\n    }\n  }]);\n\n  return Loading;\n}(slim_js__WEBPACK_IMPORTED_MODULE_0__.Slim);\n\nLoading.template =\n/*html*/\n\"\\n<style>\\n    :host {\\n        position: fixed;\\n        inset: 0;\\n        background-color: transparent;\\n        transition: var(--loading-transition);\\n        display: flex;\\n        justify-content: center;\\n        align-items: center;\\n    }\\n    :host(.active) {\\n        background-color: var(--clr-bg-0-translucent);\\n    }\\n    :host(:not(.active)) {\\n        display: none;\\n    }\\n    @keyframes spin {\\n        from {\\n            transform: rotate(0deg);\\n        }\\n        to {\\n            transform: rotate(360deg);\\n        }\\n    }\\n    main {\\n        animation: spin 1s infinite;\\n        font-size: 5rem;\\n    }\\n</style>\\n<main>\\n    <span class=\\\"iconify\\\" data-icon=\\\"mdi-loading\\\"></span>\\n</main>\\n\";\ncustomElements.define('transcoder-loading', Loading);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvY29tcG9uZW50cy9Mb2FkaW5nLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTs7SUFFTUU7Ozs7Ozs7Ozs7Ozs7V0FFRixtQkFBVTtBQUFBOztBQUNOQyxNQUFBQSxRQUFRLENBQUNDLGdCQUFULENBQTBCLFNBQTFCLEVBQXFDLFVBQUFDLENBQUM7QUFBQSxlQUFJLEtBQUksQ0FBQ0MsU0FBTCxDQUFlQyxNQUFmLENBQXNCLFFBQXRCLEVBQWdDLENBQUMsQ0FBQ0YsQ0FBQyxDQUFDRyxNQUFwQyxDQUFKO0FBQUEsT0FBdEM7QUFDQUMsTUFBQUEscUJBQXFCLENBQUM7QUFBQSxlQUFNUiw0REFBQSxDQUFhLEtBQUksQ0FBQ1UsVUFBbEIsQ0FBTjtBQUFBLE9BQUQsQ0FBckI7QUFDSDs7OztFQUxpQlg7O0FBUXRCRSxPQUFPLENBQUNVLFFBQVI7QUFBbUI7QUFBbkI7QUFtQ0FDLGNBQWMsQ0FBQ0MsTUFBZixDQUFzQixvQkFBdEIsRUFBNENaLE9BQTVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2pzL2NvbXBvbmVudHMvTG9hZGluZy5qcz82ZGM0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNsaW0gfSBmcm9tICdzbGltLWpzJ1xuaW1wb3J0ICcuLi9zbGltLWRpcmVjdGl2ZXMnXG5pbXBvcnQgSWNvbmlmeSBmcm9tICdAaWNvbmlmeS9pY29uaWZ5J1xuXG5jbGFzcyBMb2FkaW5nIGV4dGVuZHMgU2xpbSB7XG5cbiAgICBvbkFkZGVkKCkge1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdsb2FkaW5nJywgZSA9PiB0aGlzLmNsYXNzTGlzdC50b2dnbGUoJ2FjdGl2ZScsICEhZS5kZXRhaWwpKVxuICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4gSWNvbmlmeS5zY2FuKHRoaXMuc2hhZG93Um9vdCkpXG4gICAgfVxufVxuXG5Mb2FkaW5nLnRlbXBsYXRlID0gLypodG1sKi9gXG48c3R5bGU+XG4gICAgOmhvc3Qge1xuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgIGluc2V0OiAwO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgdHJhbnNpdGlvbjogdmFyKC0tbG9hZGluZy10cmFuc2l0aW9uKTtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgfVxuICAgIDpob3N0KC5hY3RpdmUpIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY2xyLWJnLTAtdHJhbnNsdWNlbnQpO1xuICAgIH1cbiAgICA6aG9zdCg6bm90KC5hY3RpdmUpKSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICAgIEBrZXlmcmFtZXMgc3BpbiB7XG4gICAgICAgIGZyb20ge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XG4gICAgICAgIH1cbiAgICAgICAgdG8ge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBtYWluIHtcbiAgICAgICAgYW5pbWF0aW9uOiBzcGluIDFzIGluZmluaXRlO1xuICAgICAgICBmb250LXNpemU6IDVyZW07XG4gICAgfVxuPC9zdHlsZT5cbjxtYWluPlxuICAgIDxzcGFuIGNsYXNzPVwiaWNvbmlmeVwiIGRhdGEtaWNvbj1cIm1kaS1sb2FkaW5nXCI+PC9zcGFuPlxuPC9tYWluPlxuYFxuXG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ3RyYW5zY29kZXItbG9hZGluZycsIExvYWRpbmcpOyJdLCJuYW1lcyI6WyJTbGltIiwiSWNvbmlmeSIsIkxvYWRpbmciLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwiY2xhc3NMaXN0IiwidG9nZ2xlIiwiZGV0YWlsIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwic2NhbiIsInNoYWRvd1Jvb3QiLCJ0ZW1wbGF0ZSIsImN1c3RvbUVsZW1lbnRzIiwiZGVmaW5lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/components/Loading.js\n");

/***/ }),

/***/ "./resources/js/components/Toast.js":
/*!******************************************!*\
  !*** ./resources/js/components/Toast.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var slim_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! slim-js */ \"./node_modules/slim-js/dist/index.js\");\n/* harmony import */ var _slim_directives__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../slim-directives */ \"./resources/js/slim-directives.js\");\n/* harmony import */ var _iconify_iconify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @iconify/iconify */ \"./node_modules/@iconify/iconify/dist/iconify.min.js\");\n/* harmony import */ var _iconify_iconify__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_iconify_iconify__WEBPACK_IMPORTED_MODULE_2__);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\nvar STATES = ['success', 'info', 'warning', 'error'];\nvar DEFAULT_STATE = 'info';\n\nvar Toast = /*#__PURE__*/function (_Slim) {\n  _inherits(Toast, _Slim);\n\n  var _super = _createSuper(Toast);\n\n  function Toast() {\n    var _this;\n\n    _classCallCheck(this, Toast);\n\n    _this = _super.call(this);\n    _this.items = [];\n    document.addEventListener('toast', _this.show.bind(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Toast, [{\n    key: \"show\",\n    value: function show(e) {\n      var _this2 = this;\n\n      e.detail.type = STATES.indexOf(e.detail.type) > -1 ? e.detail.type : DEFAULT_STATE;\n      e.detail.id = \"\".concat(performance.now(), \"-\").concat(this.items.length);\n      this.items.unshift(e.detail);\n      slim_js__WEBPACK_IMPORTED_MODULE_0__.Utils.forceUpdate(this, 'items');\n      requestAnimationFrame(function () {\n        return _iconify_iconify__WEBPACK_IMPORTED_MODULE_2___default().scan(_this2.shadowRoot);\n      });\n      this.animateIn();\n    }\n  }, {\n    key: \"animateIn\",\n    value: function animateIn() {\n      var _this3 = this;\n\n      var node = this.shadowRoot.querySelector('main > div');\n      this.items[0].height = node.offsetHeight;\n      requestAnimationFrame(function () {\n        node.dataset.transitionIn = 'before';\n        requestAnimationFrame(function () {\n          node.style.height = \"\".concat(_this3.items[0].height, \"px\");\n          node.dataset.transition = 'in';\n          node.addEventListener('transitionend', function () {\n            delete node.dataset.transition;\n            node.style.height = '';\n          }, {\n            once: true\n          });\n          requestAnimationFrame(function () {\n            return delete node.dataset.transitionIn;\n          });\n        });\n      });\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(item) {\n      var _this4 = this;\n\n      var idx = this.items.findIndex(function (i) {\n        return item.id === i.id;\n      });\n\n      if (idx > -1) {\n        var node = this.shadowRoot.querySelectorAll('main > div')[idx];\n        node.style.height = \"\".concat(item.height, \"px\");\n        requestAnimationFrame(function () {\n          node.dataset.transition = 'out';\n          requestAnimationFrame(function () {\n            node.addEventListener('transitionend', function () {\n              _this4.items.splice(idx, 1);\n\n              node.style.height = '';\n              delete node.dataset.transition;\n              delete node.dataset.transitionOut;\n              slim_js__WEBPACK_IMPORTED_MODULE_0__.Utils.forceUpdate(_this4, 'items');\n            }, {\n              once: true\n            });\n            node.dataset.transitionOut = 'before';\n          });\n        });\n      }\n    }\n  }]);\n\n  return Toast;\n}(slim_js__WEBPACK_IMPORTED_MODULE_0__.Slim);\n\nToast.template =\n/*html*/\n\"\\n<style>\\n:host {\\n    position: fixed;\\n    right: 2rem;\\n    top: 2rem;\\n    display: block;\\n    overflow-y: hidden;\\n}\\nmain {\\n    display: flex;\\n    flex-direction: column;\\n    gap: .5rem;\\n}\\nmain > div {\\n    width: 240px;\\n    color: hsla(0, 0%, 100%, .8);\\n    border-radius: .5rem;\\n    position: relative;\\n    transform-origin: center top;\\n    transform: scaleY(1);\\n    opacity: 1;\\n    max-height: 10rem;\\n    overflow: hidden;\\n}\\nmain > div:hover {\\n    max-height: 100rem;\\n}\\nmain > div[data-transition=\\\"in\\\"],\\nmain > div[data-transition=\\\"out\\\"] {\\n    transition: all var(--transition-medium) linear;\\n}\\nmain > div[data-transition-in=\\\"before\\\"],\\nmain > div[data-transition-out=\\\"before\\\"] {\\n    opacity: 0;\\n    transform: scaleY(.01);\\n    height: 0 !important;\\n}\\nmain > div {\\n    background: hsla(var(--hue-alert), var(--sat-alert), var(--lit-alert), var(--clr-base-alpha));\\n    cursor: pointer;\\n}\\nmain > div.success {\\n    --hue-alert: var(--hue-success);\\n}\\nmain > div.info {\\n    --hue-alert: var(--hue-info);\\n}\\nmain > div.warning {\\n    --hue-alert: var(--hue-warning);\\n}\\nmain > div.error {\\n    --hue-alert: var(--hue-error);\\n}\\nsvg {\\n    display: none;\\n    margin: .1rem .5rem 0 0;\\n    flex-shrink: 0;\\n}\\ndiv.success svg[data-icon=\\\"mdi-thumb-up-outline\\\"],\\ndiv.info svg[data-icon=\\\"mdi-alert-box-outline\\\"],\\ndiv.warning svg[data-icon=\\\"mdi-alert-outline\\\"],\\ndiv.error svg[data-icon=\\\"mdi-alert-circle-outline\\\"] {\\n    display: block;\\n}\\nsection {\\n    display: flex;\\n    align-items: flex-start;\\n    padding: .5rem;\\n}\\nsvg[data-icon=\\\"mdi-close\\\"] {\\n    display: block;\\n}\\n</style>\\n<main #ref=\\\"main\\\">\\n    <div *foreach=\\\"{{ this.items }}\\\" class=\\\"{{ item.type }}\\\" @click=\\\"{{ this.hide(item) }}\\\">\\n        <section>\\n            <span class=\\\"iconify\\\" data-icon=\\\"mdi-thumb-up-outline\\\"></span>\\n            <span class=\\\"iconify\\\" data-icon=\\\"mdi-alert-box-outline\\\"></span>\\n            <span class=\\\"iconify\\\" data-icon=\\\"mdi-alert-outline\\\"></span>\\n            <span class=\\\"iconify\\\" data-icon=\\\"mdi-alert-circle-outline\\\"></span>\\n            {{ item.message }}\\n        </section>\\n    </div>\\n</main>\\n\";\ncustomElements.define('transcoder-toast', Toast);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvY29tcG9uZW50cy9Ub2FzdC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFFQSxJQUFNRyxNQUFNLEdBQUcsQ0FBQyxTQUFELEVBQVksTUFBWixFQUFvQixTQUFwQixFQUErQixPQUEvQixDQUFmO0FBQ0EsSUFBTUMsYUFBYSxHQUFHLE1BQXRCOztJQUVNQzs7Ozs7QUFFRixtQkFBYztBQUFBOztBQUFBOztBQUNWO0FBQ0EsVUFBS0MsS0FBTCxHQUFhLEVBQWI7QUFDQUMsSUFBQUEsUUFBUSxDQUFDQyxnQkFBVCxDQUEwQixPQUExQixFQUFtQyxNQUFLQyxJQUFMLENBQVVDLElBQVYsK0JBQW5DO0FBSFU7QUFJYjs7OztXQUVELGNBQUtDLENBQUwsRUFBUTtBQUFBOztBQUNKQSxNQUFBQSxDQUFDLENBQUNDLE1BQUYsQ0FBU0MsSUFBVCxHQUFnQlYsTUFBTSxDQUFDVyxPQUFQLENBQWVILENBQUMsQ0FBQ0MsTUFBRixDQUFTQyxJQUF4QixJQUFnQyxDQUFDLENBQWpDLEdBQXFDRixDQUFDLENBQUNDLE1BQUYsQ0FBU0MsSUFBOUMsR0FBcURULGFBQXJFO0FBQ0FPLE1BQUFBLENBQUMsQ0FBQ0MsTUFBRixDQUFTRyxFQUFULGFBQWlCQyxXQUFXLENBQUNDLEdBQVosRUFBakIsY0FBc0MsS0FBS1gsS0FBTCxDQUFXWSxNQUFqRDtBQUNBLFdBQUtaLEtBQUwsQ0FBV2EsT0FBWCxDQUFtQlIsQ0FBQyxDQUFDQyxNQUFyQjtBQUNBWCxNQUFBQSxzREFBQSxDQUFrQixJQUFsQixFQUF3QixPQUF4QjtBQUVBb0IsTUFBQUEscUJBQXFCLENBQUM7QUFBQSxlQUFNbkIsNERBQUEsQ0FBYSxNQUFJLENBQUNxQixVQUFsQixDQUFOO0FBQUEsT0FBRCxDQUFyQjtBQUNBLFdBQUtDLFNBQUw7QUFDSDs7O1dBRUQscUJBQVk7QUFBQTs7QUFDUixVQUFJQyxJQUFJLEdBQUcsS0FBS0YsVUFBTCxDQUFnQkcsYUFBaEIsQ0FBOEIsWUFBOUIsQ0FBWDtBQUNBLFdBQUtwQixLQUFMLENBQVcsQ0FBWCxFQUFjcUIsTUFBZCxHQUF1QkYsSUFBSSxDQUFDRyxZQUE1QjtBQUNBUCxNQUFBQSxxQkFBcUIsQ0FBQyxZQUFNO0FBQ3hCSSxRQUFBQSxJQUFJLENBQUNJLE9BQUwsQ0FBYUMsWUFBYixHQUE0QixRQUE1QjtBQUNBVCxRQUFBQSxxQkFBcUIsQ0FBQyxZQUFNO0FBQ3hCSSxVQUFBQSxJQUFJLENBQUNNLEtBQUwsQ0FBV0osTUFBWCxhQUF1QixNQUFJLENBQUNyQixLQUFMLENBQVcsQ0FBWCxFQUFjcUIsTUFBckM7QUFDQUYsVUFBQUEsSUFBSSxDQUFDSSxPQUFMLENBQWFHLFVBQWIsR0FBMEIsSUFBMUI7QUFDQVAsVUFBQUEsSUFBSSxDQUFDakIsZ0JBQUwsQ0FBc0IsZUFBdEIsRUFBdUMsWUFBTTtBQUN6QyxtQkFBT2lCLElBQUksQ0FBQ0ksT0FBTCxDQUFhRyxVQUFwQjtBQUNBUCxZQUFBQSxJQUFJLENBQUNNLEtBQUwsQ0FBV0osTUFBWCxHQUFvQixFQUFwQjtBQUNILFdBSEQsRUFHRztBQUFDTSxZQUFBQSxJQUFJLEVBQUU7QUFBUCxXQUhIO0FBSUFaLFVBQUFBLHFCQUFxQixDQUFDO0FBQUEsbUJBQU0sT0FBT0ksSUFBSSxDQUFDSSxPQUFMLENBQWFDLFlBQTFCO0FBQUEsV0FBRCxDQUFyQjtBQUNILFNBUm9CLENBQXJCO0FBU0gsT0FYb0IsQ0FBckI7QUFZSDs7O1dBRUQsY0FBS0ksSUFBTCxFQUFXO0FBQUE7O0FBQ1AsVUFBSUMsR0FBRyxHQUFHLEtBQUs3QixLQUFMLENBQVc4QixTQUFYLENBQXFCLFVBQUFDLENBQUM7QUFBQSxlQUFJSCxJQUFJLENBQUNuQixFQUFMLEtBQVlzQixDQUFDLENBQUN0QixFQUFsQjtBQUFBLE9BQXRCLENBQVY7O0FBQ0EsVUFBSW9CLEdBQUcsR0FBRyxDQUFDLENBQVgsRUFBYztBQUNWLFlBQUlWLElBQUksR0FBRyxLQUFLRixVQUFMLENBQWdCZSxnQkFBaEIsQ0FBaUMsWUFBakMsRUFBK0NILEdBQS9DLENBQVg7QUFDQVYsUUFBQUEsSUFBSSxDQUFDTSxLQUFMLENBQVdKLE1BQVgsYUFBdUJPLElBQUksQ0FBQ1AsTUFBNUI7QUFDQU4sUUFBQUEscUJBQXFCLENBQUMsWUFBTTtBQUN4QkksVUFBQUEsSUFBSSxDQUFDSSxPQUFMLENBQWFHLFVBQWIsR0FBMEIsS0FBMUI7QUFDQVgsVUFBQUEscUJBQXFCLENBQUMsWUFBTTtBQUN4QkksWUFBQUEsSUFBSSxDQUFDakIsZ0JBQUwsQ0FBc0IsZUFBdEIsRUFBdUMsWUFBTTtBQUN6QyxvQkFBSSxDQUFDRixLQUFMLENBQVdpQyxNQUFYLENBQWtCSixHQUFsQixFQUF1QixDQUF2Qjs7QUFDQVYsY0FBQUEsSUFBSSxDQUFDTSxLQUFMLENBQVdKLE1BQVgsR0FBb0IsRUFBcEI7QUFDQSxxQkFBT0YsSUFBSSxDQUFDSSxPQUFMLENBQWFHLFVBQXBCO0FBQ0EscUJBQU9QLElBQUksQ0FBQ0ksT0FBTCxDQUFhVyxhQUFwQjtBQUNBdkMsY0FBQUEsc0RBQUEsQ0FBa0IsTUFBbEIsRUFBd0IsT0FBeEI7QUFDSCxhQU5ELEVBTUc7QUFBQ2dDLGNBQUFBLElBQUksRUFBRTtBQUFQLGFBTkg7QUFPQVIsWUFBQUEsSUFBSSxDQUFDSSxPQUFMLENBQWFXLGFBQWIsR0FBNkIsUUFBN0I7QUFDSCxXQVRvQixDQUFyQjtBQVVILFNBWm9CLENBQXJCO0FBYUg7QUFDSjs7OztFQXREZXhDOztBQXlEcEJLLEtBQUssQ0FBQ29DLFFBQU47QUFBaUI7QUFBakI7QUF1RkFDLGNBQWMsQ0FBQ0MsTUFBZixDQUFzQixrQkFBdEIsRUFBMEN0QyxLQUExQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9qcy9jb21wb25lbnRzL1RvYXN0LmpzPzZlNDgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2xpbSwgVXRpbHMgfSBmcm9tICdzbGltLWpzJztcbmltcG9ydCAnLi4vc2xpbS1kaXJlY3RpdmVzJztcbmltcG9ydCBJY29uaWZ5IGZyb20gJ0BpY29uaWZ5L2ljb25pZnknXG5cbmNvbnN0IFNUQVRFUyA9IFsnc3VjY2VzcycsICdpbmZvJywgJ3dhcm5pbmcnLCAnZXJyb3InXVxuY29uc3QgREVGQVVMVF9TVEFURSA9ICdpbmZvJ1xuXG5jbGFzcyBUb2FzdCBleHRlbmRzIFNsaW0ge1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKClcbiAgICAgICAgdGhpcy5pdGVtcyA9IFtdXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3RvYXN0JywgdGhpcy5zaG93LmJpbmQodGhpcykpXG4gICAgfVxuXG4gICAgc2hvdyhlKSB7XG4gICAgICAgIGUuZGV0YWlsLnR5cGUgPSBTVEFURVMuaW5kZXhPZihlLmRldGFpbC50eXBlKSA+IC0xID8gZS5kZXRhaWwudHlwZSA6IERFRkFVTFRfU1RBVEVcbiAgICAgICAgZS5kZXRhaWwuaWQgPSBgJHtwZXJmb3JtYW5jZS5ub3coKX0tJHt0aGlzLml0ZW1zLmxlbmd0aH1gXG4gICAgICAgIHRoaXMuaXRlbXMudW5zaGlmdChlLmRldGFpbClcbiAgICAgICAgVXRpbHMuZm9yY2VVcGRhdGUodGhpcywgJ2l0ZW1zJylcblxuICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4gSWNvbmlmeS5zY2FuKHRoaXMuc2hhZG93Um9vdCkpXG4gICAgICAgIHRoaXMuYW5pbWF0ZUluKClcbiAgICB9XG5cbiAgICBhbmltYXRlSW4oKSB7XG4gICAgICAgIGxldCBub2RlID0gdGhpcy5zaGFkb3dSb290LnF1ZXJ5U2VsZWN0b3IoJ21haW4gPiBkaXYnKVxuICAgICAgICB0aGlzLml0ZW1zWzBdLmhlaWdodCA9IG5vZGUub2Zmc2V0SGVpZ2h0XG4gICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7XG4gICAgICAgICAgICBub2RlLmRhdGFzZXQudHJhbnNpdGlvbkluID0gJ2JlZm9yZSdcbiAgICAgICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgbm9kZS5zdHlsZS5oZWlnaHQgPSBgJHt0aGlzLml0ZW1zWzBdLmhlaWdodH1weGBcbiAgICAgICAgICAgICAgICBub2RlLmRhdGFzZXQudHJhbnNpdGlvbiA9ICdpbidcbiAgICAgICAgICAgICAgICBub2RlLmFkZEV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBub2RlLmRhdGFzZXQudHJhbnNpdGlvblxuICAgICAgICAgICAgICAgICAgICBub2RlLnN0eWxlLmhlaWdodCA9ICcnXG4gICAgICAgICAgICAgICAgfSwge29uY2U6IHRydWV9KVxuICAgICAgICAgICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiBkZWxldGUgbm9kZS5kYXRhc2V0LnRyYW5zaXRpb25JbilcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgaGlkZShpdGVtKSB7XG4gICAgICAgIGxldCBpZHggPSB0aGlzLml0ZW1zLmZpbmRJbmRleChpID0+IGl0ZW0uaWQgPT09IGkuaWQpXG4gICAgICAgIGlmIChpZHggPiAtMSkge1xuICAgICAgICAgICAgbGV0IG5vZGUgPSB0aGlzLnNoYWRvd1Jvb3QucXVlcnlTZWxlY3RvckFsbCgnbWFpbiA+IGRpdicpW2lkeF07XG4gICAgICAgICAgICBub2RlLnN0eWxlLmhlaWdodCA9IGAke2l0ZW0uaGVpZ2h0fXB4YFxuICAgICAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IHtcbiAgICAgICAgICAgICAgICBub2RlLmRhdGFzZXQudHJhbnNpdGlvbiA9ICdvdXQnXG4gICAgICAgICAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgbm9kZS5hZGRFdmVudExpc3RlbmVyKCd0cmFuc2l0aW9uZW5kJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pdGVtcy5zcGxpY2UoaWR4LCAxKVxuICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5zdHlsZS5oZWlnaHQgPSAnJ1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIG5vZGUuZGF0YXNldC50cmFuc2l0aW9uXG4gICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgbm9kZS5kYXRhc2V0LnRyYW5zaXRpb25PdXRcbiAgICAgICAgICAgICAgICAgICAgICAgIFV0aWxzLmZvcmNlVXBkYXRlKHRoaXMsICdpdGVtcycpXG4gICAgICAgICAgICAgICAgICAgIH0sIHtvbmNlOiB0cnVlfSlcbiAgICAgICAgICAgICAgICAgICAgbm9kZS5kYXRhc2V0LnRyYW5zaXRpb25PdXQgPSAnYmVmb3JlJ1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfVxufVxuXG5Ub2FzdC50ZW1wbGF0ZSA9IC8qaHRtbCovYFxuPHN0eWxlPlxuOmhvc3Qge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICByaWdodDogMnJlbTtcbiAgICB0b3A6IDJyZW07XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgb3ZlcmZsb3cteTogaGlkZGVuO1xufVxubWFpbiB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGdhcDogLjVyZW07XG59XG5tYWluID4gZGl2IHtcbiAgICB3aWR0aDogMjQwcHg7XG4gICAgY29sb3I6IGhzbGEoMCwgMCUsIDEwMCUsIC44KTtcbiAgICBib3JkZXItcmFkaXVzOiAuNXJlbTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyIHRvcDtcbiAgICB0cmFuc2Zvcm06IHNjYWxlWSgxKTtcbiAgICBvcGFjaXR5OiAxO1xuICAgIG1heC1oZWlnaHQ6IDEwcmVtO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG59XG5tYWluID4gZGl2OmhvdmVyIHtcbiAgICBtYXgtaGVpZ2h0OiAxMDByZW07XG59XG5tYWluID4gZGl2W2RhdGEtdHJhbnNpdGlvbj1cImluXCJdLFxubWFpbiA+IGRpdltkYXRhLXRyYW5zaXRpb249XCJvdXRcIl0ge1xuICAgIHRyYW5zaXRpb246IGFsbCB2YXIoLS10cmFuc2l0aW9uLW1lZGl1bSkgbGluZWFyO1xufVxubWFpbiA+IGRpdltkYXRhLXRyYW5zaXRpb24taW49XCJiZWZvcmVcIl0sXG5tYWluID4gZGl2W2RhdGEtdHJhbnNpdGlvbi1vdXQ9XCJiZWZvcmVcIl0ge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNmb3JtOiBzY2FsZVkoLjAxKTtcbiAgICBoZWlnaHQ6IDAgIWltcG9ydGFudDtcbn1cbm1haW4gPiBkaXYge1xuICAgIGJhY2tncm91bmQ6IGhzbGEodmFyKC0taHVlLWFsZXJ0KSwgdmFyKC0tc2F0LWFsZXJ0KSwgdmFyKC0tbGl0LWFsZXJ0KSwgdmFyKC0tY2xyLWJhc2UtYWxwaGEpKTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59XG5tYWluID4gZGl2LnN1Y2Nlc3Mge1xuICAgIC0taHVlLWFsZXJ0OiB2YXIoLS1odWUtc3VjY2Vzcyk7XG59XG5tYWluID4gZGl2LmluZm8ge1xuICAgIC0taHVlLWFsZXJ0OiB2YXIoLS1odWUtaW5mbyk7XG59XG5tYWluID4gZGl2Lndhcm5pbmcge1xuICAgIC0taHVlLWFsZXJ0OiB2YXIoLS1odWUtd2FybmluZyk7XG59XG5tYWluID4gZGl2LmVycm9yIHtcbiAgICAtLWh1ZS1hbGVydDogdmFyKC0taHVlLWVycm9yKTtcbn1cbnN2ZyB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBtYXJnaW46IC4xcmVtIC41cmVtIDAgMDtcbiAgICBmbGV4LXNocmluazogMDtcbn1cbmRpdi5zdWNjZXNzIHN2Z1tkYXRhLWljb249XCJtZGktdGh1bWItdXAtb3V0bGluZVwiXSxcbmRpdi5pbmZvIHN2Z1tkYXRhLWljb249XCJtZGktYWxlcnQtYm94LW91dGxpbmVcIl0sXG5kaXYud2FybmluZyBzdmdbZGF0YS1pY29uPVwibWRpLWFsZXJ0LW91dGxpbmVcIl0sXG5kaXYuZXJyb3Igc3ZnW2RhdGEtaWNvbj1cIm1kaS1hbGVydC1jaXJjbGUtb3V0bGluZVwiXSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG5zZWN0aW9uIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgIHBhZGRpbmc6IC41cmVtO1xufVxuc3ZnW2RhdGEtaWNvbj1cIm1kaS1jbG9zZVwiXSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG48L3N0eWxlPlxuPG1haW4gI3JlZj1cIm1haW5cIj5cbiAgICA8ZGl2ICpmb3JlYWNoPVwie3sgdGhpcy5pdGVtcyB9fVwiIGNsYXNzPVwie3sgaXRlbS50eXBlIH19XCIgQGNsaWNrPVwie3sgdGhpcy5oaWRlKGl0ZW0pIH19XCI+XG4gICAgICAgIDxzZWN0aW9uPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJpY29uaWZ5XCIgZGF0YS1pY29uPVwibWRpLXRodW1iLXVwLW91dGxpbmVcIj48L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImljb25pZnlcIiBkYXRhLWljb249XCJtZGktYWxlcnQtYm94LW91dGxpbmVcIj48L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImljb25pZnlcIiBkYXRhLWljb249XCJtZGktYWxlcnQtb3V0bGluZVwiPjwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiaWNvbmlmeVwiIGRhdGEtaWNvbj1cIm1kaS1hbGVydC1jaXJjbGUtb3V0bGluZVwiPjwvc3Bhbj5cbiAgICAgICAgICAgIHt7IGl0ZW0ubWVzc2FnZSB9fVxuICAgICAgICA8L3NlY3Rpb24+XG4gICAgPC9kaXY+XG48L21haW4+XG5gXG5cbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgndHJhbnNjb2Rlci10b2FzdCcsIFRvYXN0KTsiXSwibmFtZXMiOlsiU2xpbSIsIlV0aWxzIiwiSWNvbmlmeSIsIlNUQVRFUyIsIkRFRkFVTFRfU1RBVEUiLCJUb2FzdCIsIml0ZW1zIiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwic2hvdyIsImJpbmQiLCJlIiwiZGV0YWlsIiwidHlwZSIsImluZGV4T2YiLCJpZCIsInBlcmZvcm1hbmNlIiwibm93IiwibGVuZ3RoIiwidW5zaGlmdCIsImZvcmNlVXBkYXRlIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwic2NhbiIsInNoYWRvd1Jvb3QiLCJhbmltYXRlSW4iLCJub2RlIiwicXVlcnlTZWxlY3RvciIsImhlaWdodCIsIm9mZnNldEhlaWdodCIsImRhdGFzZXQiLCJ0cmFuc2l0aW9uSW4iLCJzdHlsZSIsInRyYW5zaXRpb24iLCJvbmNlIiwiaXRlbSIsImlkeCIsImZpbmRJbmRleCIsImkiLCJxdWVyeVNlbGVjdG9yQWxsIiwic3BsaWNlIiwidHJhbnNpdGlvbk91dCIsInRlbXBsYXRlIiwiY3VzdG9tRWxlbWVudHMiLCJkZWZpbmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/components/Toast.js\n");

/***/ }),

/***/ "./resources/js/components/Transcoder.js":
/*!***********************************************!*\
  !*** ./resources/js/components/Transcoder.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var slim_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! slim-js */ \"./node_modules/slim-js/dist/index.js\");\n/* harmony import */ var _slim_directives__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../slim-directives */ \"./resources/js/slim-directives.js\");\n/* harmony import */ var _FilePicker_FilePicker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FilePicker/FilePicker */ \"./resources/js/components/FilePicker/FilePicker.js\");\n/* harmony import */ var _Transcoder_Configurator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Transcoder/Configurator */ \"./resources/js/components/Transcoder/Configurator.js\");\n/* harmony import */ var _Loading__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Loading */ \"./resources/js/components/Loading.js\");\n/* harmony import */ var _Toast__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Toast */ \"./resources/js/components/Toast.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\n\n\n\n\nvar Transcoder = /*#__PURE__*/function (_Slim) {\n  _inherits(Transcoder, _Slim);\n\n  var _super = _createSuper(Transcoder);\n\n  function Transcoder() {\n    _classCallCheck(this, Transcoder);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Transcoder, [{\n    key: \"onAdded\",\n    value: function onAdded() {\n      var backgroundHandler = this.toggleBackground.bind(this);\n      this.filePicker.channelHash = this.dataset.channel;\n      document.addEventListener('loading', backgroundHandler);\n      document.addEventListener('configurator-show', backgroundHandler);\n    }\n  }, {\n    key: \"toggleBackground\",\n    value: function toggleBackground(e) {\n      if (!!e.detail) {\n        this.scrollY = window.scrollY;\n        this.scrollX = window.scrollX;\n      }\n\n      this.classList.toggle('background', !!e.detail);\n\n      if (!e.detail) {\n        window.scroll(this.scrollX, this.scrollY);\n      }\n    }\n  }]);\n\n  return Transcoder;\n}(slim_js__WEBPACK_IMPORTED_MODULE_0__.Slim);\n\nTranscoder.template =\n/*html*/\n\"\\n<style>\\n    :host {\\n        display: block;\\n        height: calc(100vh - .4rem);\\n        overflow: auto;\\n    }\\n    :host(.background) {\\n        overflow: hidden;\\n    }\\n    :host(.background) main {\\n        filter: blur(3px);\\n    }\\n    main {\\n        padding: .2rem;\\n        filter: blur(0);\\n        transition: var(--loading-transition);\\n    }\\n</style>\\n<main>\\n    <h1>Transcoder</h1>\\n    <filepicker-root #ref=\\\"filePicker\\\"></filepicker-root>\\n</main>\\n<transcode-configurator></transcode-configurator>\\n<transcoder-loading></transcoder-loading>\\n<transcoder-toast></transcoder-toast>\\n\";\ncustomElements.define('ffmpeg-transcoder', Transcoder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvY29tcG9uZW50cy9UcmFuc2NvZGVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztJQUVNQzs7Ozs7Ozs7Ozs7OztXQUVGLG1CQUFVO0FBQ04sVUFBSUMsaUJBQWlCLEdBQUcsS0FBS0MsZ0JBQUwsQ0FBc0JDLElBQXRCLENBQTJCLElBQTNCLENBQXhCO0FBQ0EsV0FBS0MsVUFBTCxDQUFnQkMsV0FBaEIsR0FBOEIsS0FBS0MsT0FBTCxDQUFhQyxPQUEzQztBQUNBQyxNQUFBQSxRQUFRLENBQUNDLGdCQUFULENBQTBCLFNBQTFCLEVBQXFDUixpQkFBckM7QUFDQU8sTUFBQUEsUUFBUSxDQUFDQyxnQkFBVCxDQUEwQixtQkFBMUIsRUFBK0NSLGlCQUEvQztBQUNIOzs7V0FFRCwwQkFBaUJTLENBQWpCLEVBQW9CO0FBQ2hCLFVBQUksQ0FBQyxDQUFDQSxDQUFDLENBQUNDLE1BQVIsRUFBZ0I7QUFDWixhQUFLQyxPQUFMLEdBQWVDLE1BQU0sQ0FBQ0QsT0FBdEI7QUFDQSxhQUFLRSxPQUFMLEdBQWVELE1BQU0sQ0FBQ0MsT0FBdEI7QUFDSDs7QUFDRCxXQUFLQyxTQUFMLENBQWVDLE1BQWYsQ0FBc0IsWUFBdEIsRUFBb0MsQ0FBQyxDQUFDTixDQUFDLENBQUNDLE1BQXhDOztBQUNBLFVBQUksQ0FBQ0QsQ0FBQyxDQUFDQyxNQUFQLEVBQWU7QUFDWEUsUUFBQUEsTUFBTSxDQUFDSSxNQUFQLENBQWMsS0FBS0gsT0FBbkIsRUFBNEIsS0FBS0YsT0FBakM7QUFDSDtBQUNKOzs7O0VBbEJvQmI7O0FBcUJ6QkMsVUFBVSxDQUFDa0IsUUFBWDtBQUFzQjtBQUF0QjtBQTRCQUMsY0FBYyxDQUFDQyxNQUFmLENBQXNCLG1CQUF0QixFQUEyQ3BCLFVBQTNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2pzL2NvbXBvbmVudHMvVHJhbnNjb2Rlci5qcz85NTI2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNsaW0gfSBmcm9tICdzbGltLWpzJztcbmltcG9ydCAnLi4vc2xpbS1kaXJlY3RpdmVzJztcbmltcG9ydCAnLi9GaWxlUGlja2VyL0ZpbGVQaWNrZXInXG5pbXBvcnQgJy4vVHJhbnNjb2Rlci9Db25maWd1cmF0b3InXG5pbXBvcnQgJy4vTG9hZGluZydcbmltcG9ydCAnLi9Ub2FzdCdcblxuY2xhc3MgVHJhbnNjb2RlciBleHRlbmRzIFNsaW0ge1xuXG4gICAgb25BZGRlZCgpIHtcbiAgICAgICAgbGV0IGJhY2tncm91bmRIYW5kbGVyID0gdGhpcy50b2dnbGVCYWNrZ3JvdW5kLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMuZmlsZVBpY2tlci5jaGFubmVsSGFzaCA9IHRoaXMuZGF0YXNldC5jaGFubmVsXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWRpbmcnLCBiYWNrZ3JvdW5kSGFuZGxlcilcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY29uZmlndXJhdG9yLXNob3cnLCBiYWNrZ3JvdW5kSGFuZGxlcilcbiAgICB9XG5cbiAgICB0b2dnbGVCYWNrZ3JvdW5kKGUpIHtcbiAgICAgICAgaWYgKCEhZS5kZXRhaWwpIHtcbiAgICAgICAgICAgIHRoaXMuc2Nyb2xsWSA9IHdpbmRvdy5zY3JvbGxZXG4gICAgICAgICAgICB0aGlzLnNjcm9sbFggPSB3aW5kb3cuc2Nyb2xsWFxuICAgICAgICB9XG4gICAgICAgIHRoaXMuY2xhc3NMaXN0LnRvZ2dsZSgnYmFja2dyb3VuZCcsICEhZS5kZXRhaWwpXG4gICAgICAgIGlmICghZS5kZXRhaWwpIHtcbiAgICAgICAgICAgIHdpbmRvdy5zY3JvbGwodGhpcy5zY3JvbGxYLCB0aGlzLnNjcm9sbFkpXG4gICAgICAgIH1cbiAgICB9XG59XG5cblRyYW5zY29kZXIudGVtcGxhdGUgPSAvKmh0bWwqL2BcbjxzdHlsZT5cbiAgICA6aG9zdCB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBoZWlnaHQ6IGNhbGMoMTAwdmggLSAuNHJlbSk7XG4gICAgICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIH1cbiAgICA6aG9zdCguYmFja2dyb3VuZCkge1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIH1cbiAgICA6aG9zdCguYmFja2dyb3VuZCkgbWFpbiB7XG4gICAgICAgIGZpbHRlcjogYmx1cigzcHgpO1xuICAgIH1cbiAgICBtYWluIHtcbiAgICAgICAgcGFkZGluZzogLjJyZW07XG4gICAgICAgIGZpbHRlcjogYmx1cigwKTtcbiAgICAgICAgdHJhbnNpdGlvbjogdmFyKC0tbG9hZGluZy10cmFuc2l0aW9uKTtcbiAgICB9XG48L3N0eWxlPlxuPG1haW4+XG4gICAgPGgxPlRyYW5zY29kZXI8L2gxPlxuICAgIDxmaWxlcGlja2VyLXJvb3QgI3JlZj1cImZpbGVQaWNrZXJcIj48L2ZpbGVwaWNrZXItcm9vdD5cbjwvbWFpbj5cbjx0cmFuc2NvZGUtY29uZmlndXJhdG9yPjwvdHJhbnNjb2RlLWNvbmZpZ3VyYXRvcj5cbjx0cmFuc2NvZGVyLWxvYWRpbmc+PC90cmFuc2NvZGVyLWxvYWRpbmc+XG48dHJhbnNjb2Rlci10b2FzdD48L3RyYW5zY29kZXItdG9hc3Q+XG5gXG5cbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnZmZtcGVnLXRyYW5zY29kZXInLCBUcmFuc2NvZGVyKTsiXSwibmFtZXMiOlsiU2xpbSIsIlRyYW5zY29kZXIiLCJiYWNrZ3JvdW5kSGFuZGxlciIsInRvZ2dsZUJhY2tncm91bmQiLCJiaW5kIiwiZmlsZVBpY2tlciIsImNoYW5uZWxIYXNoIiwiZGF0YXNldCIsImNoYW5uZWwiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwiZGV0YWlsIiwic2Nyb2xsWSIsIndpbmRvdyIsInNjcm9sbFgiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJzY3JvbGwiLCJ0ZW1wbGF0ZSIsImN1c3RvbUVsZW1lbnRzIiwiZGVmaW5lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/components/Transcoder.js\n");

/***/ }),

/***/ "./resources/js/components/Transcoder/Configurator.js":
/*!************************************************************!*\
  !*** ./resources/js/components/Transcoder/Configurator.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var slim_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! slim-js */ \"./node_modules/slim-js/dist/index.js\");\n/* harmony import */ var _slim_directives__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../slim-directives */ \"./resources/js/slim-directives.js\");\n/* harmony import */ var _iconify_iconify__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @iconify/iconify */ \"./node_modules/@iconify/iconify/dist/iconify.min.js\");\n/* harmony import */ var _iconify_iconify__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_iconify_iconify__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _Configurator_Streams__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Configurator/Streams */ \"./resources/js/components/Transcoder/Configurator/Streams.js\");\n/* harmony import */ var _Configurator_Clip__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Configurator/Clip */ \"./resources/js/components/Transcoder/Configurator/Clip.js\");\n/* harmony import */ var _Configurator_Format__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Configurator/Format */ \"./resources/js/components/Transcoder/Configurator/Format.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\n\n\n\nvar WS_CHANNEL = 'Transcode.Config';\n\nvar TranscodeConfigurator = /*#__PURE__*/function (_Slim) {\n  _inherits(TranscodeConfigurator, _Slim);\n\n  var _super = _createSuper(TranscodeConfigurator);\n\n  function TranscodeConfigurator() {\n    _classCallCheck(this, TranscodeConfigurator);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TranscodeConfigurator, [{\n    key: \"onAdded\",\n    value: function onAdded() {\n      var _this = this;\n\n      document.addEventListener('file-clicked', this.init.bind(this));\n      requestAnimationFrame(function () {\n        return _iconify_iconify__WEBPACK_IMPORTED_MODULE_3___default().scan(_this.shadowRoot);\n      });\n    }\n  }, {\n    key: \"init\",\n    value: function init(e) {\n      if ('video' === e.detail.mime.split('/').shift()) {\n        this.item = e.detail;\n        this.initWebsocket();\n      }\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.classList.add('active');\n      document.dispatchEvent(new CustomEvent('configurator-show', {\n        detail: true\n      }));\n      console.info('Show streams of %s', this.item.path);\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      var _this2 = this;\n\n      this.addEventListener('transitionend', function () {\n        _this2.classList.remove('active', 'fade-out');\n      });\n      this.classList.add('fade-out');\n      delete this.item;\n      this.format = undefined;\n      this.streams = undefined;\n      this.leaveWebsocket();\n      document.dispatchEvent(new CustomEvent('configurator-show', {\n        detail: false\n      }));\n    }\n  }, {\n    key: \"initWebsocket\",\n    value: function initWebsocket() {\n      this.channel = window.Echo.channel(WS_CHANNEL);\n      this.channel.listen(WS_CHANNEL, this.handleConfiguratorEvent.bind(this));\n      this.channel.subscribed(this.requestStreams.bind(this));\n    }\n  }, {\n    key: \"leaveWebsocket\",\n    value: function leaveWebsocket() {\n      this.channel.stopListening(WS_CHANNEL);\n      window.Echo.leave(WS_CHANNEL);\n      delete this.channel;\n    }\n  }, {\n    key: \"requestStreams\",\n    value: function () {\n      var _requestStreams = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n        var response, error;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.info('Attempt to fetch streams of %s', this.item.path);\n                document.dispatchEvent(new CustomEvent('loading', {\n                  detail: true\n                }));\n                _context.prev = 2;\n                _context.next = 5;\n                return fetch(\"/streams/\".concat(encodeURIComponent(this.item.path)));\n\n              case 5:\n                response = _context.sent;\n\n                if (!(response.status !== 200)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                _context.next = 9;\n                return response.json();\n\n              case 9:\n                error = _context.sent;\n                throw new Error(error.message);\n\n              case 11:\n                _context.next = 20;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](2);\n                console.error(_context.t0);\n                document.dispatchEvent(new CustomEvent('loading', {\n                  detail: false\n                }));\n                document.dispatchEvent(new CustomEvent('toast', {\n                  detail: {\n                    message: _context.t0,\n                    type: 'error'\n                  }\n                }));\n                this.leaveWebsocket();\n                this.hide();\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 13]]);\n      }));\n\n      function requestStreams() {\n        return _requestStreams.apply(this, arguments);\n      }\n\n      return requestStreams;\n    }()\n  }, {\n    key: \"handleConfiguratorEvent\",\n    value: function handleConfiguratorEvent(ws) {\n      console.info(ws);\n      this.format = ws.format;\n      this.streams = ws.streams;\n      document.dispatchEvent(new CustomEvent('loading', {\n        detail: false\n      }));\n      this.show();\n    }\n  }]);\n\n  return TranscodeConfigurator;\n}(slim_js__WEBPACK_IMPORTED_MODULE_1__.Slim);\n\nvar CSS =\n/*css*/\n\"\\n<style>\\n:host {\\n    position: fixed;\\n    inset: 0;\\n    display: none;\\n    opacity: 1;\\n    transition: opacity var(--transition-slow) linear;\\n}\\n:host(.active) {\\n    display: flex;\\n    align-items: center;\\n}\\n:host(.fade-out) {\\n    opacity: 0;\\n}\\nmain {\\n    position: absolute;\\n    box-shadow: 0 0 10vw 3vw var(--clr-shadow-0);\\n    inset: var(--rel-gutter-500);\\n    background-color: var(--clr-bg-0);\\n    border-radius: var(--rel-gutter-100);\\n    padding: var(--rel-gutter-200);\\n}\\nmain > div {\\n    overflow-y: auto;\\n    height: calc(100% - 1.75rem - var(--rel-gutter-200) * 2);\\n    display: flex;\\n    flex-direction: column;\\n    gap: 1rem;\\n}\\nmain h1 {\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n    padding: 0;\\n    margin: 0 0 var(--rel-gutter-100) 0;\\n    font-size: 1.75rem;\\n}\\nmain h1 div {\\n    cursor: pointer;\\n}\\nmain div *:last-child {\\n    margin-bottom: 0;\\n}\\n</style>\\n\";\nvar HEADING =\n/*html*/\n\"\\n<h1>\\n    Transcode\\n    <div @click=\\\"this.hide()\\\">\\n        <span class=\\\"iconify\\\" data-icon=\\\"mdi-close\\\"></span>\\n    </div>\\n</h1>\\n\";\nTranscodeConfigurator.template =\n/*html*/\n\"\\n\".concat(CSS, \"\\n<main>\\n    \").concat(HEADING, \"\\n    <div>\\n        <transcode-configurator-format *if=\\\"{{ this.format }}\\\" .format=\\\"{{ this.format }}\\\"></transcode-configurator-format>\\n        <transcode-configurator-streams *if=\\\"{{ this.streams }}\\\" .items=\\\"{{ this.streams }}\\\"></transcode-configurator-streams>\\n        <transcode-configurator-clip *if=\\\"{{ this.streams }}\\\"></transcode-configurator-clip>\\n    </div>\\n</main>\\n\");\ncustomElements.define('transcode-configurator', TranscodeConfigurator);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/components/Transcoder/Configurator.js\n");

/***/ }),

/***/ "./resources/js/components/Transcoder/Configurator/CardCss.js":
/*!********************************************************************!*\
  !*** ./resources/js/components/Transcoder/Configurator/CardCss.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar CARD_CSS =\n/*css*/\n\"\\n<style>\\nmain {\\n    background-color: var(--clr-bg-100);\\n    border-radius: .75rem;\\n    padding: .75rem;\\n}\\nmain h2 {\\n    margin: 0;\\n    padding: 0;\\n    font-size: 1rem;\\n}\\nsection {\\n    background-color: var(--clr-bg-150);\\n    border-radius: .5rem;\\n    padding: .5rem;\\n    margin: .35rem 0;\\n    font-size: --var(--font-size-50);\\n}\\nsection:last-child {\\n    margin-bottom: 0;\\n}\\nsection.toggle > div {\\n    display: none;\\n}\\nsection.toggle > div.visible {\\n    display: flex;\\n    align-items: center;\\n}\\nsection.toggle > div[data-toggle=\\\"true\\\"] {\\n    cursor: pointer;\\n}\\nsection.toggle > div:not([data-toggle=\\\"true\\\"]) {\\n    padding-left: 1rem;\\n}\\n</style>\\n\";\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CARD_CSS);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvY29tcG9uZW50cy9UcmFuc2NvZGVyL0NvbmZpZ3VyYXRvci9DYXJkQ3NzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxJQUFNQSxRQUFRO0FBQUc7QUFBSCxnckJBQWQ7QUFzQ0EsaUVBQWVBLFFBQWYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvY29tcG9uZW50cy9UcmFuc2NvZGVyL0NvbmZpZ3VyYXRvci9DYXJkQ3NzLmpzPzQ5MjAiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQ0FSRF9DU1MgPSAvKmNzcyovYFxuPHN0eWxlPlxubWFpbiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY2xyLWJnLTEwMCk7XG4gICAgYm9yZGVyLXJhZGl1czogLjc1cmVtO1xuICAgIHBhZGRpbmc6IC43NXJlbTtcbn1cbm1haW4gaDIge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbn1cbnNlY3Rpb24ge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNsci1iZy0xNTApO1xuICAgIGJvcmRlci1yYWRpdXM6IC41cmVtO1xuICAgIHBhZGRpbmc6IC41cmVtO1xuICAgIG1hcmdpbjogLjM1cmVtIDA7XG4gICAgZm9udC1zaXplOiAtLXZhcigtLWZvbnQtc2l6ZS01MCk7XG59XG5zZWN0aW9uOmxhc3QtY2hpbGQge1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG59XG5zZWN0aW9uLnRvZ2dsZSA+IGRpdiB7XG4gICAgZGlzcGxheTogbm9uZTtcbn1cbnNlY3Rpb24udG9nZ2xlID4gZGl2LnZpc2libGUge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbnNlY3Rpb24udG9nZ2xlID4gZGl2W2RhdGEtdG9nZ2xlPVwidHJ1ZVwiXSB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufVxuc2VjdGlvbi50b2dnbGUgPiBkaXY6bm90KFtkYXRhLXRvZ2dsZT1cInRydWVcIl0pIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDFyZW07XG59XG48L3N0eWxlPlxuYFxuXG5leHBvcnQgZGVmYXVsdCBDQVJEX0NTUyJdLCJuYW1lcyI6WyJDQVJEX0NTUyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/components/Transcoder/Configurator/CardCss.js\n");

/***/ }),

/***/ "./resources/js/components/Transcoder/Configurator/Clip.js":
/*!*****************************************************************!*\
  !*** ./resources/js/components/Transcoder/Configurator/Clip.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var slim_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! slim-js */ \"./node_modules/slim-js/dist/index.js\");\n/* harmony import */ var _slim_directives__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../slim-directives */ \"./resources/js/slim-directives.js\");\n/* harmony import */ var _CardCss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CardCss */ \"./resources/js/components/Transcoder/Configurator/CardCss.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\n\nvar Clip = /*#__PURE__*/function (_Slim) {\n  _inherits(Clip, _Slim);\n\n  var _super = _createSuper(Clip);\n\n  function Clip() {\n    _classCallCheck(this, Clip);\n\n    return _super.apply(this, arguments);\n  }\n\n  return Clip;\n}(slim_js__WEBPACK_IMPORTED_MODULE_0__.Slim);\n\nClip.template =\n/*html*/\n\"\\n\".concat(_CardCss__WEBPACK_IMPORTED_MODULE_2__.default, \"\\n<style>\\ndiv {\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n}\\n</style>\\n<main>\\n    <h2>Clip</h2>\\n    <section>\\n        <div><span>From:</span><input></div>\\n        <div><span>To:</span><input></div>\\n    </section>\\n</main>\\n\");\ncustomElements.define('transcode-configurator-clip', Clip);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvY29tcG9uZW50cy9UcmFuc2NvZGVyL0NvbmZpZ3VyYXRvci9DbGlwLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7O0lBRU1FOzs7Ozs7Ozs7Ozs7RUFBYUY7O0FBRW5CRSxJQUFJLENBQUNDLFFBQUw7QUFBZ0I7QUFBaEIsWUFDRUYsNkNBREY7QUFrQkFHLGNBQWMsQ0FBQ0MsTUFBZixDQUFzQiw2QkFBdEIsRUFBcURILElBQXJEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2pzL2NvbXBvbmVudHMvVHJhbnNjb2Rlci9Db25maWd1cmF0b3IvQ2xpcC5qcz84MjA3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNsaW0gfSBmcm9tICdzbGltLWpzJztcbmltcG9ydCAnLi4vLi4vLi4vc2xpbS1kaXJlY3RpdmVzJztcbmltcG9ydCBDQVJEX0NTUyBmcm9tICcuL0NhcmRDc3MnO1xuXG5jbGFzcyBDbGlwIGV4dGVuZHMgU2xpbSB7fVxuXG5DbGlwLnRlbXBsYXRlID0gLypodG1sKi8gYFxuJHtDQVJEX0NTU31cbjxzdHlsZT5cbmRpdiB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cbjwvc3R5bGU+XG48bWFpbj5cbiAgICA8aDI+Q2xpcDwvaDI+XG4gICAgPHNlY3Rpb24+XG4gICAgICAgIDxkaXY+PHNwYW4+RnJvbTo8L3NwYW4+PGlucHV0PjwvZGl2PlxuICAgICAgICA8ZGl2PjxzcGFuPlRvOjwvc3Bhbj48aW5wdXQ+PC9kaXY+XG4gICAgPC9zZWN0aW9uPlxuPC9tYWluPlxuYFxuXG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ3RyYW5zY29kZS1jb25maWd1cmF0b3ItY2xpcCcsIENsaXApOyJdLCJuYW1lcyI6WyJTbGltIiwiQ0FSRF9DU1MiLCJDbGlwIiwidGVtcGxhdGUiLCJjdXN0b21FbGVtZW50cyIsImRlZmluZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/components/Transcoder/Configurator/Clip.js\n");

/***/ }),

/***/ "./resources/js/components/Transcoder/Configurator/Format.js":
/*!*******************************************************************!*\
  !*** ./resources/js/components/Transcoder/Configurator/Format.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var slim_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! slim-js */ \"./node_modules/slim-js/dist/index.js\");\n/* harmony import */ var _slim_directives__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../slim-directives */ \"./resources/js/slim-directives.js\");\n/* harmony import */ var _CardCss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CardCss */ \"./resources/js/components/Transcoder/Configurator/CardCss.js\");\n/* harmony import */ var _Helper_File__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../Helper/File */ \"./resources/js/Helper/File.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\n\n\nvar Format = /*#__PURE__*/function (_Slim) {\n  _inherits(Format, _Slim);\n\n  var _super = _createSuper(Format);\n\n  function Format() {\n    _classCallCheck(this, Format);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Format, [{\n    key: \"duration\",\n    get: function get() {\n      if (!this.format.duration) {\n        return 'N/A';\n      }\n\n      return new Date(this.format.duration * 1000).toISOString().replace(/^[0-9-]+T/, '').replace(/z$/i, '');\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return _Helper_File__WEBPACK_IMPORTED_MODULE_3__.default.fileSizeH(this.format.size);\n    }\n  }, {\n    key: \"bitRate\",\n    get: function get() {\n      if (!this.format.bit_rate) {\n        return 'N/A';\n      }\n\n      return \"\".concat(Math.round(this.format.bit_rate / 1000), \" kb/s\");\n    }\n  }]);\n\n  return Format;\n}(slim_js__WEBPACK_IMPORTED_MODULE_0__.Slim);\n\nFormat.template =\n/*html*/\n\"\\n\".concat(_CardCss__WEBPACK_IMPORTED_MODULE_2__.default, \"\\n<main>\\n    <h2>Format</h2>\\n    <section>\\n        <div>{{ this.format.filename }}</div>\\n        <div>Container: {{ this.format.format_long_name }} / {{ this.format.format_name }}\\n        <div>Duration: {{ this.duration }}, Size: {{ this.size }}, Bitrate: {{ this.bitRate }}</div>\\n    </section>\\n</main>\\n\");\ncustomElements.define('transcode-configurator-format', Format);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvY29tcG9uZW50cy9UcmFuc2NvZGVyL0NvbmZpZ3VyYXRvci9Gb3JtYXQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0lBRU1HOzs7Ozs7Ozs7Ozs7O1NBRUYsZUFBZTtBQUNYLFVBQUksQ0FBQyxLQUFLQyxNQUFMLENBQVlDLFFBQWpCLEVBQTJCO0FBQ3ZCLGVBQU8sS0FBUDtBQUNIOztBQUNELGFBQU8sSUFBSUMsSUFBSixDQUFTLEtBQUtGLE1BQUwsQ0FBWUMsUUFBWixHQUF1QixJQUFoQyxFQUFzQ0UsV0FBdEMsR0FBb0RDLE9BQXBELENBQTRELFdBQTVELEVBQXlFLEVBQXpFLEVBQTZFQSxPQUE3RSxDQUFxRixLQUFyRixFQUE0RixFQUE1RixDQUFQO0FBQ0g7OztTQUVELGVBQVc7QUFDUCxhQUFPTiwyREFBQSxDQUFxQixLQUFLRSxNQUFMLENBQVlNLElBQWpDLENBQVA7QUFDSDs7O1NBRUQsZUFBYztBQUNWLFVBQUksQ0FBQyxLQUFLTixNQUFMLENBQVlPLFFBQWpCLEVBQTJCO0FBQ3ZCLGVBQU8sS0FBUDtBQUNIOztBQUNELHVCQUFVQyxJQUFJLENBQUNDLEtBQUwsQ0FBVyxLQUFLVCxNQUFMLENBQVlPLFFBQVosR0FBdUIsSUFBbEMsQ0FBVjtBQUNIOzs7O0VBbEJnQlg7O0FBcUJyQkcsTUFBTSxDQUFDVyxRQUFQO0FBQWtCO0FBQWxCLFlBQ0ViLDZDQURGO0FBWUFjLGNBQWMsQ0FBQ0MsTUFBZixDQUFzQiwrQkFBdEIsRUFBdURiLE1BQXZEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2pzL2NvbXBvbmVudHMvVHJhbnNjb2Rlci9Db25maWd1cmF0b3IvRm9ybWF0LmpzP2NiOWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2xpbSB9IGZyb20gJ3NsaW0tanMnO1xuaW1wb3J0ICcuLi8uLi8uLi9zbGltLWRpcmVjdGl2ZXMnO1xuaW1wb3J0IENBUkRfQ1NTIGZyb20gJy4vQ2FyZENzcyc7XG5pbXBvcnQgRmlsZUhlbHBlciBmcm9tICcuLi8uLi8uLi9IZWxwZXIvRmlsZSc7XG5cbmNsYXNzIEZvcm1hdCBleHRlbmRzIFNsaW0ge1xuXG4gICAgZ2V0IGR1cmF0aW9uKCkge1xuICAgICAgICBpZiAoIXRoaXMuZm9ybWF0LmR1cmF0aW9uKSB7XG4gICAgICAgICAgICByZXR1cm4gJ04vQSc7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBEYXRlKHRoaXMuZm9ybWF0LmR1cmF0aW9uICogMTAwMCkudG9JU09TdHJpbmcoKS5yZXBsYWNlKC9eWzAtOS1dK1QvLCAnJykucmVwbGFjZSgveiQvaSwgJycpXG4gICAgfVxuXG4gICAgZ2V0IHNpemUoKSB7XG4gICAgICAgIHJldHVybiBGaWxlSGVscGVyLmZpbGVTaXplSCh0aGlzLmZvcm1hdC5zaXplKVxuICAgIH1cblxuICAgIGdldCBiaXRSYXRlKCkge1xuICAgICAgICBpZiAoIXRoaXMuZm9ybWF0LmJpdF9yYXRlKSB7XG4gICAgICAgICAgICByZXR1cm4gJ04vQSc7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGAke01hdGgucm91bmQodGhpcy5mb3JtYXQuYml0X3JhdGUgLyAxMDAwKX0ga2Ivc2BcbiAgICB9XG59XG5cbkZvcm1hdC50ZW1wbGF0ZSA9IC8qaHRtbCovYFxuJHtDQVJEX0NTU31cbjxtYWluPlxuICAgIDxoMj5Gb3JtYXQ8L2gyPlxuICAgIDxzZWN0aW9uPlxuICAgICAgICA8ZGl2Pnt7IHRoaXMuZm9ybWF0LmZpbGVuYW1lIH19PC9kaXY+XG4gICAgICAgIDxkaXY+Q29udGFpbmVyOiB7eyB0aGlzLmZvcm1hdC5mb3JtYXRfbG9uZ19uYW1lIH19IC8ge3sgdGhpcy5mb3JtYXQuZm9ybWF0X25hbWUgfX1cbiAgICAgICAgPGRpdj5EdXJhdGlvbjoge3sgdGhpcy5kdXJhdGlvbiB9fSwgU2l6ZToge3sgdGhpcy5zaXplIH19LCBCaXRyYXRlOiB7eyB0aGlzLmJpdFJhdGUgfX08L2Rpdj5cbiAgICA8L3NlY3Rpb24+XG48L21haW4+XG5gXG5cbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgndHJhbnNjb2RlLWNvbmZpZ3VyYXRvci1mb3JtYXQnLCBGb3JtYXQpOyJdLCJuYW1lcyI6WyJTbGltIiwiQ0FSRF9DU1MiLCJGaWxlSGVscGVyIiwiRm9ybWF0IiwiZm9ybWF0IiwiZHVyYXRpb24iLCJEYXRlIiwidG9JU09TdHJpbmciLCJyZXBsYWNlIiwiZmlsZVNpemVIIiwic2l6ZSIsImJpdF9yYXRlIiwiTWF0aCIsInJvdW5kIiwidGVtcGxhdGUiLCJjdXN0b21FbGVtZW50cyIsImRlZmluZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/components/Transcoder/Configurator/Format.js\n");

/***/ }),

/***/ "./resources/js/components/Transcoder/Configurator/Streams.js":
/*!********************************************************************!*\
  !*** ./resources/js/components/Transcoder/Configurator/Streams.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var slim_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! slim-js */ \"./node_modules/slim-js/dist/index.js\");\n/* harmony import */ var _slim_directives__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../slim-directives */ \"./resources/js/slim-directives.js\");\n/* harmony import */ var _Streams_Video__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Streams/Video */ \"./resources/js/components/Transcoder/Configurator/Streams/Video.js\");\n/* harmony import */ var _Streams_Audio__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Streams/Audio */ \"./resources/js/components/Transcoder/Configurator/Streams/Audio.js\");\n/* harmony import */ var _Streams_Sub__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Streams/Sub */ \"./resources/js/components/Transcoder/Configurator/Streams/Sub.js\");\n/* harmony import */ var _Streams_Data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Streams/Data */ \"./resources/js/components/Transcoder/Configurator/Streams/Data.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\n\n\n\nvar TYPE_VIDEO = 'video';\nvar TYPE_AUDIO = 'audio';\nvar TYPE_SUB = 'subtitle';\nvar TYPE_DATA = 'data';\n\nvar Streams = /*#__PURE__*/function (_Slim) {\n  _inherits(Streams, _Slim);\n\n  var _super = _createSuper(Streams);\n\n  function Streams() {\n    _classCallCheck(this, Streams);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Streams, [{\n    key: \"video\",\n    get: function get() {\n      var _this$items;\n\n      return (_this$items = this.items) === null || _this$items === void 0 ? void 0 : _this$items.filter(function (i) {\n        return i.codec_type === TYPE_VIDEO;\n      });\n    }\n  }, {\n    key: \"audio\",\n    get: function get() {\n      var _this$items2;\n\n      return (_this$items2 = this.items) === null || _this$items2 === void 0 ? void 0 : _this$items2.filter(function (i) {\n        return i.codec_type === TYPE_AUDIO;\n      });\n    }\n  }, {\n    key: \"subs\",\n    get: function get() {\n      var _this$items3;\n\n      return (_this$items3 = this.items) === null || _this$items3 === void 0 ? void 0 : _this$items3.filter(function (i) {\n        return i.codec_type === TYPE_SUB;\n      });\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      var _this$items4;\n\n      return (_this$items4 = this.items) === null || _this$items4 === void 0 ? void 0 : _this$items4.filter(function (i) {\n        return i.codec_type === TYPE_DATA;\n      });\n    }\n  }]);\n\n  return Streams;\n}(slim_js__WEBPACK_IMPORTED_MODULE_0__.Slim);\n\nStreams.template =\n/*html*/\n\"\\n<style>\\ndiv {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 1rem;\\n}\\n</style>\\n<div>\\n    <transcode-configurator-stream-video *if=\\\"{{ this.video.length }}\\\" .streams=\\\"{{ this.video }}\\\"></transcode-configurator-stream-video>\\n    <transcode-configurator-stream-audio *if=\\\"{{ this.audio.length }}\\\" .streams=\\\"{{ this.audio }}\\\"></transcode-configurator-stream-audio>\\n    <transcode-configurator-stream-sub *if=\\\"{{ this.subs.length }}\\\" .streams=\\\"{{ this.subs }}\\\"></transcode-configurator-stream-sub>\\n    <transcode-configurator-stream-data *if=\\\"{{ this.data.length }}\\\" .streams=\\\"{{ this.data }}\\\"></transcode-configurator-stream-data>\\n</div>\\n\";\ncustomElements.define('transcode-configurator-streams', Streams);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvY29tcG9uZW50cy9UcmFuc2NvZGVyL0NvbmZpZ3VyYXRvci9TdHJlYW1zLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUEsSUFBTUMsVUFBVSxHQUFHLE9BQW5CO0FBQ0EsSUFBTUMsVUFBVSxHQUFHLE9BQW5CO0FBQ0EsSUFBTUMsUUFBUSxHQUFHLFVBQWpCO0FBQ0EsSUFBTUMsU0FBUyxHQUFHLE1BQWxCOztJQUVNQzs7Ozs7Ozs7Ozs7OztTQUVGLGVBQVk7QUFBQTs7QUFDUiw0QkFBTyxLQUFLQyxLQUFaLGdEQUFPLFlBQVlDLE1BQVosQ0FBbUIsVUFBQUMsQ0FBQztBQUFBLGVBQUlBLENBQUMsQ0FBQ0MsVUFBRixLQUFpQlIsVUFBckI7QUFBQSxPQUFwQixDQUFQO0FBQ0g7OztTQUVELGVBQVk7QUFBQTs7QUFDUiw2QkFBTyxLQUFLSyxLQUFaLGlEQUFPLGFBQVlDLE1BQVosQ0FBbUIsVUFBQUMsQ0FBQztBQUFBLGVBQUlBLENBQUMsQ0FBQ0MsVUFBRixLQUFpQlAsVUFBckI7QUFBQSxPQUFwQixDQUFQO0FBQ0g7OztTQUVELGVBQVc7QUFBQTs7QUFDUCw2QkFBTyxLQUFLSSxLQUFaLGlEQUFPLGFBQVlDLE1BQVosQ0FBbUIsVUFBQUMsQ0FBQztBQUFBLGVBQUlBLENBQUMsQ0FBQ0MsVUFBRixLQUFpQk4sUUFBckI7QUFBQSxPQUFwQixDQUFQO0FBQ0g7OztTQUVELGVBQVc7QUFBQTs7QUFDUCw2QkFBTyxLQUFLRyxLQUFaLGlEQUFPLGFBQVlDLE1BQVosQ0FBbUIsVUFBQUMsQ0FBQztBQUFBLGVBQUlBLENBQUMsQ0FBQ0MsVUFBRixLQUFpQkwsU0FBckI7QUFBQSxPQUFwQixDQUFQO0FBQ0g7Ozs7RUFoQmlCSjs7QUFtQnRCSyxPQUFPLENBQUNLLFFBQVI7QUFBbUI7QUFBbkI7QUFnQkFDLGNBQWMsQ0FBQ0MsTUFBZixDQUFzQixnQ0FBdEIsRUFBd0RQLE9BQXhEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2pzL2NvbXBvbmVudHMvVHJhbnNjb2Rlci9Db25maWd1cmF0b3IvU3RyZWFtcy5qcz9hMDcwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNsaW0gfSBmcm9tICdzbGltLWpzJ1xuaW1wb3J0ICcuLi8uLi8uLi9zbGltLWRpcmVjdGl2ZXMnXG5pbXBvcnQgJy4vU3RyZWFtcy9WaWRlbydcbmltcG9ydCAnLi9TdHJlYW1zL0F1ZGlvJ1xuaW1wb3J0ICcuL1N0cmVhbXMvU3ViJ1xuaW1wb3J0ICcuL1N0cmVhbXMvRGF0YSdcblxuY29uc3QgVFlQRV9WSURFTyA9ICd2aWRlbydcbmNvbnN0IFRZUEVfQVVESU8gPSAnYXVkaW8nXG5jb25zdCBUWVBFX1NVQiA9ICdzdWJ0aXRsZSdcbmNvbnN0IFRZUEVfREFUQSA9ICdkYXRhJ1xuXG5jbGFzcyBTdHJlYW1zIGV4dGVuZHMgU2xpbSB7XG5cbiAgICBnZXQgdmlkZW8oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLml0ZW1zPy5maWx0ZXIoaSA9PiBpLmNvZGVjX3R5cGUgPT09IFRZUEVfVklERU8pXG4gICAgfVxuXG4gICAgZ2V0IGF1ZGlvKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pdGVtcz8uZmlsdGVyKGkgPT4gaS5jb2RlY190eXBlID09PSBUWVBFX0FVRElPKVxuICAgIH1cblxuICAgIGdldCBzdWJzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pdGVtcz8uZmlsdGVyKGkgPT4gaS5jb2RlY190eXBlID09PSBUWVBFX1NVQilcbiAgICB9XG5cbiAgICBnZXQgZGF0YSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaXRlbXM/LmZpbHRlcihpID0+IGkuY29kZWNfdHlwZSA9PT0gVFlQRV9EQVRBKVxuICAgIH1cbn1cblxuU3RyZWFtcy50ZW1wbGF0ZSA9IC8qaHRtbCovYFxuPHN0eWxlPlxuZGl2IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgZ2FwOiAxcmVtO1xufVxuPC9zdHlsZT5cbjxkaXY+XG4gICAgPHRyYW5zY29kZS1jb25maWd1cmF0b3Itc3RyZWFtLXZpZGVvICppZj1cInt7IHRoaXMudmlkZW8ubGVuZ3RoIH19XCIgLnN0cmVhbXM9XCJ7eyB0aGlzLnZpZGVvIH19XCI+PC90cmFuc2NvZGUtY29uZmlndXJhdG9yLXN0cmVhbS12aWRlbz5cbiAgICA8dHJhbnNjb2RlLWNvbmZpZ3VyYXRvci1zdHJlYW0tYXVkaW8gKmlmPVwie3sgdGhpcy5hdWRpby5sZW5ndGggfX1cIiAuc3RyZWFtcz1cInt7IHRoaXMuYXVkaW8gfX1cIj48L3RyYW5zY29kZS1jb25maWd1cmF0b3Itc3RyZWFtLWF1ZGlvPlxuICAgIDx0cmFuc2NvZGUtY29uZmlndXJhdG9yLXN0cmVhbS1zdWIgKmlmPVwie3sgdGhpcy5zdWJzLmxlbmd0aCB9fVwiIC5zdHJlYW1zPVwie3sgdGhpcy5zdWJzIH19XCI+PC90cmFuc2NvZGUtY29uZmlndXJhdG9yLXN0cmVhbS1zdWI+XG4gICAgPHRyYW5zY29kZS1jb25maWd1cmF0b3Itc3RyZWFtLWRhdGEgKmlmPVwie3sgdGhpcy5kYXRhLmxlbmd0aCB9fVwiIC5zdHJlYW1zPVwie3sgdGhpcy5kYXRhIH19XCI+PC90cmFuc2NvZGUtY29uZmlndXJhdG9yLXN0cmVhbS1kYXRhPlxuPC9kaXY+XG5gXG5cbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgndHJhbnNjb2RlLWNvbmZpZ3VyYXRvci1zdHJlYW1zJywgU3RyZWFtcyk7Il0sIm5hbWVzIjpbIlNsaW0iLCJUWVBFX1ZJREVPIiwiVFlQRV9BVURJTyIsIlRZUEVfU1VCIiwiVFlQRV9EQVRBIiwiU3RyZWFtcyIsIml0ZW1zIiwiZmlsdGVyIiwiaSIsImNvZGVjX3R5cGUiLCJ0ZW1wbGF0ZSIsImN1c3RvbUVsZW1lbnRzIiwiZGVmaW5lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/components/Transcoder/Configurator/Streams.js\n");

/***/ }),

/***/ "./resources/js/components/Transcoder/Configurator/Streams/Audio.js":
/*!**************************************************************************!*\
  !*** ./resources/js/components/Transcoder/Configurator/Streams/Audio.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Stream */ \"./resources/js/components/Transcoder/Configurator/Streams/Stream.js\");\n/* harmony import */ var _CardCss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../CardCss */ \"./resources/js/components/Transcoder/Configurator/CardCss.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\nvar Audio = /*#__PURE__*/function (_Stream) {\n  _inherits(Audio, _Stream);\n\n  var _super = _createSuper(Audio);\n\n  function Audio() {\n    _classCallCheck(this, Audio);\n\n    return _super.apply(this, arguments);\n  }\n\n  return Audio;\n}(_Stream__WEBPACK_IMPORTED_MODULE_0__.Stream);\n\nAudio.prototype.header = 'Audio';\nAudio.template =\n/*html*/\n\"\\n\".concat(_CardCss__WEBPACK_IMPORTED_MODULE_1__.default, \"\\n\").concat(_Stream__WEBPACK_IMPORTED_MODULE_0__.MAINSTART, \"\\n<section class=\\\"toggle\\\">\\n    <div class=\\\"{{ item.shortView && 'visible' }}\\\" @click=\\\"{{ this.toggleView(item) }}\\\" data-toggle=\\\"true\\\">\\n        <span class=\\\"iconify\\\" data-icon=\\\"mdi-chevron-right\\\"></span>\\n        Stream #0:{{ item.index }}\\n        {{ item.codec_name }}\\n        {{ item.channel_layout && item.channel_layout + ',' || '' }}\\n        {{ (item.bit_rate && Math.round(item.bit_rate / 1000) + ' kb/s') || '' }}\\n        {{ (item.tags?.language || '').wrap('(', ')') }}\\n    </div>\\n    <div class=\\\"{{ (!item.shortView && 'visible') }}\\\" @click=\\\"{{ this.toggleView(item) }}\\\" data-toggle=\\\"true\\\">\\n        <span class=\\\"iconify\\\" data-icon=\\\"mdi-chevron-down\\\"></span>\\n        Stream #0:{{ item.index }}{{ (item.id?.wrap('[', ']') || '') }}:\\n        {{ (item.tags?.language || '').wrap('(', ')') }}\\n    </div>\\n    <div class=\\\"{{ (!item.shortView && 'visible') }}\\\">\\n        Audio: {{ item.codec_name }}\\n        {{ [item.codec_tag_string, item.codec_tag].filter(i => i).join(' / ')?.wrap('(', ')') }},\\n        {{ item.sample_rate && item.sample_rate + 'Hz,' || '' }}\\n        {{ item.channel_layout && item.channel_layout + ',' || '' }}\\n        {{ item.sample_fmt && item.sample_fmt + ',' || '' }}\\n        {{ (item.bit_rate && Math.round(item.bit_rate / 1000) + ' kb/s') || '' }}\\n    </div>\\n</section>\\n\").concat(_Stream__WEBPACK_IMPORTED_MODULE_0__.MAINEND, \"\\n\");\ncustomElements.define('transcode-configurator-stream-audio', Audio);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvY29tcG9uZW50cy9UcmFuc2NvZGVyL0NvbmZpZ3VyYXRvci9TdHJlYW1zL0F1ZGlvLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7O0lBRU1JOzs7Ozs7Ozs7Ozs7RUFBY0o7O0FBRXBCSSxLQUFLLENBQUNDLFNBQU4sQ0FBZ0JDLE1BQWhCLEdBQXlCLE9BQXpCO0FBRUFGLEtBQUssQ0FBQ0csUUFBTjtBQUFpQjtBQUFqQixZQUNFSiw2Q0FERixlQUVFRiw4Q0FGRiwyMENBMEJFQyw0Q0ExQkY7QUE2QkFNLGNBQWMsQ0FBQ0MsTUFBZixDQUFzQixxQ0FBdEIsRUFBNkRMLEtBQTdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2pzL2NvbXBvbmVudHMvVHJhbnNjb2Rlci9Db25maWd1cmF0b3IvU3RyZWFtcy9BdWRpby5qcz8yNzg2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7U3RyZWFtLCBNQUlOU1RBUlQsIE1BSU5FTkR9IGZyb20gXCIuL1N0cmVhbVwiO1xuaW1wb3J0IENBUkRfQ1NTIGZyb20gXCIuLi9DYXJkQ3NzXCI7XG5cbmNsYXNzIEF1ZGlvIGV4dGVuZHMgU3RyZWFtIHt9XG5cbkF1ZGlvLnByb3RvdHlwZS5oZWFkZXIgPSAnQXVkaW8nXG5cbkF1ZGlvLnRlbXBsYXRlID0gLypodG1sKi9gXG4ke0NBUkRfQ1NTfVxuJHtNQUlOU1RBUlR9XG48c2VjdGlvbiBjbGFzcz1cInRvZ2dsZVwiPlxuICAgIDxkaXYgY2xhc3M9XCJ7eyBpdGVtLnNob3J0VmlldyAmJiAndmlzaWJsZScgfX1cIiBAY2xpY2s9XCJ7eyB0aGlzLnRvZ2dsZVZpZXcoaXRlbSkgfX1cIiBkYXRhLXRvZ2dsZT1cInRydWVcIj5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJpY29uaWZ5XCIgZGF0YS1pY29uPVwibWRpLWNoZXZyb24tcmlnaHRcIj48L3NwYW4+XG4gICAgICAgIFN0cmVhbSAjMDp7eyBpdGVtLmluZGV4IH19XG4gICAgICAgIHt7IGl0ZW0uY29kZWNfbmFtZSB9fVxuICAgICAgICB7eyBpdGVtLmNoYW5uZWxfbGF5b3V0ICYmIGl0ZW0uY2hhbm5lbF9sYXlvdXQgKyAnLCcgfHwgJycgfX1cbiAgICAgICAge3sgKGl0ZW0uYml0X3JhdGUgJiYgTWF0aC5yb3VuZChpdGVtLmJpdF9yYXRlIC8gMTAwMCkgKyAnIGtiL3MnKSB8fCAnJyB9fVxuICAgICAgICB7eyAoaXRlbS50YWdzPy5sYW5ndWFnZSB8fCAnJykud3JhcCgnKCcsICcpJykgfX1cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwie3sgKCFpdGVtLnNob3J0VmlldyAmJiAndmlzaWJsZScpIH19XCIgQGNsaWNrPVwie3sgdGhpcy50b2dnbGVWaWV3KGl0ZW0pIH19XCIgZGF0YS10b2dnbGU9XCJ0cnVlXCI+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwiaWNvbmlmeVwiIGRhdGEtaWNvbj1cIm1kaS1jaGV2cm9uLWRvd25cIj48L3NwYW4+XG4gICAgICAgIFN0cmVhbSAjMDp7eyBpdGVtLmluZGV4IH19e3sgKGl0ZW0uaWQ/LndyYXAoJ1snLCAnXScpIHx8ICcnKSB9fTpcbiAgICAgICAge3sgKGl0ZW0udGFncz8ubGFuZ3VhZ2UgfHwgJycpLndyYXAoJygnLCAnKScpIH19XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cInt7ICghaXRlbS5zaG9ydFZpZXcgJiYgJ3Zpc2libGUnKSB9fVwiPlxuICAgICAgICBBdWRpbzoge3sgaXRlbS5jb2RlY19uYW1lIH19XG4gICAgICAgIHt7IFtpdGVtLmNvZGVjX3RhZ19zdHJpbmcsIGl0ZW0uY29kZWNfdGFnXS5maWx0ZXIoaSA9PiBpKS5qb2luKCcgLyAnKT8ud3JhcCgnKCcsICcpJykgfX0sXG4gICAgICAgIHt7IGl0ZW0uc2FtcGxlX3JhdGUgJiYgaXRlbS5zYW1wbGVfcmF0ZSArICdIeiwnIHx8ICcnIH19XG4gICAgICAgIHt7IGl0ZW0uY2hhbm5lbF9sYXlvdXQgJiYgaXRlbS5jaGFubmVsX2xheW91dCArICcsJyB8fCAnJyB9fVxuICAgICAgICB7eyBpdGVtLnNhbXBsZV9mbXQgJiYgaXRlbS5zYW1wbGVfZm10ICsgJywnIHx8ICcnIH19XG4gICAgICAgIHt7IChpdGVtLmJpdF9yYXRlICYmIE1hdGgucm91bmQoaXRlbS5iaXRfcmF0ZSAvIDEwMDApICsgJyBrYi9zJykgfHwgJycgfX1cbiAgICA8L2Rpdj5cbjwvc2VjdGlvbj5cbiR7TUFJTkVORH1cbmBcblxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCd0cmFuc2NvZGUtY29uZmlndXJhdG9yLXN0cmVhbS1hdWRpbycsIEF1ZGlvKTsiXSwibmFtZXMiOlsiU3RyZWFtIiwiTUFJTlNUQVJUIiwiTUFJTkVORCIsIkNBUkRfQ1NTIiwiQXVkaW8iLCJwcm90b3R5cGUiLCJoZWFkZXIiLCJ0ZW1wbGF0ZSIsImN1c3RvbUVsZW1lbnRzIiwiZGVmaW5lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/components/Transcoder/Configurator/Streams/Audio.js\n");

/***/ }),

/***/ "./resources/js/components/Transcoder/Configurator/Streams/Data.js":
/*!*************************************************************************!*\
  !*** ./resources/js/components/Transcoder/Configurator/Streams/Data.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Stream */ \"./resources/js/components/Transcoder/Configurator/Streams/Stream.js\");\n/* harmony import */ var _CardCss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../CardCss */ \"./resources/js/components/Transcoder/Configurator/CardCss.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\nvar Data = /*#__PURE__*/function (_Stream) {\n  _inherits(Data, _Stream);\n\n  var _super = _createSuper(Data);\n\n  function Data() {\n    _classCallCheck(this, Data);\n\n    return _super.apply(this, arguments);\n  }\n\n  return Data;\n}(_Stream__WEBPACK_IMPORTED_MODULE_0__.Stream);\n\nData.prototype.header = 'Data';\nData.template =\n/*html*/\n\"\\n\".concat(_CardCss__WEBPACK_IMPORTED_MODULE_1__.default, \"\\n\").concat(_Stream__WEBPACK_IMPORTED_MODULE_0__.MAINSTART, \"\\n<section class=\\\"toggle\\\">\\n    <div class=\\\"{{ item.shortView && 'visible' }}\\\" @click=\\\"{{ this.toggleView(item) }}\\\" data-toggle=\\\"true\\\">\\n        <span class=\\\"iconify\\\" data-icon=\\\"mdi-chevron-right\\\"></span>\\n        Stream #0:{{ item.index }}\\n        {{ item.codec_name }}\\n    </div>\\n    <div class=\\\"{{ (!item.shortView && 'visible') }}\\\" @click=\\\"{{ this.toggleView(item) }}\\\" data-toggle=\\\"true\\\">\\n        <span class=\\\"iconify\\\" data-icon=\\\"mdi-chevron-down\\\"></span>\\n        Stream #0:{{ item.index }}{{ (item.id?.wrap('[', ']') || '') }}:\\n        {{ (item.tags?.language || '').wrap('(', ')') }}\\n    </div>\\n    <div class=\\\"{{ (!item.shortView && 'visible') }}\\\">\\n        Data: {{ item.codec_name }}\\n        {{ [item.codec_tag_string, item.codec_tag].filter(i => i).join(' / ')?.wrap('(', ')') }}\\n    </div>\\n</section>\\n\").concat(_Stream__WEBPACK_IMPORTED_MODULE_0__.MAINEND, \"\\n\");\ncustomElements.define('transcode-configurator-stream-data', Data);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvY29tcG9uZW50cy9UcmFuc2NvZGVyL0NvbmZpZ3VyYXRvci9TdHJlYW1zL0RhdGEuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTs7SUFFTUk7Ozs7Ozs7Ozs7OztFQUFhSjs7QUFFbkJJLElBQUksQ0FBQ0MsU0FBTCxDQUFlQyxNQUFmLEdBQXdCLE1BQXhCO0FBRUFGLElBQUksQ0FBQ0csUUFBTDtBQUFnQjtBQUFoQixZQUNFSiw2Q0FERixlQUVFRiw4Q0FGRiw2MUJBbUJFQyw0Q0FuQkY7QUFzQkFNLGNBQWMsQ0FBQ0MsTUFBZixDQUFzQixvQ0FBdEIsRUFBNERMLElBQTVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2pzL2NvbXBvbmVudHMvVHJhbnNjb2Rlci9Db25maWd1cmF0b3IvU3RyZWFtcy9EYXRhLmpzP2E2MWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtTdHJlYW0sIE1BSU5TVEFSVCwgTUFJTkVORH0gZnJvbSBcIi4vU3RyZWFtXCI7XG5pbXBvcnQgQ0FSRF9DU1MgZnJvbSBcIi4uL0NhcmRDc3NcIjtcblxuY2xhc3MgRGF0YSBleHRlbmRzIFN0cmVhbSB7fVxuXG5EYXRhLnByb3RvdHlwZS5oZWFkZXIgPSAnRGF0YSdcblxuRGF0YS50ZW1wbGF0ZSA9IC8qaHRtbCovYFxuJHtDQVJEX0NTU31cbiR7TUFJTlNUQVJUfVxuPHNlY3Rpb24gY2xhc3M9XCJ0b2dnbGVcIj5cbiAgICA8ZGl2IGNsYXNzPVwie3sgaXRlbS5zaG9ydFZpZXcgJiYgJ3Zpc2libGUnIH19XCIgQGNsaWNrPVwie3sgdGhpcy50b2dnbGVWaWV3KGl0ZW0pIH19XCIgZGF0YS10b2dnbGU9XCJ0cnVlXCI+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwiaWNvbmlmeVwiIGRhdGEtaWNvbj1cIm1kaS1jaGV2cm9uLXJpZ2h0XCI+PC9zcGFuPlxuICAgICAgICBTdHJlYW0gIzA6e3sgaXRlbS5pbmRleCB9fVxuICAgICAgICB7eyBpdGVtLmNvZGVjX25hbWUgfX1cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwie3sgKCFpdGVtLnNob3J0VmlldyAmJiAndmlzaWJsZScpIH19XCIgQGNsaWNrPVwie3sgdGhpcy50b2dnbGVWaWV3KGl0ZW0pIH19XCIgZGF0YS10b2dnbGU9XCJ0cnVlXCI+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwiaWNvbmlmeVwiIGRhdGEtaWNvbj1cIm1kaS1jaGV2cm9uLWRvd25cIj48L3NwYW4+XG4gICAgICAgIFN0cmVhbSAjMDp7eyBpdGVtLmluZGV4IH19e3sgKGl0ZW0uaWQ/LndyYXAoJ1snLCAnXScpIHx8ICcnKSB9fTpcbiAgICAgICAge3sgKGl0ZW0udGFncz8ubGFuZ3VhZ2UgfHwgJycpLndyYXAoJygnLCAnKScpIH19XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cInt7ICghaXRlbS5zaG9ydFZpZXcgJiYgJ3Zpc2libGUnKSB9fVwiPlxuICAgICAgICBEYXRhOiB7eyBpdGVtLmNvZGVjX25hbWUgfX1cbiAgICAgICAge3sgW2l0ZW0uY29kZWNfdGFnX3N0cmluZywgaXRlbS5jb2RlY190YWddLmZpbHRlcihpID0+IGkpLmpvaW4oJyAvICcpPy53cmFwKCcoJywgJyknKSB9fVxuICAgIDwvZGl2PlxuPC9zZWN0aW9uPlxuJHtNQUlORU5EfVxuYFxuXG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ3RyYW5zY29kZS1jb25maWd1cmF0b3Itc3RyZWFtLWRhdGEnLCBEYXRhKTsiXSwibmFtZXMiOlsiU3RyZWFtIiwiTUFJTlNUQVJUIiwiTUFJTkVORCIsIkNBUkRfQ1NTIiwiRGF0YSIsInByb3RvdHlwZSIsImhlYWRlciIsInRlbXBsYXRlIiwiY3VzdG9tRWxlbWVudHMiLCJkZWZpbmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/components/Transcoder/Configurator/Streams/Data.js\n");

/***/ }),

/***/ "./resources/js/components/Transcoder/Configurator/Streams/Stream.js":
/*!***************************************************************************!*\
  !*** ./resources/js/components/Transcoder/Configurator/Streams/Stream.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Stream\": () => (/* binding */ Stream),\n/* harmony export */   \"MAINSTART\": () => (/* binding */ MAINSTART),\n/* harmony export */   \"MAINEND\": () => (/* binding */ MAINEND)\n/* harmony export */ });\n/* harmony import */ var slim_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! slim-js */ \"./node_modules/slim-js/dist/index.js\");\n/* harmony import */ var _slim_directives__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../slim-directives */ \"./resources/js/slim-directives.js\");\n/* harmony import */ var _iconify_iconify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @iconify/iconify */ \"./node_modules/@iconify/iconify/dist/iconify.min.js\");\n/* harmony import */ var _iconify_iconify__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_iconify_iconify__WEBPACK_IMPORTED_MODULE_2__);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\n\nvar Stream = /*#__PURE__*/function (_Slim) {\n  _inherits(Stream, _Slim);\n\n  var _super = _createSuper(Stream);\n\n  function Stream() {\n    var _this;\n\n    _classCallCheck(this, Stream);\n\n    _this = _super.call(this);\n\n    _this.streams.forEach(function (item) {\n      item.shortView = true;\n    });\n\n    _this[\"short\"] = true;\n    return _this;\n  }\n\n  _createClass(Stream, [{\n    key: \"onAdded\",\n    value: function onAdded() {\n      var _this2 = this;\n\n      requestAnimationFrame(function () {\n        return _iconify_iconify__WEBPACK_IMPORTED_MODULE_2___default().scan(_this2.shadowRoot);\n      });\n    }\n  }, {\n    key: \"toggleView\",\n    value: function toggleView(item) {\n      item.shortView = !item.shortView;\n      slim_js__WEBPACK_IMPORTED_MODULE_0__.Utils.forceUpdate(this);\n    }\n  }]);\n\n  return Stream;\n}(slim_js__WEBPACK_IMPORTED_MODULE_0__.Slim);\n\nvar MAINSTART =\n/*html*/\n\"\\n<main>\\n    <h2>{{ this.header }}</h2>\\n    <div *foreach=\\\"{{ this.streams }}\\\">\\n\";\nvar MAINEND =\n/*html*/\n\"\\n    </div>\\n</main>\\n\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvY29tcG9uZW50cy9UcmFuc2NvZGVyL0NvbmZpZ3VyYXRvci9TdHJlYW1zL1N0cmVhbS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTs7SUFFTUc7Ozs7O0FBRUYsb0JBQWM7QUFBQTs7QUFBQTs7QUFDVjs7QUFDQSxVQUFLQyxPQUFMLENBQWFDLE9BQWIsQ0FBcUIsVUFBQUMsSUFBSSxFQUFJO0FBQ3pCQSxNQUFBQSxJQUFJLENBQUNDLFNBQUwsR0FBaUIsSUFBakI7QUFDSCxLQUZEOztBQUdBLHFCQUFhLElBQWI7QUFMVTtBQU1iOzs7O1dBRUQsbUJBQVU7QUFBQTs7QUFDTkMsTUFBQUEscUJBQXFCLENBQUM7QUFBQSxlQUFNTiw0REFBQSxDQUFhLE1BQUksQ0FBQ1EsVUFBbEIsQ0FBTjtBQUFBLE9BQUQsQ0FBckI7QUFDSDs7O1dBRUQsb0JBQVdKLElBQVgsRUFBaUI7QUFDYkEsTUFBQUEsSUFBSSxDQUFDQyxTQUFMLEdBQWlCLENBQUNELElBQUksQ0FBQ0MsU0FBdkI7QUFDQU4sTUFBQUEsc0RBQUEsQ0FBa0IsSUFBbEI7QUFDSDs7OztFQWpCZ0JEOztBQW9CckIsSUFBTVksU0FBUztBQUFHO0FBQUgsdUZBQWY7QUFNQSxJQUFNQyxPQUFPO0FBQUc7QUFBSCx5QkFBYiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9qcy9jb21wb25lbnRzL1RyYW5zY29kZXIvQ29uZmlndXJhdG9yL1N0cmVhbXMvU3RyZWFtLmpzPzZlZWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2xpbSwgVXRpbHMgfSBmcm9tICdzbGltLWpzJ1xuaW1wb3J0ICcuLi8uLi8uLi8uLi9zbGltLWRpcmVjdGl2ZXMnXG5pbXBvcnQgSWNvbmlmeSBmcm9tICdAaWNvbmlmeS9pY29uaWZ5J1xuXG5jbGFzcyBTdHJlYW0gZXh0ZW5kcyBTbGltIHtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpXG4gICAgICAgIHRoaXMuc3RyZWFtcy5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICAgICAgaXRlbS5zaG9ydFZpZXcgPSB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnNob3J0ID0gdHJ1ZVxuICAgIH1cblxuICAgIG9uQWRkZWQoKSB7XG4gICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiBJY29uaWZ5LnNjYW4odGhpcy5zaGFkb3dSb290KSlcbiAgICB9XG5cbiAgICB0b2dnbGVWaWV3KGl0ZW0pIHtcbiAgICAgICAgaXRlbS5zaG9ydFZpZXcgPSAhaXRlbS5zaG9ydFZpZXdcbiAgICAgICAgVXRpbHMuZm9yY2VVcGRhdGUodGhpcylcbiAgICB9XG59XG5cbmNvbnN0IE1BSU5TVEFSVCA9IC8qaHRtbCovIGBcbjxtYWluPlxuICAgIDxoMj57eyB0aGlzLmhlYWRlciB9fTwvaDI+XG4gICAgPGRpdiAqZm9yZWFjaD1cInt7IHRoaXMuc3RyZWFtcyB9fVwiPlxuYFxuXG5jb25zdCBNQUlORU5EID0gLypodG1sKi8gYFxuICAgIDwvZGl2PlxuPC9tYWluPlxuYFxuXG5leHBvcnQge1N0cmVhbSwgTUFJTlNUQVJULCBNQUlORU5EfSJdLCJuYW1lcyI6WyJTbGltIiwiVXRpbHMiLCJJY29uaWZ5IiwiU3RyZWFtIiwic3RyZWFtcyIsImZvckVhY2giLCJpdGVtIiwic2hvcnRWaWV3IiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwic2NhbiIsInNoYWRvd1Jvb3QiLCJmb3JjZVVwZGF0ZSIsIk1BSU5TVEFSVCIsIk1BSU5FTkQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/components/Transcoder/Configurator/Streams/Stream.js\n");

/***/ }),

/***/ "./resources/js/components/Transcoder/Configurator/Streams/Sub.js":
/*!************************************************************************!*\
  !*** ./resources/js/components/Transcoder/Configurator/Streams/Sub.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Stream */ \"./resources/js/components/Transcoder/Configurator/Streams/Stream.js\");\n/* harmony import */ var _CardCss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../CardCss */ \"./resources/js/components/Transcoder/Configurator/CardCss.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\nvar Sub = /*#__PURE__*/function (_Stream) {\n  _inherits(Sub, _Stream);\n\n  var _super = _createSuper(Sub);\n\n  function Sub() {\n    _classCallCheck(this, Sub);\n\n    return _super.apply(this, arguments);\n  }\n\n  return Sub;\n}(_Stream__WEBPACK_IMPORTED_MODULE_0__.Stream);\n\nSub.prototype.header = 'Subtitle';\nSub.template =\n/*html*/\n\"\\n\".concat(_CardCss__WEBPACK_IMPORTED_MODULE_1__.default, \"\\n\").concat(_Stream__WEBPACK_IMPORTED_MODULE_0__.MAINSTART, \"\\n<section class=\\\"toggle\\\">\\n    <div class=\\\"{{ item.shortView && 'visible' }}\\\" @click=\\\"{{ this.toggleView(item) }}\\\" data-toggle=\\\"true\\\">\\n        <span class=\\\"iconify\\\" data-icon=\\\"mdi-chevron-right\\\"></span>\\n        Stream #0:{{ item.index }}\\n        {{ item.codec_name }}\\n        {{ (item.tags?.language || '').wrap('(', ')') }}\\n        {{ Object.keys(item.disposition).filter(k => item.disposition[k] > 0).join(', ').wrap('(', ')') }}\\n    </div>\\n    <div class=\\\"{{ (!item.shortView && 'visible') }}\\\" @click=\\\"{{ this.toggleView(item) }}\\\" data-toggle=\\\"true\\\">\\n        <span class=\\\"iconify\\\" data-icon=\\\"mdi-chevron-down\\\"></span>\\n        Stream #0:{{ item.index }}{{ (item.id?.wrap('[', ']') || '') }}:\\n        {{ (item.tags?.language || '').wrap('(', ')') }}\\n    </div>\\n    <div class=\\\"{{ (!item.shortView && 'visible') }}\\\">\\n        Subtitle: {{ item.codec_name }}\\n        {{ [item.codec_tag_string, item.codec_tag].filter(i => i).join(' / ')?.wrap('(', ')') }}\\n        {{ Object.keys(item.disposition).filter(k => item.disposition[k] > 0).join(', ').wrap('(', ')') }}\\n    </div>\\n</section>\\n\").concat(_Stream__WEBPACK_IMPORTED_MODULE_0__.MAINEND, \"\\n\");\ncustomElements.define('transcode-configurator-stream-sub', Sub);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvY29tcG9uZW50cy9UcmFuc2NvZGVyL0NvbmZpZ3VyYXRvci9TdHJlYW1zL1N1Yi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBOztJQUVNSTs7Ozs7Ozs7Ozs7O0VBQVlKOztBQUVsQkksR0FBRyxDQUFDQyxTQUFKLENBQWNDLE1BQWQsR0FBdUIsVUFBdkI7QUFFQUYsR0FBRyxDQUFDRyxRQUFKO0FBQWU7QUFBZixZQUNFSiw2Q0FERixlQUVFRiw4Q0FGRixtbkNBc0JFQyw0Q0F0QkY7QUF5QkFNLGNBQWMsQ0FBQ0MsTUFBZixDQUFzQixtQ0FBdEIsRUFBMkRMLEdBQTNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2pzL2NvbXBvbmVudHMvVHJhbnNjb2Rlci9Db25maWd1cmF0b3IvU3RyZWFtcy9TdWIuanM/OTU4MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1N0cmVhbSwgTUFJTlNUQVJULCBNQUlORU5EfSBmcm9tIFwiLi9TdHJlYW1cIjtcbmltcG9ydCBDQVJEX0NTUyBmcm9tIFwiLi4vQ2FyZENzc1wiO1xuXG5jbGFzcyBTdWIgZXh0ZW5kcyBTdHJlYW0ge31cblxuU3ViLnByb3RvdHlwZS5oZWFkZXIgPSAnU3VidGl0bGUnXG5cblN1Yi50ZW1wbGF0ZSA9IC8qaHRtbCovYFxuJHtDQVJEX0NTU31cbiR7TUFJTlNUQVJUfVxuPHNlY3Rpb24gY2xhc3M9XCJ0b2dnbGVcIj5cbiAgICA8ZGl2IGNsYXNzPVwie3sgaXRlbS5zaG9ydFZpZXcgJiYgJ3Zpc2libGUnIH19XCIgQGNsaWNrPVwie3sgdGhpcy50b2dnbGVWaWV3KGl0ZW0pIH19XCIgZGF0YS10b2dnbGU9XCJ0cnVlXCI+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwiaWNvbmlmeVwiIGRhdGEtaWNvbj1cIm1kaS1jaGV2cm9uLXJpZ2h0XCI+PC9zcGFuPlxuICAgICAgICBTdHJlYW0gIzA6e3sgaXRlbS5pbmRleCB9fVxuICAgICAgICB7eyBpdGVtLmNvZGVjX25hbWUgfX1cbiAgICAgICAge3sgKGl0ZW0udGFncz8ubGFuZ3VhZ2UgfHwgJycpLndyYXAoJygnLCAnKScpIH19XG4gICAgICAgIHt7IE9iamVjdC5rZXlzKGl0ZW0uZGlzcG9zaXRpb24pLmZpbHRlcihrID0+IGl0ZW0uZGlzcG9zaXRpb25ba10gPiAwKS5qb2luKCcsICcpLndyYXAoJygnLCAnKScpIH19XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cInt7ICghaXRlbS5zaG9ydFZpZXcgJiYgJ3Zpc2libGUnKSB9fVwiIEBjbGljaz1cInt7IHRoaXMudG9nZ2xlVmlldyhpdGVtKSB9fVwiIGRhdGEtdG9nZ2xlPVwidHJ1ZVwiPlxuICAgICAgICA8c3BhbiBjbGFzcz1cImljb25pZnlcIiBkYXRhLWljb249XCJtZGktY2hldnJvbi1kb3duXCI+PC9zcGFuPlxuICAgICAgICBTdHJlYW0gIzA6e3sgaXRlbS5pbmRleCB9fXt7IChpdGVtLmlkPy53cmFwKCdbJywgJ10nKSB8fCAnJykgfX06XG4gICAgICAgIHt7IChpdGVtLnRhZ3M/Lmxhbmd1YWdlIHx8ICcnKS53cmFwKCcoJywgJyknKSB9fVxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJ7eyAoIWl0ZW0uc2hvcnRWaWV3ICYmICd2aXNpYmxlJykgfX1cIj5cbiAgICAgICAgU3VidGl0bGU6IHt7IGl0ZW0uY29kZWNfbmFtZSB9fVxuICAgICAgICB7eyBbaXRlbS5jb2RlY190YWdfc3RyaW5nLCBpdGVtLmNvZGVjX3RhZ10uZmlsdGVyKGkgPT4gaSkuam9pbignIC8gJyk/LndyYXAoJygnLCAnKScpIH19XG4gICAgICAgIHt7IE9iamVjdC5rZXlzKGl0ZW0uZGlzcG9zaXRpb24pLmZpbHRlcihrID0+IGl0ZW0uZGlzcG9zaXRpb25ba10gPiAwKS5qb2luKCcsICcpLndyYXAoJygnLCAnKScpIH19XG4gICAgPC9kaXY+XG48L3NlY3Rpb24+XG4ke01BSU5FTkR9XG5gXG5cbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgndHJhbnNjb2RlLWNvbmZpZ3VyYXRvci1zdHJlYW0tc3ViJywgU3ViKTsiXSwibmFtZXMiOlsiU3RyZWFtIiwiTUFJTlNUQVJUIiwiTUFJTkVORCIsIkNBUkRfQ1NTIiwiU3ViIiwicHJvdG90eXBlIiwiaGVhZGVyIiwidGVtcGxhdGUiLCJjdXN0b21FbGVtZW50cyIsImRlZmluZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/components/Transcoder/Configurator/Streams/Sub.js\n");

/***/ }),

/***/ "./resources/js/components/Transcoder/Configurator/Streams/Video.js":
/*!**************************************************************************!*\
  !*** ./resources/js/components/Transcoder/Configurator/Streams/Video.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Stream */ \"./resources/js/components/Transcoder/Configurator/Streams/Stream.js\");\n/* harmony import */ var _CardCss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../CardCss */ \"./resources/js/components/Transcoder/Configurator/CardCss.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\nvar Video = /*#__PURE__*/function (_Stream) {\n  _inherits(Video, _Stream);\n\n  var _super = _createSuper(Video);\n\n  function Video() {\n    _classCallCheck(this, Video);\n\n    return _super.apply(this, arguments);\n  }\n\n  return Video;\n}(_Stream__WEBPACK_IMPORTED_MODULE_0__.Stream);\n\nVideo.prototype.header = 'Video';\nVideo.template =\n/*html*/\n\"\\n\".concat(_CardCss__WEBPACK_IMPORTED_MODULE_1__.default, \"\\n<style>\\n</style>\\n\").concat(_Stream__WEBPACK_IMPORTED_MODULE_0__.MAINSTART, \"\\n<section class=\\\"toggle\\\">\\n    <div class=\\\"{{ (item.shortView && 'visible') }}\\\" @click=\\\"{{ this.toggleView(item) }}\\\" data-toggle=\\\"true\\\">\\n        <span class=\\\"iconify\\\" data-icon=\\\"mdi-chevron-right\\\"></span>\\n        Stream #0:{{ item.index }}\\n        {{ item.codec_name }}\\n        {{ [item.width, item.height].filter(i => i).join('x') }}\\n    </div>\\n    <div class=\\\"{{ (!item.shortView && 'visible') }}\\\" @click=\\\"{{ this.toggleView(item) }}\\\" data-toggle=\\\"true\\\">\\n        <span class=\\\"iconify\\\" data-icon=\\\"mdi-chevron-down\\\"></span>\\n        Stream #0:{{ item.index }}{{ (item.id?.wrap('[', ']') || '') }}:\\n    </div>\\n    <div class=\\\"{{ (!item.shortView && 'visible') }}\\\">\\n        Video: {{ item.codec_name }}\\n        {{ item.profile?.wrap('(', ')') || '' }}\\n        {{ [item.codec_tag_string, item.codec_tag].filter(i => i).join(' / ')?.wrap('(', ')') || '' }}\\n        {{ (item.pix_fmt || '') }}{{ [item.color_range, item.color_space, item.field_order].filter(i => i).join(', ')?.wrap('(', ')') }}\\n    </div>\\n    <div class=\\\"{{ (!item.shortView && 'visible') }}\\\">\\n        {{ [item.width, item.height].filter(i => i).join('x') }}\\n        {{ [item.sample_aspect_ratio?.wrap('SAR '), item.display_aspect_ratio?.wrap('DAR ')].filter(i => i).join(' ')?.wrap('[', ']') }}\\n        {{ ( item.avg_frame_rate?.indexOf('/') > -1 && eval(item.avg_frame_rate) || (item.avg_frame_rate || 'N/A') ) }} fps,\\n        {{ ( item.r_frame_rate?.indexOf('/') > -1 && eval(item.r_frame_rate) || (item.r_frame_rate || 'N/A') ) }} tbr,\\n        {{ ( item.time_base?.indexOf('/') > -1 && parseInt(item.time_base.split('/').pop(), 10) / 1000 + 'k' || (item.time_base || 'N/A') ) }} tbn,\\n        {{ ( item.codec_time_base?.indexOf('/') > -1 && item.codec_time_base.split('/').pop() || (item.codec_time_base || 'N/A') ) }} tbc\\n    </div>\\n</section>\\n\").concat(_Stream__WEBPACK_IMPORTED_MODULE_0__.MAINEND, \"\\n\");\ncustomElements.define('transcode-configurator-stream-video', Video);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvY29tcG9uZW50cy9UcmFuc2NvZGVyL0NvbmZpZ3VyYXRvci9TdHJlYW1zL1ZpZGVvLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7O0lBRU1JOzs7Ozs7Ozs7Ozs7RUFBY0o7O0FBRXBCSSxLQUFLLENBQUNDLFNBQU4sQ0FBZ0JDLE1BQWhCLEdBQXlCLE9BQXpCO0FBRUFGLEtBQUssQ0FBQ0csUUFBTjtBQUFpQjtBQUFqQixZQUNFSiw2Q0FERixrQ0FJRUYsOENBSkYsazFEQStCRUMsNENBL0JGO0FBa0NBTSxjQUFjLENBQUNDLE1BQWYsQ0FBc0IscUNBQXRCLEVBQTZETCxLQUE3RCIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9qcy9jb21wb25lbnRzL1RyYW5zY29kZXIvQ29uZmlndXJhdG9yL1N0cmVhbXMvVmlkZW8uanM/OGFjNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1N0cmVhbSwgTUFJTlNUQVJULCBNQUlORU5EfSBmcm9tIFwiLi9TdHJlYW1cIjtcbmltcG9ydCBDQVJEX0NTUyBmcm9tIFwiLi4vQ2FyZENzc1wiO1xuXG5jbGFzcyBWaWRlbyBleHRlbmRzIFN0cmVhbSB7fVxuXG5WaWRlby5wcm90b3R5cGUuaGVhZGVyID0gJ1ZpZGVvJ1xuXG5WaWRlby50ZW1wbGF0ZSA9IC8qaHRtbCovYFxuJHtDQVJEX0NTU31cbjxzdHlsZT5cbjwvc3R5bGU+XG4ke01BSU5TVEFSVH1cbjxzZWN0aW9uIGNsYXNzPVwidG9nZ2xlXCI+XG4gICAgPGRpdiBjbGFzcz1cInt7IChpdGVtLnNob3J0VmlldyAmJiAndmlzaWJsZScpIH19XCIgQGNsaWNrPVwie3sgdGhpcy50b2dnbGVWaWV3KGl0ZW0pIH19XCIgZGF0YS10b2dnbGU9XCJ0cnVlXCI+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwiaWNvbmlmeVwiIGRhdGEtaWNvbj1cIm1kaS1jaGV2cm9uLXJpZ2h0XCI+PC9zcGFuPlxuICAgICAgICBTdHJlYW0gIzA6e3sgaXRlbS5pbmRleCB9fVxuICAgICAgICB7eyBpdGVtLmNvZGVjX25hbWUgfX1cbiAgICAgICAge3sgW2l0ZW0ud2lkdGgsIGl0ZW0uaGVpZ2h0XS5maWx0ZXIoaSA9PiBpKS5qb2luKCd4JykgfX1cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwie3sgKCFpdGVtLnNob3J0VmlldyAmJiAndmlzaWJsZScpIH19XCIgQGNsaWNrPVwie3sgdGhpcy50b2dnbGVWaWV3KGl0ZW0pIH19XCIgZGF0YS10b2dnbGU9XCJ0cnVlXCI+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwiaWNvbmlmeVwiIGRhdGEtaWNvbj1cIm1kaS1jaGV2cm9uLWRvd25cIj48L3NwYW4+XG4gICAgICAgIFN0cmVhbSAjMDp7eyBpdGVtLmluZGV4IH19e3sgKGl0ZW0uaWQ/LndyYXAoJ1snLCAnXScpIHx8ICcnKSB9fTpcbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwie3sgKCFpdGVtLnNob3J0VmlldyAmJiAndmlzaWJsZScpIH19XCI+XG4gICAgICAgIFZpZGVvOiB7eyBpdGVtLmNvZGVjX25hbWUgfX1cbiAgICAgICAge3sgaXRlbS5wcm9maWxlPy53cmFwKCcoJywgJyknKSB8fCAnJyB9fVxuICAgICAgICB7eyBbaXRlbS5jb2RlY190YWdfc3RyaW5nLCBpdGVtLmNvZGVjX3RhZ10uZmlsdGVyKGkgPT4gaSkuam9pbignIC8gJyk/LndyYXAoJygnLCAnKScpIHx8ICcnIH19XG4gICAgICAgIHt7IChpdGVtLnBpeF9mbXQgfHwgJycpIH19e3sgW2l0ZW0uY29sb3JfcmFuZ2UsIGl0ZW0uY29sb3Jfc3BhY2UsIGl0ZW0uZmllbGRfb3JkZXJdLmZpbHRlcihpID0+IGkpLmpvaW4oJywgJyk/LndyYXAoJygnLCAnKScpIH19XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cInt7ICghaXRlbS5zaG9ydFZpZXcgJiYgJ3Zpc2libGUnKSB9fVwiPlxuICAgICAgICB7eyBbaXRlbS53aWR0aCwgaXRlbS5oZWlnaHRdLmZpbHRlcihpID0+IGkpLmpvaW4oJ3gnKSB9fVxuICAgICAgICB7eyBbaXRlbS5zYW1wbGVfYXNwZWN0X3JhdGlvPy53cmFwKCdTQVIgJyksIGl0ZW0uZGlzcGxheV9hc3BlY3RfcmF0aW8/LndyYXAoJ0RBUiAnKV0uZmlsdGVyKGkgPT4gaSkuam9pbignICcpPy53cmFwKCdbJywgJ10nKSB9fVxuICAgICAgICB7eyAoIGl0ZW0uYXZnX2ZyYW1lX3JhdGU/LmluZGV4T2YoJy8nKSA+IC0xICYmIGV2YWwoaXRlbS5hdmdfZnJhbWVfcmF0ZSkgfHwgKGl0ZW0uYXZnX2ZyYW1lX3JhdGUgfHwgJ04vQScpICkgfX0gZnBzLFxuICAgICAgICB7eyAoIGl0ZW0ucl9mcmFtZV9yYXRlPy5pbmRleE9mKCcvJykgPiAtMSAmJiBldmFsKGl0ZW0ucl9mcmFtZV9yYXRlKSB8fCAoaXRlbS5yX2ZyYW1lX3JhdGUgfHwgJ04vQScpICkgfX0gdGJyLFxuICAgICAgICB7eyAoIGl0ZW0udGltZV9iYXNlPy5pbmRleE9mKCcvJykgPiAtMSAmJiBwYXJzZUludChpdGVtLnRpbWVfYmFzZS5zcGxpdCgnLycpLnBvcCgpLCAxMCkgLyAxMDAwICsgJ2snIHx8IChpdGVtLnRpbWVfYmFzZSB8fCAnTi9BJykgKSB9fSB0Ym4sXG4gICAgICAgIHt7ICggaXRlbS5jb2RlY190aW1lX2Jhc2U/LmluZGV4T2YoJy8nKSA+IC0xICYmIGl0ZW0uY29kZWNfdGltZV9iYXNlLnNwbGl0KCcvJykucG9wKCkgfHwgKGl0ZW0uY29kZWNfdGltZV9iYXNlIHx8ICdOL0EnKSApIH19IHRiY1xuICAgIDwvZGl2PlxuPC9zZWN0aW9uPlxuJHtNQUlORU5EfVxuYFxuXG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ3RyYW5zY29kZS1jb25maWd1cmF0b3Itc3RyZWFtLXZpZGVvJywgVmlkZW8pOyJdLCJuYW1lcyI6WyJTdHJlYW0iLCJNQUlOU1RBUlQiLCJNQUlORU5EIiwiQ0FSRF9DU1MiLCJWaWRlbyIsInByb3RvdHlwZSIsImhlYWRlciIsInRlbXBsYXRlIiwiY3VzdG9tRWxlbWVudHMiLCJkZWZpbmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/components/Transcoder/Configurator/Streams/Video.js\n");

/***/ }),

/***/ "./resources/js/slim-directives.js":
/*!*****************************************!*\
  !*** ./resources/js/slim-directives.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_slim_js_dist_directives_all__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/slim-js/dist/directives/all */ "./node_modules/slim-js/dist/directives/all.js");


/***/ }),

/***/ "./node_modules/laravel-echo/dist/echo.js":
/*!************************************************!*\
  !*** ./node_modules/laravel-echo/dist/echo.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nvar Connector = /*#__PURE__*/function () {\n  /**\r\n   * Create a new class instance.\r\n   */\n  function Connector(options) {\n    _classCallCheck(this, Connector);\n\n    /**\r\n     * Default connector options.\r\n     */\n    this._defaultOptions = {\n      auth: {\n        headers: {}\n      },\n      authEndpoint: '/broadcasting/auth',\n      broadcaster: 'pusher',\n      csrfToken: null,\n      host: null,\n      key: null,\n      namespace: 'App.Events'\n    };\n    this.setOptions(options);\n    this.connect();\n  }\n  /**\r\n   * Merge the custom options with the defaults.\r\n   */\n\n\n  _createClass(Connector, [{\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      this.options = _extends(this._defaultOptions, options);\n\n      if (this.csrfToken()) {\n        this.options.auth.headers['X-CSRF-TOKEN'] = this.csrfToken();\n      }\n\n      return options;\n    }\n    /**\r\n     * Extract the CSRF token from the page.\r\n     */\n\n  }, {\n    key: \"csrfToken\",\n    value: function csrfToken() {\n      var selector;\n\n      if (typeof window !== 'undefined' && window['Laravel'] && window['Laravel'].csrfToken) {\n        return window['Laravel'].csrfToken;\n      } else if (this.options.csrfToken) {\n        return this.options.csrfToken;\n      } else if (typeof document !== 'undefined' && typeof document.querySelector === 'function' && (selector = document.querySelector('meta[name=\"csrf-token\"]'))) {\n        return selector.getAttribute('content');\n      }\n\n      return null;\n    }\n  }]);\n\n  return Connector;\n}();\n\n/**\r\n * This class represents a basic channel.\r\n */\nvar Channel = /*#__PURE__*/function () {\n  function Channel() {\n    _classCallCheck(this, Channel);\n  }\n\n  _createClass(Channel, [{\n    key: \"listenForWhisper\",\n\n    /**\r\n     * Listen for a whisper event on the channel instance.\r\n     */\n    value: function listenForWhisper(event, callback) {\n      return this.listen('.client-' + event, callback);\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"notification\",\n    value: function notification(callback) {\n      return this.listen('.Illuminate\\\\Notifications\\\\Events\\\\BroadcastNotificationCreated', callback);\n    }\n    /**\r\n     * Stop listening for a whisper event on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListeningForWhisper\",\n    value: function stopListeningForWhisper(event, callback) {\n      return this.stopListening('.client-' + event, callback);\n    }\n  }]);\n\n  return Channel;\n}();\n\n/**\r\n * Event name formatter\r\n */\nvar EventFormatter = /*#__PURE__*/function () {\n  /**\r\n   * Create a new class instance.\r\n   */\n  function EventFormatter(namespace) {\n    _classCallCheck(this, EventFormatter);\n\n    this.setNamespace(namespace);\n  }\n  /**\r\n   * Format the given event name.\r\n   */\n\n\n  _createClass(EventFormatter, [{\n    key: \"format\",\n    value: function format(event) {\n      if (event.charAt(0) === '.' || event.charAt(0) === '\\\\') {\n        return event.substr(1);\n      } else if (this.namespace) {\n        event = this.namespace + '.' + event;\n      }\n\n      return event.replace(/\\./g, '\\\\');\n    }\n    /**\r\n     * Set the event namespace.\r\n     */\n\n  }, {\n    key: \"setNamespace\",\n    value: function setNamespace(value) {\n      this.namespace = value;\n    }\n  }]);\n\n  return EventFormatter;\n}();\n\n/**\r\n * This class represents a Pusher channel.\r\n */\n\nvar PusherChannel = /*#__PURE__*/function (_Channel) {\n  _inherits(PusherChannel, _Channel);\n\n  var _super = _createSuper(PusherChannel);\n\n  /**\r\n   * Create a new class instance.\r\n   */\n  function PusherChannel(pusher, name, options) {\n    var _this;\n\n    _classCallCheck(this, PusherChannel);\n\n    _this = _super.call(this);\n    _this.name = name;\n    _this.pusher = pusher;\n    _this.options = options;\n    _this.eventFormatter = new EventFormatter(_this.options.namespace);\n\n    _this.subscribe();\n\n    return _this;\n  }\n  /**\r\n   * Subscribe to a Pusher channel.\r\n   */\n\n\n  _createClass(PusherChannel, [{\n    key: \"subscribe\",\n    value: function subscribe() {\n      this.subscription = this.pusher.subscribe(this.name);\n    }\n    /**\r\n     * Unsubscribe from a Pusher channel.\r\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.pusher.unsubscribe(this.name);\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(event, callback) {\n      this.on(this.eventFormatter.format(event), callback);\n      return this;\n    }\n    /**\r\n     * Listen for all events on the channel instance.\r\n     */\n\n  }, {\n    key: \"listenToAll\",\n    value: function listenToAll(callback) {\n      var _this2 = this;\n\n      this.subscription.bind_global(function (event, data) {\n        if (event.startsWith('pusher:')) {\n          return;\n        }\n\n        var namespace = _this2.options.namespace.replace(/\\./g, '\\\\');\n\n        var formattedEvent = event.startsWith(namespace) ? event.substring(namespace.length + 1) : '.' + event;\n        callback(formattedEvent, data);\n      });\n      return this;\n    }\n    /**\r\n     * Stop listening for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListening\",\n    value: function stopListening(event, callback) {\n      if (callback) {\n        this.subscription.unbind(this.eventFormatter.format(event), callback);\n      } else {\n        this.subscription.unbind(this.eventFormatter.format(event));\n      }\n\n      return this;\n    }\n    /**\r\n     * Stop listening for all events on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListeningToAll\",\n    value: function stopListeningToAll(callback) {\n      if (callback) {\n        this.subscription.unbind_global(callback);\n      } else {\n        this.subscription.unbind_global();\n      }\n\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription succeeds.\r\n     */\n\n  }, {\n    key: \"subscribed\",\n    value: function subscribed(callback) {\n      this.on('pusher:subscription_succeeded', function () {\n        callback();\n      });\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription error occurs.\r\n     */\n\n  }, {\n    key: \"error\",\n    value: function error(callback) {\n      this.on('pusher:subscription_error', function (status) {\n        callback(status);\n      });\n      return this;\n    }\n    /**\r\n     * Bind a channel to an event.\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      this.subscription.bind(event, callback);\n      return this;\n    }\n  }]);\n\n  return PusherChannel;\n}(Channel);\n\n/**\r\n * This class represents a Pusher private channel.\r\n */\n\nvar PusherPrivateChannel = /*#__PURE__*/function (_PusherChannel) {\n  _inherits(PusherPrivateChannel, _PusherChannel);\n\n  var _super = _createSuper(PusherPrivateChannel);\n\n  function PusherPrivateChannel() {\n    _classCallCheck(this, PusherPrivateChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PusherPrivateChannel, [{\n    key: \"whisper\",\n\n    /**\r\n     * Trigger client event on the channel.\r\n     */\n    value: function whisper(eventName, data) {\n      this.pusher.channels.channels[this.name].trigger(\"client-\".concat(eventName), data);\n      return this;\n    }\n  }]);\n\n  return PusherPrivateChannel;\n}(PusherChannel);\n\n/**\r\n * This class represents a Pusher private channel.\r\n */\n\nvar PusherEncryptedPrivateChannel = /*#__PURE__*/function (_PusherChannel) {\n  _inherits(PusherEncryptedPrivateChannel, _PusherChannel);\n\n  var _super = _createSuper(PusherEncryptedPrivateChannel);\n\n  function PusherEncryptedPrivateChannel() {\n    _classCallCheck(this, PusherEncryptedPrivateChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PusherEncryptedPrivateChannel, [{\n    key: \"whisper\",\n\n    /**\r\n     * Trigger client event on the channel.\r\n     */\n    value: function whisper(eventName, data) {\n      this.pusher.channels.channels[this.name].trigger(\"client-\".concat(eventName), data);\n      return this;\n    }\n  }]);\n\n  return PusherEncryptedPrivateChannel;\n}(PusherChannel);\n\n/**\r\n * This class represents a Pusher presence channel.\r\n */\n\nvar PusherPresenceChannel = /*#__PURE__*/function (_PusherChannel) {\n  _inherits(PusherPresenceChannel, _PusherChannel);\n\n  var _super = _createSuper(PusherPresenceChannel);\n\n  function PusherPresenceChannel() {\n    _classCallCheck(this, PusherPresenceChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PusherPresenceChannel, [{\n    key: \"here\",\n\n    /**\r\n     * Register a callback to be called anytime the member list changes.\r\n     */\n    value: function here(callback) {\n      this.on('pusher:subscription_succeeded', function (data) {\n        callback(Object.keys(data.members).map(function (k) {\n          return data.members[k];\n        }));\n      });\n      return this;\n    }\n    /**\r\n     * Listen for someone joining the channel.\r\n     */\n\n  }, {\n    key: \"joining\",\n    value: function joining(callback) {\n      this.on('pusher:member_added', function (member) {\n        callback(member.info);\n      });\n      return this;\n    }\n    /**\r\n     * Listen for someone leaving the channel.\r\n     */\n\n  }, {\n    key: \"leaving\",\n    value: function leaving(callback) {\n      this.on('pusher:member_removed', function (member) {\n        callback(member.info);\n      });\n      return this;\n    }\n    /**\r\n     * Trigger client event on the channel.\r\n     */\n\n  }, {\n    key: \"whisper\",\n    value: function whisper(eventName, data) {\n      this.pusher.channels.channels[this.name].trigger(\"client-\".concat(eventName), data);\n      return this;\n    }\n  }]);\n\n  return PusherPresenceChannel;\n}(PusherChannel);\n\n/**\r\n * This class represents a Socket.io channel.\r\n */\n\nvar SocketIoChannel = /*#__PURE__*/function (_Channel) {\n  _inherits(SocketIoChannel, _Channel);\n\n  var _super = _createSuper(SocketIoChannel);\n\n  /**\r\n   * Create a new class instance.\r\n   */\n  function SocketIoChannel(socket, name, options) {\n    var _this;\n\n    _classCallCheck(this, SocketIoChannel);\n\n    _this = _super.call(this);\n    /**\r\n     * The event callbacks applied to the socket.\r\n     */\n\n    _this.events = {};\n    /**\r\n     * User supplied callbacks for events on this channel.\r\n     */\n\n    _this.listeners = {};\n    _this.name = name;\n    _this.socket = socket;\n    _this.options = options;\n    _this.eventFormatter = new EventFormatter(_this.options.namespace);\n\n    _this.subscribe();\n\n    return _this;\n  }\n  /**\r\n   * Subscribe to a Socket.io channel.\r\n   */\n\n\n  _createClass(SocketIoChannel, [{\n    key: \"subscribe\",\n    value: function subscribe() {\n      this.socket.emit('subscribe', {\n        channel: this.name,\n        auth: this.options.auth || {}\n      });\n    }\n    /**\r\n     * Unsubscribe from channel and ubind event callbacks.\r\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.unbind();\n      this.socket.emit('unsubscribe', {\n        channel: this.name,\n        auth: this.options.auth || {}\n      });\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(event, callback) {\n      this.on(this.eventFormatter.format(event), callback);\n      return this;\n    }\n    /**\r\n     * Stop listening for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListening\",\n    value: function stopListening(event, callback) {\n      this.unbindEvent(this.eventFormatter.format(event), callback);\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription succeeds.\r\n     */\n\n  }, {\n    key: \"subscribed\",\n    value: function subscribed(callback) {\n      this.on('connect', function (socket) {\n        callback(socket);\n      });\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime an error occurs.\r\n     */\n\n  }, {\n    key: \"error\",\n    value: function error(callback) {\n      return this;\n    }\n    /**\r\n     * Bind the channel's socket to an event and store the callback.\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      var _this2 = this;\n\n      this.listeners[event] = this.listeners[event] || [];\n\n      if (!this.events[event]) {\n        this.events[event] = function (channel, data) {\n          if (_this2.name === channel && _this2.listeners[event]) {\n            _this2.listeners[event].forEach(function (cb) {\n              return cb(data);\n            });\n          }\n        };\n\n        this.socket.on(event, this.events[event]);\n      }\n\n      this.listeners[event].push(callback);\n      return this;\n    }\n    /**\r\n     * Unbind the channel's socket from all stored event callbacks.\r\n     */\n\n  }, {\n    key: \"unbind\",\n    value: function unbind() {\n      var _this3 = this;\n\n      Object.keys(this.events).forEach(function (event) {\n        _this3.unbindEvent(event);\n      });\n    }\n    /**\r\n     * Unbind the listeners for the given event.\r\n     */\n\n  }, {\n    key: \"unbindEvent\",\n    value: function unbindEvent(event, callback) {\n      this.listeners[event] = this.listeners[event] || [];\n\n      if (callback) {\n        this.listeners[event] = this.listeners[event].filter(function (cb) {\n          return cb !== callback;\n        });\n      }\n\n      if (!callback || this.listeners[event].length === 0) {\n        if (this.events[event]) {\n          this.socket.removeListener(event, this.events[event]);\n          delete this.events[event];\n        }\n\n        delete this.listeners[event];\n      }\n    }\n  }]);\n\n  return SocketIoChannel;\n}(Channel);\n\n/**\r\n * This class represents a Socket.io private channel.\r\n */\n\nvar SocketIoPrivateChannel = /*#__PURE__*/function (_SocketIoChannel) {\n  _inherits(SocketIoPrivateChannel, _SocketIoChannel);\n\n  var _super = _createSuper(SocketIoPrivateChannel);\n\n  function SocketIoPrivateChannel() {\n    _classCallCheck(this, SocketIoPrivateChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SocketIoPrivateChannel, [{\n    key: \"whisper\",\n\n    /**\r\n     * Trigger client event on the channel.\r\n     */\n    value: function whisper(eventName, data) {\n      this.socket.emit('client event', {\n        channel: this.name,\n        event: \"client-\".concat(eventName),\n        data: data\n      });\n      return this;\n    }\n  }]);\n\n  return SocketIoPrivateChannel;\n}(SocketIoChannel);\n\n/**\r\n * This class represents a Socket.io presence channel.\r\n */\n\nvar SocketIoPresenceChannel = /*#__PURE__*/function (_SocketIoPrivateChann) {\n  _inherits(SocketIoPresenceChannel, _SocketIoPrivateChann);\n\n  var _super = _createSuper(SocketIoPresenceChannel);\n\n  function SocketIoPresenceChannel() {\n    _classCallCheck(this, SocketIoPresenceChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SocketIoPresenceChannel, [{\n    key: \"here\",\n\n    /**\r\n     * Register a callback to be called anytime the member list changes.\r\n     */\n    value: function here(callback) {\n      this.on('presence:subscribed', function (members) {\n        callback(members.map(function (m) {\n          return m.user_info;\n        }));\n      });\n      return this;\n    }\n    /**\r\n     * Listen for someone joining the channel.\r\n     */\n\n  }, {\n    key: \"joining\",\n    value: function joining(callback) {\n      this.on('presence:joining', function (member) {\n        return callback(member.user_info);\n      });\n      return this;\n    }\n    /**\r\n     * Listen for someone leaving the channel.\r\n     */\n\n  }, {\n    key: \"leaving\",\n    value: function leaving(callback) {\n      this.on('presence:leaving', function (member) {\n        return callback(member.user_info);\n      });\n      return this;\n    }\n  }]);\n\n  return SocketIoPresenceChannel;\n}(SocketIoPrivateChannel);\n\n/**\r\n * This class represents a null channel.\r\n */\n\nvar NullChannel = /*#__PURE__*/function (_Channel) {\n  _inherits(NullChannel, _Channel);\n\n  var _super = _createSuper(NullChannel);\n\n  function NullChannel() {\n    _classCallCheck(this, NullChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NullChannel, [{\n    key: \"subscribe\",\n\n    /**\r\n     * Subscribe to a channel.\r\n     */\n    value: function subscribe() {} //\n\n    /**\r\n     * Unsubscribe from a channel.\r\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {} //\n\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(event, callback) {\n      return this;\n    }\n    /**\r\n     * Stop listening for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListening\",\n    value: function stopListening(event, callback) {\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription succeeds.\r\n     */\n\n  }, {\n    key: \"subscribed\",\n    value: function subscribed(callback) {\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime an error occurs.\r\n     */\n\n  }, {\n    key: \"error\",\n    value: function error(callback) {\n      return this;\n    }\n    /**\r\n     * Bind a channel to an event.\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      return this;\n    }\n  }]);\n\n  return NullChannel;\n}(Channel);\n\n/**\r\n * This class represents a null private channel.\r\n */\n\nvar NullPrivateChannel = /*#__PURE__*/function (_NullChannel) {\n  _inherits(NullPrivateChannel, _NullChannel);\n\n  var _super = _createSuper(NullPrivateChannel);\n\n  function NullPrivateChannel() {\n    _classCallCheck(this, NullPrivateChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NullPrivateChannel, [{\n    key: \"whisper\",\n\n    /**\r\n     * Trigger client event on the channel.\r\n     */\n    value: function whisper(eventName, data) {\n      return this;\n    }\n  }]);\n\n  return NullPrivateChannel;\n}(NullChannel);\n\n/**\r\n * This class represents a null presence channel.\r\n */\n\nvar NullPresenceChannel = /*#__PURE__*/function (_NullChannel) {\n  _inherits(NullPresenceChannel, _NullChannel);\n\n  var _super = _createSuper(NullPresenceChannel);\n\n  function NullPresenceChannel() {\n    _classCallCheck(this, NullPresenceChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NullPresenceChannel, [{\n    key: \"here\",\n\n    /**\r\n     * Register a callback to be called anytime the member list changes.\r\n     */\n    value: function here(callback) {\n      return this;\n    }\n    /**\r\n     * Listen for someone joining the channel.\r\n     */\n\n  }, {\n    key: \"joining\",\n    value: function joining(callback) {\n      return this;\n    }\n    /**\r\n     * Listen for someone leaving the channel.\r\n     */\n\n  }, {\n    key: \"leaving\",\n    value: function leaving(callback) {\n      return this;\n    }\n    /**\r\n     * Trigger client event on the channel.\r\n     */\n\n  }, {\n    key: \"whisper\",\n    value: function whisper(eventName, data) {\n      return this;\n    }\n  }]);\n\n  return NullPresenceChannel;\n}(NullChannel);\n\n/**\r\n * This class creates a connector to Pusher.\r\n */\n\nvar PusherConnector = /*#__PURE__*/function (_Connector) {\n  _inherits(PusherConnector, _Connector);\n\n  var _super = _createSuper(PusherConnector);\n\n  function PusherConnector() {\n    var _this;\n\n    _classCallCheck(this, PusherConnector);\n\n    _this = _super.apply(this, arguments);\n    /**\r\n     * All of the subscribed channel names.\r\n     */\n\n    _this.channels = {};\n    return _this;\n  }\n  /**\r\n   * Create a fresh Pusher connection.\r\n   */\n\n\n  _createClass(PusherConnector, [{\n    key: \"connect\",\n    value: function connect() {\n      if (typeof this.options.client !== 'undefined') {\n        this.pusher = this.options.client;\n      } else {\n        this.pusher = new Pusher(this.options.key, this.options);\n      }\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(name, event, callback) {\n      return this.channel(name).listen(event, callback);\n    }\n    /**\r\n     * Get a channel instance by name.\r\n     */\n\n  }, {\n    key: \"channel\",\n    value: function channel(name) {\n      if (!this.channels[name]) {\n        this.channels[name] = new PusherChannel(this.pusher, name, this.options);\n      }\n\n      return this.channels[name];\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n\n  }, {\n    key: \"privateChannel\",\n    value: function privateChannel(name) {\n      if (!this.channels['private-' + name]) {\n        this.channels['private-' + name] = new PusherPrivateChannel(this.pusher, 'private-' + name, this.options);\n      }\n\n      return this.channels['private-' + name];\n    }\n    /**\r\n     * Get a private encrypted channel instance by name.\r\n     */\n\n  }, {\n    key: \"encryptedPrivateChannel\",\n    value: function encryptedPrivateChannel(name) {\n      if (!this.channels['private-encrypted-' + name]) {\n        this.channels['private-encrypted-' + name] = new PusherEncryptedPrivateChannel(this.pusher, 'private-encrypted-' + name, this.options);\n      }\n\n      return this.channels['private-encrypted-' + name];\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n\n  }, {\n    key: \"presenceChannel\",\n    value: function presenceChannel(name) {\n      if (!this.channels['presence-' + name]) {\n        this.channels['presence-' + name] = new PusherPresenceChannel(this.pusher, 'presence-' + name, this.options);\n      }\n\n      return this.channels['presence-' + name];\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n\n  }, {\n    key: \"leave\",\n    value: function leave(name) {\n      var _this2 = this;\n\n      var channels = [name, 'private-' + name, 'presence-' + name];\n      channels.forEach(function (name, index) {\n        _this2.leaveChannel(name);\n      });\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(name) {\n      if (this.channels[name]) {\n        this.channels[name].unsubscribe();\n        delete this.channels[name];\n      }\n    }\n    /**\r\n     * Get the socket ID for the connection.\r\n     */\n\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return this.pusher.connection.socket_id;\n    }\n    /**\r\n     * Disconnect Pusher connection.\r\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.pusher.disconnect();\n    }\n  }]);\n\n  return PusherConnector;\n}(Connector);\n\n/**\r\n * This class creates a connnector to a Socket.io server.\r\n */\n\nvar SocketIoConnector = /*#__PURE__*/function (_Connector) {\n  _inherits(SocketIoConnector, _Connector);\n\n  var _super = _createSuper(SocketIoConnector);\n\n  function SocketIoConnector() {\n    var _this;\n\n    _classCallCheck(this, SocketIoConnector);\n\n    _this = _super.apply(this, arguments);\n    /**\r\n     * All of the subscribed channel names.\r\n     */\n\n    _this.channels = {};\n    return _this;\n  }\n  /**\r\n   * Create a fresh Socket.io connection.\r\n   */\n\n\n  _createClass(SocketIoConnector, [{\n    key: \"connect\",\n    value: function connect() {\n      var _this2 = this;\n\n      var io = this.getSocketIO();\n      this.socket = io(this.options.host, this.options);\n      this.socket.on('reconnect', function () {\n        Object.values(_this2.channels).forEach(function (channel) {\n          channel.subscribe();\n        });\n      });\n      return this.socket;\n    }\n    /**\r\n     * Get socket.io module from global scope or options.\r\n     */\n\n  }, {\n    key: \"getSocketIO\",\n    value: function getSocketIO() {\n      if (typeof this.options.client !== 'undefined') {\n        return this.options.client;\n      }\n\n      if (typeof io !== 'undefined') {\n        return io;\n      }\n\n      throw new Error('Socket.io client not found. Should be globally available or passed via options.client');\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(name, event, callback) {\n      return this.channel(name).listen(event, callback);\n    }\n    /**\r\n     * Get a channel instance by name.\r\n     */\n\n  }, {\n    key: \"channel\",\n    value: function channel(name) {\n      if (!this.channels[name]) {\n        this.channels[name] = new SocketIoChannel(this.socket, name, this.options);\n      }\n\n      return this.channels[name];\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n\n  }, {\n    key: \"privateChannel\",\n    value: function privateChannel(name) {\n      if (!this.channels['private-' + name]) {\n        this.channels['private-' + name] = new SocketIoPrivateChannel(this.socket, 'private-' + name, this.options);\n      }\n\n      return this.channels['private-' + name];\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n\n  }, {\n    key: \"presenceChannel\",\n    value: function presenceChannel(name) {\n      if (!this.channels['presence-' + name]) {\n        this.channels['presence-' + name] = new SocketIoPresenceChannel(this.socket, 'presence-' + name, this.options);\n      }\n\n      return this.channels['presence-' + name];\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n\n  }, {\n    key: \"leave\",\n    value: function leave(name) {\n      var _this3 = this;\n\n      var channels = [name, 'private-' + name, 'presence-' + name];\n      channels.forEach(function (name) {\n        _this3.leaveChannel(name);\n      });\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(name) {\n      if (this.channels[name]) {\n        this.channels[name].unsubscribe();\n        delete this.channels[name];\n      }\n    }\n    /**\r\n     * Get the socket ID for the connection.\r\n     */\n\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return this.socket.id;\n    }\n    /**\r\n     * Disconnect Socketio connection.\r\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.socket.disconnect();\n    }\n  }]);\n\n  return SocketIoConnector;\n}(Connector);\n\n/**\r\n * This class creates a null connector.\r\n */\n\nvar NullConnector = /*#__PURE__*/function (_Connector) {\n  _inherits(NullConnector, _Connector);\n\n  var _super = _createSuper(NullConnector);\n\n  function NullConnector() {\n    var _this;\n\n    _classCallCheck(this, NullConnector);\n\n    _this = _super.apply(this, arguments);\n    /**\r\n     * All of the subscribed channel names.\r\n     */\n\n    _this.channels = {};\n    return _this;\n  }\n  /**\r\n   * Create a fresh connection.\r\n   */\n\n\n  _createClass(NullConnector, [{\n    key: \"connect\",\n    value: function connect() {} //\n\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(name, event, callback) {\n      return new NullChannel();\n    }\n    /**\r\n     * Get a channel instance by name.\r\n     */\n\n  }, {\n    key: \"channel\",\n    value: function channel(name) {\n      return new NullChannel();\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n\n  }, {\n    key: \"privateChannel\",\n    value: function privateChannel(name) {\n      return new NullPrivateChannel();\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n\n  }, {\n    key: \"presenceChannel\",\n    value: function presenceChannel(name) {\n      return new NullPresenceChannel();\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n\n  }, {\n    key: \"leave\",\n    value: function leave(name) {} //\n\n    /**\r\n     * Leave the given channel.\r\n     */\n\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(name) {} //\n\n    /**\r\n     * Get the socket ID for the connection.\r\n     */\n\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return 'fake-socket-id';\n    }\n    /**\r\n     * Disconnect the connection.\r\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {//\n    }\n  }]);\n\n  return NullConnector;\n}(Connector);\n\n/**\r\n * This class is the primary API for interacting with broadcasting.\r\n */\n\nvar Echo = /*#__PURE__*/function () {\n  /**\r\n   * Create a new class instance.\r\n   */\n  function Echo(options) {\n    _classCallCheck(this, Echo);\n\n    this.options = options;\n    this.connect();\n\n    if (!this.options.withoutInterceptors) {\n      this.registerInterceptors();\n    }\n  }\n  /**\r\n   * Get a channel instance by name.\r\n   */\n\n\n  _createClass(Echo, [{\n    key: \"channel\",\n    value: function channel(_channel) {\n      return this.connector.channel(_channel);\n    }\n    /**\r\n     * Create a new connection.\r\n     */\n\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      if (this.options.broadcaster == 'pusher') {\n        this.connector = new PusherConnector(this.options);\n      } else if (this.options.broadcaster == 'socket.io') {\n        this.connector = new SocketIoConnector(this.options);\n      } else if (this.options.broadcaster == 'null') {\n        this.connector = new NullConnector(this.options);\n      } else if (typeof this.options.broadcaster == 'function') {\n        this.connector = new this.options.broadcaster(this.options);\n      }\n    }\n    /**\r\n     * Disconnect from the Echo server.\r\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.connector.disconnect();\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n\n  }, {\n    key: \"join\",\n    value: function join(channel) {\n      return this.connector.presenceChannel(channel);\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n\n  }, {\n    key: \"leave\",\n    value: function leave(channel) {\n      this.connector.leave(channel);\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(channel) {\n      this.connector.leaveChannel(channel);\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(channel, event, callback) {\n      return this.connector.listen(channel, event, callback);\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n\n  }, {\n    key: \"private\",\n    value: function _private(channel) {\n      return this.connector.privateChannel(channel);\n    }\n    /**\r\n     * Get a private encrypted channel instance by name.\r\n     */\n\n  }, {\n    key: \"encryptedPrivate\",\n    value: function encryptedPrivate(channel) {\n      return this.connector.encryptedPrivateChannel(channel);\n    }\n    /**\r\n     * Get the Socket ID for the connection.\r\n     */\n\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return this.connector.socketId();\n    }\n    /**\r\n     * Register 3rd party request interceptiors. These are used to automatically\r\n     * send a connections socket id to a Laravel app with a X-Socket-Id header.\r\n     */\n\n  }, {\n    key: \"registerInterceptors\",\n    value: function registerInterceptors() {\n      if (typeof Vue === 'function' && Vue.http) {\n        this.registerVueRequestInterceptor();\n      }\n\n      if (typeof axios === 'function') {\n        this.registerAxiosRequestInterceptor();\n      }\n\n      if (typeof jQuery === 'function') {\n        this.registerjQueryAjaxSetup();\n      }\n    }\n    /**\r\n     * Register a Vue HTTP interceptor to add the X-Socket-ID header.\r\n     */\n\n  }, {\n    key: \"registerVueRequestInterceptor\",\n    value: function registerVueRequestInterceptor() {\n      var _this = this;\n\n      Vue.http.interceptors.push(function (request, next) {\n        if (_this.socketId()) {\n          request.headers.set('X-Socket-ID', _this.socketId());\n        }\n\n        next();\n      });\n    }\n    /**\r\n     * Register an Axios HTTP interceptor to add the X-Socket-ID header.\r\n     */\n\n  }, {\n    key: \"registerAxiosRequestInterceptor\",\n    value: function registerAxiosRequestInterceptor() {\n      var _this2 = this;\n\n      axios.interceptors.request.use(function (config) {\n        if (_this2.socketId()) {\n          config.headers['X-Socket-Id'] = _this2.socketId();\n        }\n\n        return config;\n      });\n    }\n    /**\r\n     * Register jQuery AjaxPrefilter to add the X-Socket-ID header.\r\n     */\n\n  }, {\n    key: \"registerjQueryAjaxSetup\",\n    value: function registerjQueryAjaxSetup() {\n      var _this3 = this;\n\n      if (typeof jQuery.ajax != 'undefined') {\n        jQuery.ajaxPrefilter(function (options, originalOptions, xhr) {\n          if (_this3.socketId()) {\n            xhr.setRequestHeader('X-Socket-Id', _this3.socketId());\n          }\n        });\n      }\n    }\n  }]);\n\n  return Echo;\n}();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Echo);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/laravel-echo/dist/echo.js\n");

/***/ }),

/***/ "./resources/css/app.css":
/*!*******************************!*\
  !*** ./resources/css/app.css ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvY3NzL2FwcC5jc3MuanMiLCJtYXBwaW5ncyI6IjtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2Nzcy9hcHAuY3NzPzQxY2QiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/css/app.css\n");

/***/ }),

/***/ "./node_modules/pusher-js/dist/web/pusher.js":
/*!***************************************************!*\
  !*** ./node_modules/pusher-js/dist/web/pusher.js ***!
  \***************************************************/
/***/ ((module) => {

eval("/*!\n * Pusher JavaScript Library v7.0.3\n * https://pusher.com/\n *\n * Copyright 2020, Pusher\n * Released under the MIT licence.\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})(window, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_669__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_669__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__nested_webpack_require_669__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__nested_webpack_require_669__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__nested_webpack_require_669__.d = function(exports, name, getter) {\n/******/ \t\tif(!__nested_webpack_require_669__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__nested_webpack_require_669__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__nested_webpack_require_669__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __nested_webpack_require_669__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__nested_webpack_require_669__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __nested_webpack_require_669__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__nested_webpack_require_669__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__nested_webpack_require_669__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__nested_webpack_require_669__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__nested_webpack_require_669__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __nested_webpack_require_669__(__nested_webpack_require_669__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package base64 implements Base64 encoding and decoding.\n */\n// Invalid character used in decoding to indicate\n// that the character to decode is out of range of\n// alphabet and cannot be decoded.\nvar INVALID_BYTE = 256;\n/**\n * Implements standard Base64 encoding.\n *\n * Operates in constant time.\n */\nvar Coder = /** @class */ (function () {\n    // TODO(dchest): methods to encode chunk-by-chunk.\n    function Coder(_paddingCharacter) {\n        if (_paddingCharacter === void 0) { _paddingCharacter = \"=\"; }\n        this._paddingCharacter = _paddingCharacter;\n    }\n    Coder.prototype.encodedLength = function (length) {\n        if (!this._paddingCharacter) {\n            return (length * 8 + 5) / 6 | 0;\n        }\n        return (length + 2) / 3 * 4 | 0;\n    };\n    Coder.prototype.encode = function (data) {\n        var out = \"\";\n        var i = 0;\n        for (; i < data.length - 2; i += 3) {\n            var c = (data[i] << 16) | (data[i + 1] << 8) | (data[i + 2]);\n            out += this._encodeByte((c >>> 3 * 6) & 63);\n            out += this._encodeByte((c >>> 2 * 6) & 63);\n            out += this._encodeByte((c >>> 1 * 6) & 63);\n            out += this._encodeByte((c >>> 0 * 6) & 63);\n        }\n        var left = data.length - i;\n        if (left > 0) {\n            var c = (data[i] << 16) | (left === 2 ? data[i + 1] << 8 : 0);\n            out += this._encodeByte((c >>> 3 * 6) & 63);\n            out += this._encodeByte((c >>> 2 * 6) & 63);\n            if (left === 2) {\n                out += this._encodeByte((c >>> 1 * 6) & 63);\n            }\n            else {\n                out += this._paddingCharacter || \"\";\n            }\n            out += this._paddingCharacter || \"\";\n        }\n        return out;\n    };\n    Coder.prototype.maxDecodedLength = function (length) {\n        if (!this._paddingCharacter) {\n            return (length * 6 + 7) / 8 | 0;\n        }\n        return length / 4 * 3 | 0;\n    };\n    Coder.prototype.decodedLength = function (s) {\n        return this.maxDecodedLength(s.length - this._getPaddingLength(s));\n    };\n    Coder.prototype.decode = function (s) {\n        if (s.length === 0) {\n            return new Uint8Array(0);\n        }\n        var paddingLength = this._getPaddingLength(s);\n        var length = s.length - paddingLength;\n        var out = new Uint8Array(this.maxDecodedLength(length));\n        var op = 0;\n        var i = 0;\n        var haveBad = 0;\n        var v0 = 0, v1 = 0, v2 = 0, v3 = 0;\n        for (; i < length - 4; i += 4) {\n            v0 = this._decodeChar(s.charCodeAt(i + 0));\n            v1 = this._decodeChar(s.charCodeAt(i + 1));\n            v2 = this._decodeChar(s.charCodeAt(i + 2));\n            v3 = this._decodeChar(s.charCodeAt(i + 3));\n            out[op++] = (v0 << 2) | (v1 >>> 4);\n            out[op++] = (v1 << 4) | (v2 >>> 2);\n            out[op++] = (v2 << 6) | v3;\n            haveBad |= v0 & INVALID_BYTE;\n            haveBad |= v1 & INVALID_BYTE;\n            haveBad |= v2 & INVALID_BYTE;\n            haveBad |= v3 & INVALID_BYTE;\n        }\n        if (i < length - 1) {\n            v0 = this._decodeChar(s.charCodeAt(i));\n            v1 = this._decodeChar(s.charCodeAt(i + 1));\n            out[op++] = (v0 << 2) | (v1 >>> 4);\n            haveBad |= v0 & INVALID_BYTE;\n            haveBad |= v1 & INVALID_BYTE;\n        }\n        if (i < length - 2) {\n            v2 = this._decodeChar(s.charCodeAt(i + 2));\n            out[op++] = (v1 << 4) | (v2 >>> 2);\n            haveBad |= v2 & INVALID_BYTE;\n        }\n        if (i < length - 3) {\n            v3 = this._decodeChar(s.charCodeAt(i + 3));\n            out[op++] = (v2 << 6) | v3;\n            haveBad |= v3 & INVALID_BYTE;\n        }\n        if (haveBad !== 0) {\n            throw new Error(\"Base64Coder: incorrect characters for decoding\");\n        }\n        return out;\n    };\n    // Standard encoding have the following encoded/decoded ranges,\n    // which we need to convert between.\n    //\n    // ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz 0123456789  +   /\n    // Index:   0 - 25                    26 - 51              52 - 61   62  63\n    // ASCII:  65 - 90                    97 - 122             48 - 57   43  47\n    //\n    // Encode 6 bits in b into a new character.\n    Coder.prototype._encodeByte = function (b) {\n        // Encoding uses constant time operations as follows:\n        //\n        // 1. Define comparison of A with B using (A - B) >>> 8:\n        //          if A > B, then result is positive integer\n        //          if A <= B, then result is 0\n        //\n        // 2. Define selection of C or 0 using bitwise AND: X & C:\n        //          if X == 0, then result is 0\n        //          if X != 0, then result is C\n        //\n        // 3. Start with the smallest comparison (b >= 0), which is always\n        //    true, so set the result to the starting ASCII value (65).\n        //\n        // 4. Continue comparing b to higher ASCII values, and selecting\n        //    zero if comparison isn't true, otherwise selecting a value\n        //    to add to result, which:\n        //\n        //          a) undoes the previous addition\n        //          b) provides new value to add\n        //\n        var result = b;\n        // b >= 0\n        result += 65;\n        // b > 25\n        result += ((25 - b) >>> 8) & ((0 - 65) - 26 + 97);\n        // b > 51\n        result += ((51 - b) >>> 8) & ((26 - 97) - 52 + 48);\n        // b > 61\n        result += ((61 - b) >>> 8) & ((52 - 48) - 62 + 43);\n        // b > 62\n        result += ((62 - b) >>> 8) & ((62 - 43) - 63 + 47);\n        return String.fromCharCode(result);\n    };\n    // Decode a character code into a byte.\n    // Must return 256 if character is out of alphabet range.\n    Coder.prototype._decodeChar = function (c) {\n        // Decoding works similar to encoding: using the same comparison\n        // function, but now it works on ranges: result is always incremented\n        // by value, but this value becomes zero if the range is not\n        // satisfied.\n        //\n        // Decoding starts with invalid value, 256, which is then\n        // subtracted when the range is satisfied. If none of the ranges\n        // apply, the function returns 256, which is then checked by\n        // the caller to throw error.\n        var result = INVALID_BYTE; // start with invalid character\n        // c == 43 (c > 42 and c < 44)\n        result += (((42 - c) & (c - 44)) >>> 8) & (-INVALID_BYTE + c - 43 + 62);\n        // c == 47 (c > 46 and c < 48)\n        result += (((46 - c) & (c - 48)) >>> 8) & (-INVALID_BYTE + c - 47 + 63);\n        // c > 47 and c < 58\n        result += (((47 - c) & (c - 58)) >>> 8) & (-INVALID_BYTE + c - 48 + 52);\n        // c > 64 and c < 91\n        result += (((64 - c) & (c - 91)) >>> 8) & (-INVALID_BYTE + c - 65 + 0);\n        // c > 96 and c < 123\n        result += (((96 - c) & (c - 123)) >>> 8) & (-INVALID_BYTE + c - 97 + 26);\n        return result;\n    };\n    Coder.prototype._getPaddingLength = function (s) {\n        var paddingLength = 0;\n        if (this._paddingCharacter) {\n            for (var i = s.length - 1; i >= 0; i--) {\n                if (s[i] !== this._paddingCharacter) {\n                    break;\n                }\n                paddingLength++;\n            }\n            if (s.length < 4 || paddingLength > 2) {\n                throw new Error(\"Base64Coder: incorrect padding\");\n            }\n        }\n        return paddingLength;\n    };\n    return Coder;\n}());\nexports.Coder = Coder;\nvar stdCoder = new Coder();\nfunction encode(data) {\n    return stdCoder.encode(data);\n}\nexports.encode = encode;\nfunction decode(s) {\n    return stdCoder.decode(s);\n}\nexports.decode = decode;\n/**\n * Implements URL-safe Base64 encoding.\n * (Same as Base64, but '+' is replaced with '-', and '/' with '_').\n *\n * Operates in constant time.\n */\nvar URLSafeCoder = /** @class */ (function (_super) {\n    __extends(URLSafeCoder, _super);\n    function URLSafeCoder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // URL-safe encoding have the following encoded/decoded ranges:\n    //\n    // ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz 0123456789  -   _\n    // Index:   0 - 25                    26 - 51              52 - 61   62  63\n    // ASCII:  65 - 90                    97 - 122             48 - 57   45  95\n    //\n    URLSafeCoder.prototype._encodeByte = function (b) {\n        var result = b;\n        // b >= 0\n        result += 65;\n        // b > 25\n        result += ((25 - b) >>> 8) & ((0 - 65) - 26 + 97);\n        // b > 51\n        result += ((51 - b) >>> 8) & ((26 - 97) - 52 + 48);\n        // b > 61\n        result += ((61 - b) >>> 8) & ((52 - 48) - 62 + 45);\n        // b > 62\n        result += ((62 - b) >>> 8) & ((62 - 45) - 63 + 95);\n        return String.fromCharCode(result);\n    };\n    URLSafeCoder.prototype._decodeChar = function (c) {\n        var result = INVALID_BYTE;\n        // c == 45 (c > 44 and c < 46)\n        result += (((44 - c) & (c - 46)) >>> 8) & (-INVALID_BYTE + c - 45 + 62);\n        // c == 95 (c > 94 and c < 96)\n        result += (((94 - c) & (c - 96)) >>> 8) & (-INVALID_BYTE + c - 95 + 63);\n        // c > 47 and c < 58\n        result += (((47 - c) & (c - 58)) >>> 8) & (-INVALID_BYTE + c - 48 + 52);\n        // c > 64 and c < 91\n        result += (((64 - c) & (c - 91)) >>> 8) & (-INVALID_BYTE + c - 65 + 0);\n        // c > 96 and c < 123\n        result += (((96 - c) & (c - 123)) >>> 8) & (-INVALID_BYTE + c - 97 + 26);\n        return result;\n    };\n    return URLSafeCoder;\n}(Coder));\nexports.URLSafeCoder = URLSafeCoder;\nvar urlSafeCoder = new URLSafeCoder();\nfunction encodeURLSafe(data) {\n    return urlSafeCoder.encode(data);\n}\nexports.encodeURLSafe = encodeURLSafe;\nfunction decodeURLSafe(s) {\n    return urlSafeCoder.decode(s);\n}\nexports.decodeURLSafe = decodeURLSafe;\nexports.encodedLength = function (length) {\n    return stdCoder.encodedLength(length);\n};\nexports.maxDecodedLength = function (length) {\n    return stdCoder.maxDecodedLength(length);\n};\nexports.decodedLength = function (s) {\n    return stdCoder.decodedLength(s);\n};\n//# sourceMappingURL=base64.js.map\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package utf8 implements UTF-8 encoding and decoding.\n */\nvar INVALID_UTF16 = \"utf8: invalid string\";\nvar INVALID_UTF8 = \"utf8: invalid source encoding\";\n/**\n * Encodes the given string into UTF-8 byte array.\n * Throws if the source string has invalid UTF-16 encoding.\n */\nfunction encode(s) {\n    // Calculate result length and allocate output array.\n    // encodedLength() also validates string and throws errors,\n    // so we don't need repeat validation here.\n    var arr = new Uint8Array(encodedLength(s));\n    var pos = 0;\n    for (var i = 0; i < s.length; i++) {\n        var c = s.charCodeAt(i);\n        if (c < 0x80) {\n            arr[pos++] = c;\n        }\n        else if (c < 0x800) {\n            arr[pos++] = 0xc0 | c >> 6;\n            arr[pos++] = 0x80 | c & 0x3f;\n        }\n        else if (c < 0xd800) {\n            arr[pos++] = 0xe0 | c >> 12;\n            arr[pos++] = 0x80 | (c >> 6) & 0x3f;\n            arr[pos++] = 0x80 | c & 0x3f;\n        }\n        else {\n            i++; // get one more character\n            c = (c & 0x3ff) << 10;\n            c |= s.charCodeAt(i) & 0x3ff;\n            c += 0x10000;\n            arr[pos++] = 0xf0 | c >> 18;\n            arr[pos++] = 0x80 | (c >> 12) & 0x3f;\n            arr[pos++] = 0x80 | (c >> 6) & 0x3f;\n            arr[pos++] = 0x80 | c & 0x3f;\n        }\n    }\n    return arr;\n}\nexports.encode = encode;\n/**\n * Returns the number of bytes required to encode the given string into UTF-8.\n * Throws if the source string has invalid UTF-16 encoding.\n */\nfunction encodedLength(s) {\n    var result = 0;\n    for (var i = 0; i < s.length; i++) {\n        var c = s.charCodeAt(i);\n        if (c < 0x80) {\n            result += 1;\n        }\n        else if (c < 0x800) {\n            result += 2;\n        }\n        else if (c < 0xd800) {\n            result += 3;\n        }\n        else if (c <= 0xdfff) {\n            if (i >= s.length - 1) {\n                throw new Error(INVALID_UTF16);\n            }\n            i++; // \"eat\" next character\n            result += 4;\n        }\n        else {\n            throw new Error(INVALID_UTF16);\n        }\n    }\n    return result;\n}\nexports.encodedLength = encodedLength;\n/**\n * Decodes the given byte array from UTF-8 into a string.\n * Throws if encoding is invalid.\n */\nfunction decode(arr) {\n    var chars = [];\n    for (var i = 0; i < arr.length; i++) {\n        var b = arr[i];\n        if (b & 0x80) {\n            var min = void 0;\n            if (b < 0xe0) {\n                // Need 1 more byte.\n                if (i >= arr.length) {\n                    throw new Error(INVALID_UTF8);\n                }\n                var n1 = arr[++i];\n                if ((n1 & 0xc0) !== 0x80) {\n                    throw new Error(INVALID_UTF8);\n                }\n                b = (b & 0x1f) << 6 | (n1 & 0x3f);\n                min = 0x80;\n            }\n            else if (b < 0xf0) {\n                // Need 2 more bytes.\n                if (i >= arr.length - 1) {\n                    throw new Error(INVALID_UTF8);\n                }\n                var n1 = arr[++i];\n                var n2 = arr[++i];\n                if ((n1 & 0xc0) !== 0x80 || (n2 & 0xc0) !== 0x80) {\n                    throw new Error(INVALID_UTF8);\n                }\n                b = (b & 0x0f) << 12 | (n1 & 0x3f) << 6 | (n2 & 0x3f);\n                min = 0x800;\n            }\n            else if (b < 0xf8) {\n                // Need 3 more bytes.\n                if (i >= arr.length - 2) {\n                    throw new Error(INVALID_UTF8);\n                }\n                var n1 = arr[++i];\n                var n2 = arr[++i];\n                var n3 = arr[++i];\n                if ((n1 & 0xc0) !== 0x80 || (n2 & 0xc0) !== 0x80 || (n3 & 0xc0) !== 0x80) {\n                    throw new Error(INVALID_UTF8);\n                }\n                b = (b & 0x0f) << 18 | (n1 & 0x3f) << 12 | (n2 & 0x3f) << 6 | (n3 & 0x3f);\n                min = 0x10000;\n            }\n            else {\n                throw new Error(INVALID_UTF8);\n            }\n            if (b < min || (b >= 0xd800 && b <= 0xdfff)) {\n                throw new Error(INVALID_UTF8);\n            }\n            if (b >= 0x10000) {\n                // Surrogate pair.\n                if (b > 0x10ffff) {\n                    throw new Error(INVALID_UTF8);\n                }\n                b -= 0x10000;\n                chars.push(String.fromCharCode(0xd800 | (b >> 10)));\n                b = 0xdc00 | (b & 0x3ff);\n            }\n        }\n        chars.push(String.fromCharCode(b));\n    }\n    return chars.join(\"\");\n}\nexports.decode = decode;\n//# sourceMappingURL=utf8.js.map\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __nested_webpack_require_19967__) {\n\n// required so we don't have to do require('pusher').default etc.\nmodule.exports = __nested_webpack_require_19967__(3).default;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __nested_webpack_require_20171__) {\n\n\"use strict\";\n__nested_webpack_require_20171__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/runtimes/web/dom/script_receiver_factory.ts\nvar ScriptReceiverFactory = (function () {\n    function ScriptReceiverFactory(prefix, name) {\n        this.lastId = 0;\n        this.prefix = prefix;\n        this.name = name;\n    }\n    ScriptReceiverFactory.prototype.create = function (callback) {\n        this.lastId++;\n        var number = this.lastId;\n        var id = this.prefix + number;\n        var name = this.name + '[' + number + ']';\n        var called = false;\n        var callbackWrapper = function () {\n            if (!called) {\n                callback.apply(null, arguments);\n                called = true;\n            }\n        };\n        this[number] = callbackWrapper;\n        return { number: number, id: id, name: name, callback: callbackWrapper };\n    };\n    ScriptReceiverFactory.prototype.remove = function (receiver) {\n        delete this[receiver.number];\n    };\n    return ScriptReceiverFactory;\n}());\n\nvar ScriptReceivers = new ScriptReceiverFactory('_pusher_script_', 'Pusher.ScriptReceivers');\n\n// CONCATENATED MODULE: ./src/core/defaults.ts\nvar Defaults = {\n    VERSION: \"7.0.3\",\n    PROTOCOL: 7,\n    wsPort: 80,\n    wssPort: 443,\n    wsPath: '',\n    httpHost: 'sockjs.pusher.com',\n    httpPort: 80,\n    httpsPort: 443,\n    httpPath: '/pusher',\n    stats_host: 'stats.pusher.com',\n    authEndpoint: '/pusher/auth',\n    authTransport: 'ajax',\n    activityTimeout: 120000,\n    pongTimeout: 30000,\n    unavailableTimeout: 10000,\n    cluster: 'mt1',\n    cdn_http: \"http://js.pusher.com\",\n    cdn_https: \"https://js.pusher.com\",\n    dependency_suffix: \"\"\n};\n/* harmony default export */ var defaults = (Defaults);\n\n// CONCATENATED MODULE: ./src/runtimes/web/dom/dependency_loader.ts\n\n\nvar dependency_loader_DependencyLoader = (function () {\n    function DependencyLoader(options) {\n        this.options = options;\n        this.receivers = options.receivers || ScriptReceivers;\n        this.loading = {};\n    }\n    DependencyLoader.prototype.load = function (name, options, callback) {\n        var self = this;\n        if (self.loading[name] && self.loading[name].length > 0) {\n            self.loading[name].push(callback);\n        }\n        else {\n            self.loading[name] = [callback];\n            var request = runtime.createScriptRequest(self.getPath(name, options));\n            var receiver = self.receivers.create(function (error) {\n                self.receivers.remove(receiver);\n                if (self.loading[name]) {\n                    var callbacks = self.loading[name];\n                    delete self.loading[name];\n                    var successCallback = function (wasSuccessful) {\n                        if (!wasSuccessful) {\n                            request.cleanup();\n                        }\n                    };\n                    for (var i = 0; i < callbacks.length; i++) {\n                        callbacks[i](error, successCallback);\n                    }\n                }\n            });\n            request.send(receiver);\n        }\n    };\n    DependencyLoader.prototype.getRoot = function (options) {\n        var cdn;\n        var protocol = runtime.getDocument().location.protocol;\n        if ((options && options.useTLS) || protocol === 'https:') {\n            cdn = this.options.cdn_https;\n        }\n        else {\n            cdn = this.options.cdn_http;\n        }\n        return cdn.replace(/\\/*$/, '') + '/' + this.options.version;\n    };\n    DependencyLoader.prototype.getPath = function (name, options) {\n        return this.getRoot(options) + '/' + name + this.options.suffix + '.js';\n    };\n    return DependencyLoader;\n}());\n/* harmony default export */ var dependency_loader = (dependency_loader_DependencyLoader);\n\n// CONCATENATED MODULE: ./src/runtimes/web/dom/dependencies.ts\n\n\n\nvar DependenciesReceivers = new ScriptReceiverFactory('_pusher_dependencies', 'Pusher.DependenciesReceivers');\nvar Dependencies = new dependency_loader({\n    cdn_http: defaults.cdn_http,\n    cdn_https: defaults.cdn_https,\n    version: defaults.VERSION,\n    suffix: defaults.dependency_suffix,\n    receivers: DependenciesReceivers\n});\n\n// CONCATENATED MODULE: ./src/core/utils/url_store.ts\nvar urlStore = {\n    baseUrl: 'https://pusher.com',\n    urls: {\n        authenticationEndpoint: {\n            path: '/docs/authenticating_users'\n        },\n        javascriptQuickStart: {\n            path: '/docs/javascript_quick_start'\n        },\n        triggeringClientEvents: {\n            path: '/docs/client_api_guide/client_events#trigger-events'\n        },\n        encryptedChannelSupport: {\n            fullUrl: 'https://github.com/pusher/pusher-js/tree/cc491015371a4bde5743d1c87a0fbac0feb53195#encrypted-channel-support'\n        }\n    }\n};\nvar buildLogSuffix = function (key) {\n    var urlPrefix = 'See:';\n    var urlObj = urlStore.urls[key];\n    if (!urlObj)\n        return '';\n    var url;\n    if (urlObj.fullUrl) {\n        url = urlObj.fullUrl;\n    }\n    else if (urlObj.path) {\n        url = urlStore.baseUrl + urlObj.path;\n    }\n    if (!url)\n        return '';\n    return urlPrefix + \" \" + url;\n};\n/* harmony default export */ var url_store = ({ buildLogSuffix: buildLogSuffix });\n\n// CONCATENATED MODULE: ./src/core/errors.ts\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar BadEventName = (function (_super) {\n    __extends(BadEventName, _super);\n    function BadEventName(msg) {\n        var _newTarget = this.constructor;\n        var _this = _super.call(this, msg) || this;\n        Object.setPrototypeOf(_this, _newTarget.prototype);\n        return _this;\n    }\n    return BadEventName;\n}(Error));\n\nvar RequestTimedOut = (function (_super) {\n    __extends(RequestTimedOut, _super);\n    function RequestTimedOut(msg) {\n        var _newTarget = this.constructor;\n        var _this = _super.call(this, msg) || this;\n        Object.setPrototypeOf(_this, _newTarget.prototype);\n        return _this;\n    }\n    return RequestTimedOut;\n}(Error));\n\nvar TransportPriorityTooLow = (function (_super) {\n    __extends(TransportPriorityTooLow, _super);\n    function TransportPriorityTooLow(msg) {\n        var _newTarget = this.constructor;\n        var _this = _super.call(this, msg) || this;\n        Object.setPrototypeOf(_this, _newTarget.prototype);\n        return _this;\n    }\n    return TransportPriorityTooLow;\n}(Error));\n\nvar TransportClosed = (function (_super) {\n    __extends(TransportClosed, _super);\n    function TransportClosed(msg) {\n        var _newTarget = this.constructor;\n        var _this = _super.call(this, msg) || this;\n        Object.setPrototypeOf(_this, _newTarget.prototype);\n        return _this;\n    }\n    return TransportClosed;\n}(Error));\n\nvar UnsupportedFeature = (function (_super) {\n    __extends(UnsupportedFeature, _super);\n    function UnsupportedFeature(msg) {\n        var _newTarget = this.constructor;\n        var _this = _super.call(this, msg) || this;\n        Object.setPrototypeOf(_this, _newTarget.prototype);\n        return _this;\n    }\n    return UnsupportedFeature;\n}(Error));\n\nvar UnsupportedTransport = (function (_super) {\n    __extends(UnsupportedTransport, _super);\n    function UnsupportedTransport(msg) {\n        var _newTarget = this.constructor;\n        var _this = _super.call(this, msg) || this;\n        Object.setPrototypeOf(_this, _newTarget.prototype);\n        return _this;\n    }\n    return UnsupportedTransport;\n}(Error));\n\nvar UnsupportedStrategy = (function (_super) {\n    __extends(UnsupportedStrategy, _super);\n    function UnsupportedStrategy(msg) {\n        var _newTarget = this.constructor;\n        var _this = _super.call(this, msg) || this;\n        Object.setPrototypeOf(_this, _newTarget.prototype);\n        return _this;\n    }\n    return UnsupportedStrategy;\n}(Error));\n\nvar HTTPAuthError = (function (_super) {\n    __extends(HTTPAuthError, _super);\n    function HTTPAuthError(status, msg) {\n        var _newTarget = this.constructor;\n        var _this = _super.call(this, msg) || this;\n        _this.status = status;\n        Object.setPrototypeOf(_this, _newTarget.prototype);\n        return _this;\n    }\n    return HTTPAuthError;\n}(Error));\n\n\n// CONCATENATED MODULE: ./src/runtimes/isomorphic/auth/xhr_auth.ts\n\n\n\nvar ajax = function (context, socketId, callback) {\n    var self = this, xhr;\n    xhr = runtime.createXHR();\n    xhr.open('POST', self.options.authEndpoint, true);\n    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    for (var headerName in this.authOptions.headers) {\n        xhr.setRequestHeader(headerName, this.authOptions.headers[headerName]);\n    }\n    xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n            if (xhr.status === 200) {\n                var data = void 0;\n                var parsed = false;\n                try {\n                    data = JSON.parse(xhr.responseText);\n                    parsed = true;\n                }\n                catch (e) {\n                    callback(new HTTPAuthError(200, 'JSON returned from auth endpoint was invalid, yet status code was 200. Data was: ' +\n                        xhr.responseText), { auth: '' });\n                }\n                if (parsed) {\n                    callback(null, data);\n                }\n            }\n            else {\n                var suffix = url_store.buildLogSuffix('authenticationEndpoint');\n                callback(new HTTPAuthError(xhr.status, 'Unable to retrieve auth string from auth endpoint - ' +\n                    (\"received status: \" + xhr.status + \" from \" + self.options.authEndpoint + \". \") +\n                    (\"Clients must be authenticated to join private or presence channels. \" + suffix)), { auth: '' });\n            }\n        }\n    };\n    xhr.send(this.composeQuery(socketId));\n    return xhr;\n};\n/* harmony default export */ var xhr_auth = (ajax);\n\n// CONCATENATED MODULE: ./src/core/base64.ts\nfunction encode(s) {\n    return btoa(utob(s));\n}\nvar fromCharCode = String.fromCharCode;\nvar b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nvar b64tab = {};\nfor (var base64_i = 0, l = b64chars.length; base64_i < l; base64_i++) {\n    b64tab[b64chars.charAt(base64_i)] = base64_i;\n}\nvar cb_utob = function (c) {\n    var cc = c.charCodeAt(0);\n    return cc < 0x80\n        ? c\n        : cc < 0x800\n            ? fromCharCode(0xc0 | (cc >>> 6)) + fromCharCode(0x80 | (cc & 0x3f))\n            : fromCharCode(0xe0 | ((cc >>> 12) & 0x0f)) +\n                fromCharCode(0x80 | ((cc >>> 6) & 0x3f)) +\n                fromCharCode(0x80 | (cc & 0x3f));\n};\nvar utob = function (u) {\n    return u.replace(/[^\\x00-\\x7F]/g, cb_utob);\n};\nvar cb_encode = function (ccc) {\n    var padlen = [0, 2, 1][ccc.length % 3];\n    var ord = (ccc.charCodeAt(0) << 16) |\n        ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8) |\n        (ccc.length > 2 ? ccc.charCodeAt(2) : 0);\n    var chars = [\n        b64chars.charAt(ord >>> 18),\n        b64chars.charAt((ord >>> 12) & 63),\n        padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n        padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n    ];\n    return chars.join('');\n};\nvar btoa = window.btoa ||\n    function (b) {\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n\n// CONCATENATED MODULE: ./src/core/utils/timers/abstract_timer.ts\nvar Timer = (function () {\n    function Timer(set, clear, delay, callback) {\n        var _this = this;\n        this.clear = clear;\n        this.timer = set(function () {\n            if (_this.timer) {\n                _this.timer = callback(_this.timer);\n            }\n        }, delay);\n    }\n    Timer.prototype.isRunning = function () {\n        return this.timer !== null;\n    };\n    Timer.prototype.ensureAborted = function () {\n        if (this.timer) {\n            this.clear(this.timer);\n            this.timer = null;\n        }\n    };\n    return Timer;\n}());\n/* harmony default export */ var abstract_timer = (Timer);\n\n// CONCATENATED MODULE: ./src/core/utils/timers/index.ts\nvar timers_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\nfunction timers_clearTimeout(timer) {\n    window.clearTimeout(timer);\n}\nfunction timers_clearInterval(timer) {\n    window.clearInterval(timer);\n}\nvar OneOffTimer = (function (_super) {\n    timers_extends(OneOffTimer, _super);\n    function OneOffTimer(delay, callback) {\n        return _super.call(this, setTimeout, timers_clearTimeout, delay, function (timer) {\n            callback();\n            return null;\n        }) || this;\n    }\n    return OneOffTimer;\n}(abstract_timer));\n\nvar PeriodicTimer = (function (_super) {\n    timers_extends(PeriodicTimer, _super);\n    function PeriodicTimer(delay, callback) {\n        return _super.call(this, setInterval, timers_clearInterval, delay, function (timer) {\n            callback();\n            return timer;\n        }) || this;\n    }\n    return PeriodicTimer;\n}(abstract_timer));\n\n\n// CONCATENATED MODULE: ./src/core/util.ts\n\nvar Util = {\n    now: function () {\n        if (Date.now) {\n            return Date.now();\n        }\n        else {\n            return new Date().valueOf();\n        }\n    },\n    defer: function (callback) {\n        return new OneOffTimer(0, callback);\n    },\n    method: function (name) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var boundArguments = Array.prototype.slice.call(arguments, 1);\n        return function (object) {\n            return object[name].apply(object, boundArguments.concat(arguments));\n        };\n    }\n};\n/* harmony default export */ var util = (Util);\n\n// CONCATENATED MODULE: ./src/core/utils/collections.ts\n\n\nfunction extend(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    for (var i = 0; i < sources.length; i++) {\n        var extensions = sources[i];\n        for (var property in extensions) {\n            if (extensions[property] &&\n                extensions[property].constructor &&\n                extensions[property].constructor === Object) {\n                target[property] = extend(target[property] || {}, extensions[property]);\n            }\n            else {\n                target[property] = extensions[property];\n            }\n        }\n    }\n    return target;\n}\nfunction stringify() {\n    var m = ['Pusher'];\n    for (var i = 0; i < arguments.length; i++) {\n        if (typeof arguments[i] === 'string') {\n            m.push(arguments[i]);\n        }\n        else {\n            m.push(safeJSONStringify(arguments[i]));\n        }\n    }\n    return m.join(' : ');\n}\nfunction arrayIndexOf(array, item) {\n    var nativeIndexOf = Array.prototype.indexOf;\n    if (array === null) {\n        return -1;\n    }\n    if (nativeIndexOf && array.indexOf === nativeIndexOf) {\n        return array.indexOf(item);\n    }\n    for (var i = 0, l = array.length; i < l; i++) {\n        if (array[i] === item) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction objectApply(object, f) {\n    for (var key in object) {\n        if (Object.prototype.hasOwnProperty.call(object, key)) {\n            f(object[key], key, object);\n        }\n    }\n}\nfunction keys(object) {\n    var keys = [];\n    objectApply(object, function (_, key) {\n        keys.push(key);\n    });\n    return keys;\n}\nfunction values(object) {\n    var values = [];\n    objectApply(object, function (value) {\n        values.push(value);\n    });\n    return values;\n}\nfunction apply(array, f, context) {\n    for (var i = 0; i < array.length; i++) {\n        f.call(context || window, array[i], i, array);\n    }\n}\nfunction map(array, f) {\n    var result = [];\n    for (var i = 0; i < array.length; i++) {\n        result.push(f(array[i], i, array, result));\n    }\n    return result;\n}\nfunction mapObject(object, f) {\n    var result = {};\n    objectApply(object, function (value, key) {\n        result[key] = f(value);\n    });\n    return result;\n}\nfunction filter(array, test) {\n    test =\n        test ||\n            function (value) {\n                return !!value;\n            };\n    var result = [];\n    for (var i = 0; i < array.length; i++) {\n        if (test(array[i], i, array, result)) {\n            result.push(array[i]);\n        }\n    }\n    return result;\n}\nfunction filterObject(object, test) {\n    var result = {};\n    objectApply(object, function (value, key) {\n        if ((test && test(value, key, object, result)) || Boolean(value)) {\n            result[key] = value;\n        }\n    });\n    return result;\n}\nfunction flatten(object) {\n    var result = [];\n    objectApply(object, function (value, key) {\n        result.push([key, value]);\n    });\n    return result;\n}\nfunction any(array, test) {\n    for (var i = 0; i < array.length; i++) {\n        if (test(array[i], i, array)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction collections_all(array, test) {\n    for (var i = 0; i < array.length; i++) {\n        if (!test(array[i], i, array)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction encodeParamsObject(data) {\n    return mapObject(data, function (value) {\n        if (typeof value === 'object') {\n            value = safeJSONStringify(value);\n        }\n        return encodeURIComponent(encode(value.toString()));\n    });\n}\nfunction buildQueryString(data) {\n    var params = filterObject(data, function (value) {\n        return value !== undefined;\n    });\n    var query = map(flatten(encodeParamsObject(params)), util.method('join', '=')).join('&');\n    return query;\n}\nfunction decycleObject(object) {\n    var objects = [], paths = [];\n    return (function derez(value, path) {\n        var i, name, nu;\n        switch (typeof value) {\n            case 'object':\n                if (!value) {\n                    return null;\n                }\n                for (i = 0; i < objects.length; i += 1) {\n                    if (objects[i] === value) {\n                        return { $ref: paths[i] };\n                    }\n                }\n                objects.push(value);\n                paths.push(path);\n                if (Object.prototype.toString.apply(value) === '[object Array]') {\n                    nu = [];\n                    for (i = 0; i < value.length; i += 1) {\n                        nu[i] = derez(value[i], path + '[' + i + ']');\n                    }\n                }\n                else {\n                    nu = {};\n                    for (name in value) {\n                        if (Object.prototype.hasOwnProperty.call(value, name)) {\n                            nu[name] = derez(value[name], path + '[' + JSON.stringify(name) + ']');\n                        }\n                    }\n                }\n                return nu;\n            case 'number':\n            case 'string':\n            case 'boolean':\n                return value;\n        }\n    })(object, '$');\n}\nfunction safeJSONStringify(source) {\n    try {\n        return JSON.stringify(source);\n    }\n    catch (e) {\n        return JSON.stringify(decycleObject(source));\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/logger.ts\n\n\nvar logger_Logger = (function () {\n    function Logger() {\n        this.globalLog = function (message) {\n            if (window.console && window.console.log) {\n                window.console.log(message);\n            }\n        };\n    }\n    Logger.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this.log(this.globalLog, args);\n    };\n    Logger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this.log(this.globalLogWarn, args);\n    };\n    Logger.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this.log(this.globalLogError, args);\n    };\n    Logger.prototype.globalLogWarn = function (message) {\n        if (window.console && window.console.warn) {\n            window.console.warn(message);\n        }\n        else {\n            this.globalLog(message);\n        }\n    };\n    Logger.prototype.globalLogError = function (message) {\n        if (window.console && window.console.error) {\n            window.console.error(message);\n        }\n        else {\n            this.globalLogWarn(message);\n        }\n    };\n    Logger.prototype.log = function (defaultLoggingFunction) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var message = stringify.apply(this, arguments);\n        if (core_pusher.log) {\n            core_pusher.log(message);\n        }\n        else if (core_pusher.logToConsole) {\n            var log = defaultLoggingFunction.bind(this);\n            log(message);\n        }\n    };\n    return Logger;\n}());\n/* harmony default export */ var logger = (new logger_Logger());\n\n// CONCATENATED MODULE: ./src/runtimes/web/auth/jsonp_auth.ts\n\nvar jsonp = function (context, socketId, callback) {\n    if (this.authOptions.headers !== undefined) {\n        logger.warn('To send headers with the auth request, you must use AJAX, rather than JSONP.');\n    }\n    var callbackName = context.nextAuthCallbackID.toString();\n    context.nextAuthCallbackID++;\n    var document = context.getDocument();\n    var script = document.createElement('script');\n    context.auth_callbacks[callbackName] = function (data) {\n        callback(null, data);\n    };\n    var callback_name = \"Pusher.auth_callbacks['\" + callbackName + \"']\";\n    script.src =\n        this.options.authEndpoint +\n            '?callback=' +\n            encodeURIComponent(callback_name) +\n            '&' +\n            this.composeQuery(socketId);\n    var head = document.getElementsByTagName('head')[0] || document.documentElement;\n    head.insertBefore(script, head.firstChild);\n};\n/* harmony default export */ var jsonp_auth = (jsonp);\n\n// CONCATENATED MODULE: ./src/runtimes/web/dom/script_request.ts\nvar ScriptRequest = (function () {\n    function ScriptRequest(src) {\n        this.src = src;\n    }\n    ScriptRequest.prototype.send = function (receiver) {\n        var self = this;\n        var errorString = 'Error loading ' + self.src;\n        self.script = document.createElement('script');\n        self.script.id = receiver.id;\n        self.script.src = self.src;\n        self.script.type = 'text/javascript';\n        self.script.charset = 'UTF-8';\n        if (self.script.addEventListener) {\n            self.script.onerror = function () {\n                receiver.callback(errorString);\n            };\n            self.script.onload = function () {\n                receiver.callback(null);\n            };\n        }\n        else {\n            self.script.onreadystatechange = function () {\n                if (self.script.readyState === 'loaded' ||\n                    self.script.readyState === 'complete') {\n                    receiver.callback(null);\n                }\n            };\n        }\n        if (self.script.async === undefined &&\n            document.attachEvent &&\n            /opera/i.test(navigator.userAgent)) {\n            self.errorScript = document.createElement('script');\n            self.errorScript.id = receiver.id + '_error';\n            self.errorScript.text = receiver.name + \"('\" + errorString + \"');\";\n            self.script.async = self.errorScript.async = false;\n        }\n        else {\n            self.script.async = true;\n        }\n        var head = document.getElementsByTagName('head')[0];\n        head.insertBefore(self.script, head.firstChild);\n        if (self.errorScript) {\n            head.insertBefore(self.errorScript, self.script.nextSibling);\n        }\n    };\n    ScriptRequest.prototype.cleanup = function () {\n        if (this.script) {\n            this.script.onload = this.script.onerror = null;\n            this.script.onreadystatechange = null;\n        }\n        if (this.script && this.script.parentNode) {\n            this.script.parentNode.removeChild(this.script);\n        }\n        if (this.errorScript && this.errorScript.parentNode) {\n            this.errorScript.parentNode.removeChild(this.errorScript);\n        }\n        this.script = null;\n        this.errorScript = null;\n    };\n    return ScriptRequest;\n}());\n/* harmony default export */ var script_request = (ScriptRequest);\n\n// CONCATENATED MODULE: ./src/runtimes/web/dom/jsonp_request.ts\n\n\nvar jsonp_request_JSONPRequest = (function () {\n    function JSONPRequest(url, data) {\n        this.url = url;\n        this.data = data;\n    }\n    JSONPRequest.prototype.send = function (receiver) {\n        if (this.request) {\n            return;\n        }\n        var query = buildQueryString(this.data);\n        var url = this.url + '/' + receiver.number + '?' + query;\n        this.request = runtime.createScriptRequest(url);\n        this.request.send(receiver);\n    };\n    JSONPRequest.prototype.cleanup = function () {\n        if (this.request) {\n            this.request.cleanup();\n        }\n    };\n    return JSONPRequest;\n}());\n/* harmony default export */ var jsonp_request = (jsonp_request_JSONPRequest);\n\n// CONCATENATED MODULE: ./src/runtimes/web/timeline/jsonp_timeline.ts\n\n\nvar getAgent = function (sender, useTLS) {\n    return function (data, callback) {\n        var scheme = 'http' + (useTLS ? 's' : '') + '://';\n        var url = scheme + (sender.host || sender.options.host) + sender.options.path;\n        var request = runtime.createJSONPRequest(url, data);\n        var receiver = runtime.ScriptReceivers.create(function (error, result) {\n            ScriptReceivers.remove(receiver);\n            request.cleanup();\n            if (result && result.host) {\n                sender.host = result.host;\n            }\n            if (callback) {\n                callback(error, result);\n            }\n        });\n        request.send(receiver);\n    };\n};\nvar jsonp_timeline_jsonp = {\n    name: 'jsonp',\n    getAgent: getAgent\n};\n/* harmony default export */ var jsonp_timeline = (jsonp_timeline_jsonp);\n\n// CONCATENATED MODULE: ./src/core/transports/url_schemes.ts\n\nfunction getGenericURL(baseScheme, params, path) {\n    var scheme = baseScheme + (params.useTLS ? 's' : '');\n    var host = params.useTLS ? params.hostTLS : params.hostNonTLS;\n    return scheme + '://' + host + path;\n}\nfunction getGenericPath(key, queryString) {\n    var path = '/app/' + key;\n    var query = '?protocol=' +\n        defaults.PROTOCOL +\n        '&client=js' +\n        '&version=' +\n        defaults.VERSION +\n        (queryString ? '&' + queryString : '');\n    return path + query;\n}\nvar ws = {\n    getInitial: function (key, params) {\n        var path = (params.httpPath || '') + getGenericPath(key, 'flash=false');\n        return getGenericURL('ws', params, path);\n    }\n};\nvar http = {\n    getInitial: function (key, params) {\n        var path = (params.httpPath || '/pusher') + getGenericPath(key);\n        return getGenericURL('http', params, path);\n    }\n};\nvar sockjs = {\n    getInitial: function (key, params) {\n        return getGenericURL('http', params, params.httpPath || '/pusher');\n    },\n    getPath: function (key, params) {\n        return getGenericPath(key);\n    }\n};\n\n// CONCATENATED MODULE: ./src/core/events/callback_registry.ts\n\nvar callback_registry_CallbackRegistry = (function () {\n    function CallbackRegistry() {\n        this._callbacks = {};\n    }\n    CallbackRegistry.prototype.get = function (name) {\n        return this._callbacks[prefix(name)];\n    };\n    CallbackRegistry.prototype.add = function (name, callback, context) {\n        var prefixedEventName = prefix(name);\n        this._callbacks[prefixedEventName] =\n            this._callbacks[prefixedEventName] || [];\n        this._callbacks[prefixedEventName].push({\n            fn: callback,\n            context: context\n        });\n    };\n    CallbackRegistry.prototype.remove = function (name, callback, context) {\n        if (!name && !callback && !context) {\n            this._callbacks = {};\n            return;\n        }\n        var names = name ? [prefix(name)] : keys(this._callbacks);\n        if (callback || context) {\n            this.removeCallback(names, callback, context);\n        }\n        else {\n            this.removeAllCallbacks(names);\n        }\n    };\n    CallbackRegistry.prototype.removeCallback = function (names, callback, context) {\n        apply(names, function (name) {\n            this._callbacks[name] = filter(this._callbacks[name] || [], function (binding) {\n                return ((callback && callback !== binding.fn) ||\n                    (context && context !== binding.context));\n            });\n            if (this._callbacks[name].length === 0) {\n                delete this._callbacks[name];\n            }\n        }, this);\n    };\n    CallbackRegistry.prototype.removeAllCallbacks = function (names) {\n        apply(names, function (name) {\n            delete this._callbacks[name];\n        }, this);\n    };\n    return CallbackRegistry;\n}());\n/* harmony default export */ var callback_registry = (callback_registry_CallbackRegistry);\nfunction prefix(name) {\n    return '_' + name;\n}\n\n// CONCATENATED MODULE: ./src/core/events/dispatcher.ts\n\n\nvar dispatcher_Dispatcher = (function () {\n    function Dispatcher(failThrough) {\n        this.callbacks = new callback_registry();\n        this.global_callbacks = [];\n        this.failThrough = failThrough;\n    }\n    Dispatcher.prototype.bind = function (eventName, callback, context) {\n        this.callbacks.add(eventName, callback, context);\n        return this;\n    };\n    Dispatcher.prototype.bind_global = function (callback) {\n        this.global_callbacks.push(callback);\n        return this;\n    };\n    Dispatcher.prototype.unbind = function (eventName, callback, context) {\n        this.callbacks.remove(eventName, callback, context);\n        return this;\n    };\n    Dispatcher.prototype.unbind_global = function (callback) {\n        if (!callback) {\n            this.global_callbacks = [];\n            return this;\n        }\n        this.global_callbacks = filter(this.global_callbacks || [], function (c) { return c !== callback; });\n        return this;\n    };\n    Dispatcher.prototype.unbind_all = function () {\n        this.unbind();\n        this.unbind_global();\n        return this;\n    };\n    Dispatcher.prototype.emit = function (eventName, data, metadata) {\n        for (var i = 0; i < this.global_callbacks.length; i++) {\n            this.global_callbacks[i](eventName, data);\n        }\n        var callbacks = this.callbacks.get(eventName);\n        var args = [];\n        if (metadata) {\n            args.push(data, metadata);\n        }\n        else if (data) {\n            args.push(data);\n        }\n        if (callbacks && callbacks.length > 0) {\n            for (var i = 0; i < callbacks.length; i++) {\n                callbacks[i].fn.apply(callbacks[i].context || window, args);\n            }\n        }\n        else if (this.failThrough) {\n            this.failThrough(eventName, data);\n        }\n        return this;\n    };\n    return Dispatcher;\n}());\n/* harmony default export */ var dispatcher = (dispatcher_Dispatcher);\n\n// CONCATENATED MODULE: ./src/core/transports/transport_connection.ts\nvar transport_connection_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar transport_connection_TransportConnection = (function (_super) {\n    transport_connection_extends(TransportConnection, _super);\n    function TransportConnection(hooks, name, priority, key, options) {\n        var _this = _super.call(this) || this;\n        _this.initialize = runtime.transportConnectionInitializer;\n        _this.hooks = hooks;\n        _this.name = name;\n        _this.priority = priority;\n        _this.key = key;\n        _this.options = options;\n        _this.state = 'new';\n        _this.timeline = options.timeline;\n        _this.activityTimeout = options.activityTimeout;\n        _this.id = _this.timeline.generateUniqueID();\n        return _this;\n    }\n    TransportConnection.prototype.handlesActivityChecks = function () {\n        return Boolean(this.hooks.handlesActivityChecks);\n    };\n    TransportConnection.prototype.supportsPing = function () {\n        return Boolean(this.hooks.supportsPing);\n    };\n    TransportConnection.prototype.connect = function () {\n        var _this = this;\n        if (this.socket || this.state !== 'initialized') {\n            return false;\n        }\n        var url = this.hooks.urls.getInitial(this.key, this.options);\n        try {\n            this.socket = this.hooks.getSocket(url, this.options);\n        }\n        catch (e) {\n            util.defer(function () {\n                _this.onError(e);\n                _this.changeState('closed');\n            });\n            return false;\n        }\n        this.bindListeners();\n        logger.debug('Connecting', { transport: this.name, url: url });\n        this.changeState('connecting');\n        return true;\n    };\n    TransportConnection.prototype.close = function () {\n        if (this.socket) {\n            this.socket.close();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    TransportConnection.prototype.send = function (data) {\n        var _this = this;\n        if (this.state === 'open') {\n            util.defer(function () {\n                if (_this.socket) {\n                    _this.socket.send(data);\n                }\n            });\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    TransportConnection.prototype.ping = function () {\n        if (this.state === 'open' && this.supportsPing()) {\n            this.socket.ping();\n        }\n    };\n    TransportConnection.prototype.onOpen = function () {\n        if (this.hooks.beforeOpen) {\n            this.hooks.beforeOpen(this.socket, this.hooks.urls.getPath(this.key, this.options));\n        }\n        this.changeState('open');\n        this.socket.onopen = undefined;\n    };\n    TransportConnection.prototype.onError = function (error) {\n        this.emit('error', { type: 'WebSocketError', error: error });\n        this.timeline.error(this.buildTimelineMessage({ error: error.toString() }));\n    };\n    TransportConnection.prototype.onClose = function (closeEvent) {\n        if (closeEvent) {\n            this.changeState('closed', {\n                code: closeEvent.code,\n                reason: closeEvent.reason,\n                wasClean: closeEvent.wasClean\n            });\n        }\n        else {\n            this.changeState('closed');\n        }\n        this.unbindListeners();\n        this.socket = undefined;\n    };\n    TransportConnection.prototype.onMessage = function (message) {\n        this.emit('message', message);\n    };\n    TransportConnection.prototype.onActivity = function () {\n        this.emit('activity');\n    };\n    TransportConnection.prototype.bindListeners = function () {\n        var _this = this;\n        this.socket.onopen = function () {\n            _this.onOpen();\n        };\n        this.socket.onerror = function (error) {\n            _this.onError(error);\n        };\n        this.socket.onclose = function (closeEvent) {\n            _this.onClose(closeEvent);\n        };\n        this.socket.onmessage = function (message) {\n            _this.onMessage(message);\n        };\n        if (this.supportsPing()) {\n            this.socket.onactivity = function () {\n                _this.onActivity();\n            };\n        }\n    };\n    TransportConnection.prototype.unbindListeners = function () {\n        if (this.socket) {\n            this.socket.onopen = undefined;\n            this.socket.onerror = undefined;\n            this.socket.onclose = undefined;\n            this.socket.onmessage = undefined;\n            if (this.supportsPing()) {\n                this.socket.onactivity = undefined;\n            }\n        }\n    };\n    TransportConnection.prototype.changeState = function (state, params) {\n        this.state = state;\n        this.timeline.info(this.buildTimelineMessage({\n            state: state,\n            params: params\n        }));\n        this.emit(state, params);\n    };\n    TransportConnection.prototype.buildTimelineMessage = function (message) {\n        return extend({ cid: this.id }, message);\n    };\n    return TransportConnection;\n}(dispatcher));\n/* harmony default export */ var transport_connection = (transport_connection_TransportConnection);\n\n// CONCATENATED MODULE: ./src/core/transports/transport.ts\n\nvar transport_Transport = (function () {\n    function Transport(hooks) {\n        this.hooks = hooks;\n    }\n    Transport.prototype.isSupported = function (environment) {\n        return this.hooks.isSupported(environment);\n    };\n    Transport.prototype.createConnection = function (name, priority, key, options) {\n        return new transport_connection(this.hooks, name, priority, key, options);\n    };\n    return Transport;\n}());\n/* harmony default export */ var transports_transport = (transport_Transport);\n\n// CONCATENATED MODULE: ./src/runtimes/isomorphic/transports/transports.ts\n\n\n\n\nvar WSTransport = new transports_transport({\n    urls: ws,\n    handlesActivityChecks: false,\n    supportsPing: false,\n    isInitialized: function () {\n        return Boolean(runtime.getWebSocketAPI());\n    },\n    isSupported: function () {\n        return Boolean(runtime.getWebSocketAPI());\n    },\n    getSocket: function (url) {\n        return runtime.createWebSocket(url);\n    }\n});\nvar httpConfiguration = {\n    urls: http,\n    handlesActivityChecks: false,\n    supportsPing: true,\n    isInitialized: function () {\n        return true;\n    }\n};\nvar streamingConfiguration = extend({\n    getSocket: function (url) {\n        return runtime.HTTPFactory.createStreamingSocket(url);\n    }\n}, httpConfiguration);\nvar pollingConfiguration = extend({\n    getSocket: function (url) {\n        return runtime.HTTPFactory.createPollingSocket(url);\n    }\n}, httpConfiguration);\nvar xhrConfiguration = {\n    isSupported: function () {\n        return runtime.isXHRSupported();\n    }\n};\nvar XHRStreamingTransport = new transports_transport((extend({}, streamingConfiguration, xhrConfiguration)));\nvar XHRPollingTransport = new transports_transport(extend({}, pollingConfiguration, xhrConfiguration));\nvar Transports = {\n    ws: WSTransport,\n    xhr_streaming: XHRStreamingTransport,\n    xhr_polling: XHRPollingTransport\n};\n/* harmony default export */ var transports = (Transports);\n\n// CONCATENATED MODULE: ./src/runtimes/web/transports/transports.ts\n\n\n\n\n\n\nvar SockJSTransport = new transports_transport({\n    file: 'sockjs',\n    urls: sockjs,\n    handlesActivityChecks: true,\n    supportsPing: false,\n    isSupported: function () {\n        return true;\n    },\n    isInitialized: function () {\n        return window.SockJS !== undefined;\n    },\n    getSocket: function (url, options) {\n        return new window.SockJS(url, null, {\n            js_path: Dependencies.getPath('sockjs', {\n                useTLS: options.useTLS\n            }),\n            ignore_null_origin: options.ignoreNullOrigin\n        });\n    },\n    beforeOpen: function (socket, path) {\n        socket.send(JSON.stringify({\n            path: path\n        }));\n    }\n});\nvar xdrConfiguration = {\n    isSupported: function (environment) {\n        var yes = runtime.isXDRSupported(environment.useTLS);\n        return yes;\n    }\n};\nvar XDRStreamingTransport = new transports_transport((extend({}, streamingConfiguration, xdrConfiguration)));\nvar XDRPollingTransport = new transports_transport(extend({}, pollingConfiguration, xdrConfiguration));\ntransports.xdr_streaming = XDRStreamingTransport;\ntransports.xdr_polling = XDRPollingTransport;\ntransports.sockjs = SockJSTransport;\n/* harmony default export */ var transports_transports = (transports);\n\n// CONCATENATED MODULE: ./src/runtimes/web/net_info.ts\nvar net_info_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\nvar NetInfo = (function (_super) {\n    net_info_extends(NetInfo, _super);\n    function NetInfo() {\n        var _this = _super.call(this) || this;\n        var self = _this;\n        if (window.addEventListener !== undefined) {\n            window.addEventListener('online', function () {\n                self.emit('online');\n            }, false);\n            window.addEventListener('offline', function () {\n                self.emit('offline');\n            }, false);\n        }\n        return _this;\n    }\n    NetInfo.prototype.isOnline = function () {\n        if (window.navigator.onLine === undefined) {\n            return true;\n        }\n        else {\n            return window.navigator.onLine;\n        }\n    };\n    return NetInfo;\n}(dispatcher));\n\nvar net_info_Network = new NetInfo();\n\n// CONCATENATED MODULE: ./src/core/transports/assistant_to_the_transport_manager.ts\n\n\nvar assistant_to_the_transport_manager_AssistantToTheTransportManager = (function () {\n    function AssistantToTheTransportManager(manager, transport, options) {\n        this.manager = manager;\n        this.transport = transport;\n        this.minPingDelay = options.minPingDelay;\n        this.maxPingDelay = options.maxPingDelay;\n        this.pingDelay = undefined;\n    }\n    AssistantToTheTransportManager.prototype.createConnection = function (name, priority, key, options) {\n        var _this = this;\n        options = extend({}, options, {\n            activityTimeout: this.pingDelay\n        });\n        var connection = this.transport.createConnection(name, priority, key, options);\n        var openTimestamp = null;\n        var onOpen = function () {\n            connection.unbind('open', onOpen);\n            connection.bind('closed', onClosed);\n            openTimestamp = util.now();\n        };\n        var onClosed = function (closeEvent) {\n            connection.unbind('closed', onClosed);\n            if (closeEvent.code === 1002 || closeEvent.code === 1003) {\n                _this.manager.reportDeath();\n            }\n            else if (!closeEvent.wasClean && openTimestamp) {\n                var lifespan = util.now() - openTimestamp;\n                if (lifespan < 2 * _this.maxPingDelay) {\n                    _this.manager.reportDeath();\n                    _this.pingDelay = Math.max(lifespan / 2, _this.minPingDelay);\n                }\n            }\n        };\n        connection.bind('open', onOpen);\n        return connection;\n    };\n    AssistantToTheTransportManager.prototype.isSupported = function (environment) {\n        return this.manager.isAlive() && this.transport.isSupported(environment);\n    };\n    return AssistantToTheTransportManager;\n}());\n/* harmony default export */ var assistant_to_the_transport_manager = (assistant_to_the_transport_manager_AssistantToTheTransportManager);\n\n// CONCATENATED MODULE: ./src/core/connection/protocol/protocol.ts\nvar Protocol = {\n    decodeMessage: function (messageEvent) {\n        try {\n            var messageData = JSON.parse(messageEvent.data);\n            var pusherEventData = messageData.data;\n            if (typeof pusherEventData === 'string') {\n                try {\n                    pusherEventData = JSON.parse(messageData.data);\n                }\n                catch (e) { }\n            }\n            var pusherEvent = {\n                event: messageData.event,\n                channel: messageData.channel,\n                data: pusherEventData\n            };\n            if (messageData.user_id) {\n                pusherEvent.user_id = messageData.user_id;\n            }\n            return pusherEvent;\n        }\n        catch (e) {\n            throw { type: 'MessageParseError', error: e, data: messageEvent.data };\n        }\n    },\n    encodeMessage: function (event) {\n        return JSON.stringify(event);\n    },\n    processHandshake: function (messageEvent) {\n        var message = Protocol.decodeMessage(messageEvent);\n        if (message.event === 'pusher:connection_established') {\n            if (!message.data.activity_timeout) {\n                throw 'No activity timeout specified in handshake';\n            }\n            return {\n                action: 'connected',\n                id: message.data.socket_id,\n                activityTimeout: message.data.activity_timeout * 1000\n            };\n        }\n        else if (message.event === 'pusher:error') {\n            return {\n                action: this.getCloseAction(message.data),\n                error: this.getCloseError(message.data)\n            };\n        }\n        else {\n            throw 'Invalid handshake';\n        }\n    },\n    getCloseAction: function (closeEvent) {\n        if (closeEvent.code < 4000) {\n            if (closeEvent.code >= 1002 && closeEvent.code <= 1004) {\n                return 'backoff';\n            }\n            else {\n                return null;\n            }\n        }\n        else if (closeEvent.code === 4000) {\n            return 'tls_only';\n        }\n        else if (closeEvent.code < 4100) {\n            return 'refused';\n        }\n        else if (closeEvent.code < 4200) {\n            return 'backoff';\n        }\n        else if (closeEvent.code < 4300) {\n            return 'retry';\n        }\n        else {\n            return 'refused';\n        }\n    },\n    getCloseError: function (closeEvent) {\n        if (closeEvent.code !== 1000 && closeEvent.code !== 1001) {\n            return {\n                type: 'PusherError',\n                data: {\n                    code: closeEvent.code,\n                    message: closeEvent.reason || closeEvent.message\n                }\n            };\n        }\n        else {\n            return null;\n        }\n    }\n};\n/* harmony default export */ var protocol_protocol = (Protocol);\n\n// CONCATENATED MODULE: ./src/core/connection/connection.ts\nvar connection_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar connection_Connection = (function (_super) {\n    connection_extends(Connection, _super);\n    function Connection(id, transport) {\n        var _this = _super.call(this) || this;\n        _this.id = id;\n        _this.transport = transport;\n        _this.activityTimeout = transport.activityTimeout;\n        _this.bindListeners();\n        return _this;\n    }\n    Connection.prototype.handlesActivityChecks = function () {\n        return this.transport.handlesActivityChecks();\n    };\n    Connection.prototype.send = function (data) {\n        return this.transport.send(data);\n    };\n    Connection.prototype.send_event = function (name, data, channel) {\n        var event = { event: name, data: data };\n        if (channel) {\n            event.channel = channel;\n        }\n        logger.debug('Event sent', event);\n        return this.send(protocol_protocol.encodeMessage(event));\n    };\n    Connection.prototype.ping = function () {\n        if (this.transport.supportsPing()) {\n            this.transport.ping();\n        }\n        else {\n            this.send_event('pusher:ping', {});\n        }\n    };\n    Connection.prototype.close = function () {\n        this.transport.close();\n    };\n    Connection.prototype.bindListeners = function () {\n        var _this = this;\n        var listeners = {\n            message: function (messageEvent) {\n                var pusherEvent;\n                try {\n                    pusherEvent = protocol_protocol.decodeMessage(messageEvent);\n                }\n                catch (e) {\n                    _this.emit('error', {\n                        type: 'MessageParseError',\n                        error: e,\n                        data: messageEvent.data\n                    });\n                }\n                if (pusherEvent !== undefined) {\n                    logger.debug('Event recd', pusherEvent);\n                    switch (pusherEvent.event) {\n                        case 'pusher:error':\n                            _this.emit('error', {\n                                type: 'PusherError',\n                                data: pusherEvent.data\n                            });\n                            break;\n                        case 'pusher:ping':\n                            _this.emit('ping');\n                            break;\n                        case 'pusher:pong':\n                            _this.emit('pong');\n                            break;\n                    }\n                    _this.emit('message', pusherEvent);\n                }\n            },\n            activity: function () {\n                _this.emit('activity');\n            },\n            error: function (error) {\n                _this.emit('error', error);\n            },\n            closed: function (closeEvent) {\n                unbindListeners();\n                if (closeEvent && closeEvent.code) {\n                    _this.handleCloseEvent(closeEvent);\n                }\n                _this.transport = null;\n                _this.emit('closed');\n            }\n        };\n        var unbindListeners = function () {\n            objectApply(listeners, function (listener, event) {\n                _this.transport.unbind(event, listener);\n            });\n        };\n        objectApply(listeners, function (listener, event) {\n            _this.transport.bind(event, listener);\n        });\n    };\n    Connection.prototype.handleCloseEvent = function (closeEvent) {\n        var action = protocol_protocol.getCloseAction(closeEvent);\n        var error = protocol_protocol.getCloseError(closeEvent);\n        if (error) {\n            this.emit('error', error);\n        }\n        if (action) {\n            this.emit(action, { action: action, error: error });\n        }\n    };\n    return Connection;\n}(dispatcher));\n/* harmony default export */ var connection_connection = (connection_Connection);\n\n// CONCATENATED MODULE: ./src/core/connection/handshake/index.ts\n\n\n\nvar handshake_Handshake = (function () {\n    function Handshake(transport, callback) {\n        this.transport = transport;\n        this.callback = callback;\n        this.bindListeners();\n    }\n    Handshake.prototype.close = function () {\n        this.unbindListeners();\n        this.transport.close();\n    };\n    Handshake.prototype.bindListeners = function () {\n        var _this = this;\n        this.onMessage = function (m) {\n            _this.unbindListeners();\n            var result;\n            try {\n                result = protocol_protocol.processHandshake(m);\n            }\n            catch (e) {\n                _this.finish('error', { error: e });\n                _this.transport.close();\n                return;\n            }\n            if (result.action === 'connected') {\n                _this.finish('connected', {\n                    connection: new connection_connection(result.id, _this.transport),\n                    activityTimeout: result.activityTimeout\n                });\n            }\n            else {\n                _this.finish(result.action, { error: result.error });\n                _this.transport.close();\n            }\n        };\n        this.onClosed = function (closeEvent) {\n            _this.unbindListeners();\n            var action = protocol_protocol.getCloseAction(closeEvent) || 'backoff';\n            var error = protocol_protocol.getCloseError(closeEvent);\n            _this.finish(action, { error: error });\n        };\n        this.transport.bind('message', this.onMessage);\n        this.transport.bind('closed', this.onClosed);\n    };\n    Handshake.prototype.unbindListeners = function () {\n        this.transport.unbind('message', this.onMessage);\n        this.transport.unbind('closed', this.onClosed);\n    };\n    Handshake.prototype.finish = function (action, params) {\n        this.callback(extend({ transport: this.transport, action: action }, params));\n    };\n    return Handshake;\n}());\n/* harmony default export */ var connection_handshake = (handshake_Handshake);\n\n// CONCATENATED MODULE: ./src/core/auth/pusher_authorizer.ts\n\nvar pusher_authorizer_PusherAuthorizer = (function () {\n    function PusherAuthorizer(channel, options) {\n        this.channel = channel;\n        var authTransport = options.authTransport;\n        if (typeof runtime.getAuthorizers()[authTransport] === 'undefined') {\n            throw \"'\" + authTransport + \"' is not a recognized auth transport\";\n        }\n        this.type = authTransport;\n        this.options = options;\n        this.authOptions = options.auth || {};\n    }\n    PusherAuthorizer.prototype.composeQuery = function (socketId) {\n        var query = 'socket_id=' +\n            encodeURIComponent(socketId) +\n            '&channel_name=' +\n            encodeURIComponent(this.channel.name);\n        for (var i in this.authOptions.params) {\n            query +=\n                '&' +\n                    encodeURIComponent(i) +\n                    '=' +\n                    encodeURIComponent(this.authOptions.params[i]);\n        }\n        return query;\n    };\n    PusherAuthorizer.prototype.authorize = function (socketId, callback) {\n        PusherAuthorizer.authorizers =\n            PusherAuthorizer.authorizers || runtime.getAuthorizers();\n        PusherAuthorizer.authorizers[this.type].call(this, runtime, socketId, callback);\n    };\n    return PusherAuthorizer;\n}());\n/* harmony default export */ var pusher_authorizer = (pusher_authorizer_PusherAuthorizer);\n\n// CONCATENATED MODULE: ./src/core/timeline/timeline_sender.ts\n\nvar timeline_sender_TimelineSender = (function () {\n    function TimelineSender(timeline, options) {\n        this.timeline = timeline;\n        this.options = options || {};\n    }\n    TimelineSender.prototype.send = function (useTLS, callback) {\n        if (this.timeline.isEmpty()) {\n            return;\n        }\n        this.timeline.send(runtime.TimelineTransport.getAgent(this, useTLS), callback);\n    };\n    return TimelineSender;\n}());\n/* harmony default export */ var timeline_sender = (timeline_sender_TimelineSender);\n\n// CONCATENATED MODULE: ./src/core/channels/channel.ts\nvar channel_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar channel_Channel = (function (_super) {\n    channel_extends(Channel, _super);\n    function Channel(name, pusher) {\n        var _this = _super.call(this, function (event, data) {\n            logger.debug('No callbacks on ' + name + ' for ' + event);\n        }) || this;\n        _this.name = name;\n        _this.pusher = pusher;\n        _this.subscribed = false;\n        _this.subscriptionPending = false;\n        _this.subscriptionCancelled = false;\n        return _this;\n    }\n    Channel.prototype.authorize = function (socketId, callback) {\n        return callback(null, { auth: '' });\n    };\n    Channel.prototype.trigger = function (event, data) {\n        if (event.indexOf('client-') !== 0) {\n            throw new BadEventName(\"Event '\" + event + \"' does not start with 'client-'\");\n        }\n        if (!this.subscribed) {\n            var suffix = url_store.buildLogSuffix('triggeringClientEvents');\n            logger.warn(\"Client event triggered before channel 'subscription_succeeded' event . \" + suffix);\n        }\n        return this.pusher.send_event(event, data, this.name);\n    };\n    Channel.prototype.disconnect = function () {\n        this.subscribed = false;\n        this.subscriptionPending = false;\n    };\n    Channel.prototype.handleEvent = function (event) {\n        var eventName = event.event;\n        var data = event.data;\n        if (eventName === 'pusher_internal:subscription_succeeded') {\n            this.handleSubscriptionSucceededEvent(event);\n        }\n        else if (eventName.indexOf('pusher_internal:') !== 0) {\n            var metadata = {};\n            this.emit(eventName, data, metadata);\n        }\n    };\n    Channel.prototype.handleSubscriptionSucceededEvent = function (event) {\n        this.subscriptionPending = false;\n        this.subscribed = true;\n        if (this.subscriptionCancelled) {\n            this.pusher.unsubscribe(this.name);\n        }\n        else {\n            this.emit('pusher:subscription_succeeded', event.data);\n        }\n    };\n    Channel.prototype.subscribe = function () {\n        var _this = this;\n        if (this.subscribed) {\n            return;\n        }\n        this.subscriptionPending = true;\n        this.subscriptionCancelled = false;\n        this.authorize(this.pusher.connection.socket_id, function (error, data) {\n            if (error) {\n                _this.subscriptionPending = false;\n                logger.error(error.toString());\n                _this.emit('pusher:subscription_error', Object.assign({}, {\n                    type: 'AuthError',\n                    error: error.message\n                }, error instanceof HTTPAuthError ? { status: error.status } : {}));\n            }\n            else {\n                _this.pusher.send_event('pusher:subscribe', {\n                    auth: data.auth,\n                    channel_data: data.channel_data,\n                    channel: _this.name\n                });\n            }\n        });\n    };\n    Channel.prototype.unsubscribe = function () {\n        this.subscribed = false;\n        this.pusher.send_event('pusher:unsubscribe', {\n            channel: this.name\n        });\n    };\n    Channel.prototype.cancelSubscription = function () {\n        this.subscriptionCancelled = true;\n    };\n    Channel.prototype.reinstateSubscription = function () {\n        this.subscriptionCancelled = false;\n    };\n    return Channel;\n}(dispatcher));\n/* harmony default export */ var channels_channel = (channel_Channel);\n\n// CONCATENATED MODULE: ./src/core/channels/private_channel.ts\nvar private_channel_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar private_channel_PrivateChannel = (function (_super) {\n    private_channel_extends(PrivateChannel, _super);\n    function PrivateChannel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PrivateChannel.prototype.authorize = function (socketId, callback) {\n        var authorizer = factory.createAuthorizer(this, this.pusher.config);\n        return authorizer.authorize(socketId, callback);\n    };\n    return PrivateChannel;\n}(channels_channel));\n/* harmony default export */ var private_channel = (private_channel_PrivateChannel);\n\n// CONCATENATED MODULE: ./src/core/channels/members.ts\n\nvar members_Members = (function () {\n    function Members() {\n        this.reset();\n    }\n    Members.prototype.get = function (id) {\n        if (Object.prototype.hasOwnProperty.call(this.members, id)) {\n            return {\n                id: id,\n                info: this.members[id]\n            };\n        }\n        else {\n            return null;\n        }\n    };\n    Members.prototype.each = function (callback) {\n        var _this = this;\n        objectApply(this.members, function (member, id) {\n            callback(_this.get(id));\n        });\n    };\n    Members.prototype.setMyID = function (id) {\n        this.myID = id;\n    };\n    Members.prototype.onSubscription = function (subscriptionData) {\n        this.members = subscriptionData.presence.hash;\n        this.count = subscriptionData.presence.count;\n        this.me = this.get(this.myID);\n    };\n    Members.prototype.addMember = function (memberData) {\n        if (this.get(memberData.user_id) === null) {\n            this.count++;\n        }\n        this.members[memberData.user_id] = memberData.user_info;\n        return this.get(memberData.user_id);\n    };\n    Members.prototype.removeMember = function (memberData) {\n        var member = this.get(memberData.user_id);\n        if (member) {\n            delete this.members[memberData.user_id];\n            this.count--;\n        }\n        return member;\n    };\n    Members.prototype.reset = function () {\n        this.members = {};\n        this.count = 0;\n        this.myID = null;\n        this.me = null;\n    };\n    return Members;\n}());\n/* harmony default export */ var members = (members_Members);\n\n// CONCATENATED MODULE: ./src/core/channels/presence_channel.ts\nvar presence_channel_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar presence_channel_PresenceChannel = (function (_super) {\n    presence_channel_extends(PresenceChannel, _super);\n    function PresenceChannel(name, pusher) {\n        var _this = _super.call(this, name, pusher) || this;\n        _this.members = new members();\n        return _this;\n    }\n    PresenceChannel.prototype.authorize = function (socketId, callback) {\n        var _this = this;\n        _super.prototype.authorize.call(this, socketId, function (error, authData) {\n            if (!error) {\n                authData = authData;\n                if (authData.channel_data === undefined) {\n                    var suffix = url_store.buildLogSuffix('authenticationEndpoint');\n                    logger.error(\"Invalid auth response for channel '\" + _this.name + \"',\" +\n                        (\"expected 'channel_data' field. \" + suffix));\n                    callback('Invalid auth response');\n                    return;\n                }\n                var channelData = JSON.parse(authData.channel_data);\n                _this.members.setMyID(channelData.user_id);\n            }\n            callback(error, authData);\n        });\n    };\n    PresenceChannel.prototype.handleEvent = function (event) {\n        var eventName = event.event;\n        if (eventName.indexOf('pusher_internal:') === 0) {\n            this.handleInternalEvent(event);\n        }\n        else {\n            var data = event.data;\n            var metadata = {};\n            if (event.user_id) {\n                metadata.user_id = event.user_id;\n            }\n            this.emit(eventName, data, metadata);\n        }\n    };\n    PresenceChannel.prototype.handleInternalEvent = function (event) {\n        var eventName = event.event;\n        var data = event.data;\n        switch (eventName) {\n            case 'pusher_internal:subscription_succeeded':\n                this.handleSubscriptionSucceededEvent(event);\n                break;\n            case 'pusher_internal:member_added':\n                var addedMember = this.members.addMember(data);\n                this.emit('pusher:member_added', addedMember);\n                break;\n            case 'pusher_internal:member_removed':\n                var removedMember = this.members.removeMember(data);\n                if (removedMember) {\n                    this.emit('pusher:member_removed', removedMember);\n                }\n                break;\n        }\n    };\n    PresenceChannel.prototype.handleSubscriptionSucceededEvent = function (event) {\n        this.subscriptionPending = false;\n        this.subscribed = true;\n        if (this.subscriptionCancelled) {\n            this.pusher.unsubscribe(this.name);\n        }\n        else {\n            this.members.onSubscription(event.data);\n            this.emit('pusher:subscription_succeeded', this.members);\n        }\n    };\n    PresenceChannel.prototype.disconnect = function () {\n        this.members.reset();\n        _super.prototype.disconnect.call(this);\n    };\n    return PresenceChannel;\n}(private_channel));\n/* harmony default export */ var presence_channel = (presence_channel_PresenceChannel);\n\n// EXTERNAL MODULE: ./node_modules/@stablelib/utf8/lib/utf8.js\nvar utf8 = __nested_webpack_require_20171__(1);\n\n// EXTERNAL MODULE: ./node_modules/@stablelib/base64/lib/base64.js\nvar base64 = __nested_webpack_require_20171__(0);\n\n// CONCATENATED MODULE: ./src/core/channels/encrypted_channel.ts\nvar encrypted_channel_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar encrypted_channel_EncryptedChannel = (function (_super) {\n    encrypted_channel_extends(EncryptedChannel, _super);\n    function EncryptedChannel(name, pusher, nacl) {\n        var _this = _super.call(this, name, pusher) || this;\n        _this.key = null;\n        _this.nacl = nacl;\n        return _this;\n    }\n    EncryptedChannel.prototype.authorize = function (socketId, callback) {\n        var _this = this;\n        _super.prototype.authorize.call(this, socketId, function (error, authData) {\n            if (error) {\n                callback(error, authData);\n                return;\n            }\n            var sharedSecret = authData['shared_secret'];\n            if (!sharedSecret) {\n                callback(new Error(\"No shared_secret key in auth payload for encrypted channel: \" + _this.name), null);\n                return;\n            }\n            _this.key = Object(base64[\"decode\"])(sharedSecret);\n            delete authData['shared_secret'];\n            callback(null, authData);\n        });\n    };\n    EncryptedChannel.prototype.trigger = function (event, data) {\n        throw new UnsupportedFeature('Client events are not currently supported for encrypted channels');\n    };\n    EncryptedChannel.prototype.handleEvent = function (event) {\n        var eventName = event.event;\n        var data = event.data;\n        if (eventName.indexOf('pusher_internal:') === 0 ||\n            eventName.indexOf('pusher:') === 0) {\n            _super.prototype.handleEvent.call(this, event);\n            return;\n        }\n        this.handleEncryptedEvent(eventName, data);\n    };\n    EncryptedChannel.prototype.handleEncryptedEvent = function (event, data) {\n        var _this = this;\n        if (!this.key) {\n            logger.debug('Received encrypted event before key has been retrieved from the authEndpoint');\n            return;\n        }\n        if (!data.ciphertext || !data.nonce) {\n            logger.error('Unexpected format for encrypted event, expected object with `ciphertext` and `nonce` fields, got: ' +\n                data);\n            return;\n        }\n        var cipherText = Object(base64[\"decode\"])(data.ciphertext);\n        if (cipherText.length < this.nacl.secretbox.overheadLength) {\n            logger.error(\"Expected encrypted event ciphertext length to be \" + this.nacl.secretbox.overheadLength + \", got: \" + cipherText.length);\n            return;\n        }\n        var nonce = Object(base64[\"decode\"])(data.nonce);\n        if (nonce.length < this.nacl.secretbox.nonceLength) {\n            logger.error(\"Expected encrypted event nonce length to be \" + this.nacl.secretbox.nonceLength + \", got: \" + nonce.length);\n            return;\n        }\n        var bytes = this.nacl.secretbox.open(cipherText, nonce, this.key);\n        if (bytes === null) {\n            logger.debug('Failed to decrypt an event, probably because it was encrypted with a different key. Fetching a new key from the authEndpoint...');\n            this.authorize(this.pusher.connection.socket_id, function (error, authData) {\n                if (error) {\n                    logger.error(\"Failed to make a request to the authEndpoint: \" + authData + \". Unable to fetch new key, so dropping encrypted event\");\n                    return;\n                }\n                bytes = _this.nacl.secretbox.open(cipherText, nonce, _this.key);\n                if (bytes === null) {\n                    logger.error(\"Failed to decrypt event with new key. Dropping encrypted event\");\n                    return;\n                }\n                _this.emit(event, _this.getDataToEmit(bytes));\n                return;\n            });\n            return;\n        }\n        this.emit(event, this.getDataToEmit(bytes));\n    };\n    EncryptedChannel.prototype.getDataToEmit = function (bytes) {\n        var raw = Object(utf8[\"decode\"])(bytes);\n        try {\n            return JSON.parse(raw);\n        }\n        catch (_a) {\n            return raw;\n        }\n    };\n    return EncryptedChannel;\n}(private_channel));\n/* harmony default export */ var encrypted_channel = (encrypted_channel_EncryptedChannel);\n\n// CONCATENATED MODULE: ./src/core/connection/connection_manager.ts\nvar connection_manager_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar connection_manager_ConnectionManager = (function (_super) {\n    connection_manager_extends(ConnectionManager, _super);\n    function ConnectionManager(key, options) {\n        var _this = _super.call(this) || this;\n        _this.state = 'initialized';\n        _this.connection = null;\n        _this.key = key;\n        _this.options = options;\n        _this.timeline = _this.options.timeline;\n        _this.usingTLS = _this.options.useTLS;\n        _this.errorCallbacks = _this.buildErrorCallbacks();\n        _this.connectionCallbacks = _this.buildConnectionCallbacks(_this.errorCallbacks);\n        _this.handshakeCallbacks = _this.buildHandshakeCallbacks(_this.errorCallbacks);\n        var Network = runtime.getNetwork();\n        Network.bind('online', function () {\n            _this.timeline.info({ netinfo: 'online' });\n            if (_this.state === 'connecting' || _this.state === 'unavailable') {\n                _this.retryIn(0);\n            }\n        });\n        Network.bind('offline', function () {\n            _this.timeline.info({ netinfo: 'offline' });\n            if (_this.connection) {\n                _this.sendActivityCheck();\n            }\n        });\n        _this.updateStrategy();\n        return _this;\n    }\n    ConnectionManager.prototype.connect = function () {\n        if (this.connection || this.runner) {\n            return;\n        }\n        if (!this.strategy.isSupported()) {\n            this.updateState('failed');\n            return;\n        }\n        this.updateState('connecting');\n        this.startConnecting();\n        this.setUnavailableTimer();\n    };\n    ConnectionManager.prototype.send = function (data) {\n        if (this.connection) {\n            return this.connection.send(data);\n        }\n        else {\n            return false;\n        }\n    };\n    ConnectionManager.prototype.send_event = function (name, data, channel) {\n        if (this.connection) {\n            return this.connection.send_event(name, data, channel);\n        }\n        else {\n            return false;\n        }\n    };\n    ConnectionManager.prototype.disconnect = function () {\n        this.disconnectInternally();\n        this.updateState('disconnected');\n    };\n    ConnectionManager.prototype.isUsingTLS = function () {\n        return this.usingTLS;\n    };\n    ConnectionManager.prototype.startConnecting = function () {\n        var _this = this;\n        var callback = function (error, handshake) {\n            if (error) {\n                _this.runner = _this.strategy.connect(0, callback);\n            }\n            else {\n                if (handshake.action === 'error') {\n                    _this.emit('error', {\n                        type: 'HandshakeError',\n                        error: handshake.error\n                    });\n                    _this.timeline.error({ handshakeError: handshake.error });\n                }\n                else {\n                    _this.abortConnecting();\n                    _this.handshakeCallbacks[handshake.action](handshake);\n                }\n            }\n        };\n        this.runner = this.strategy.connect(0, callback);\n    };\n    ConnectionManager.prototype.abortConnecting = function () {\n        if (this.runner) {\n            this.runner.abort();\n            this.runner = null;\n        }\n    };\n    ConnectionManager.prototype.disconnectInternally = function () {\n        this.abortConnecting();\n        this.clearRetryTimer();\n        this.clearUnavailableTimer();\n        if (this.connection) {\n            var connection = this.abandonConnection();\n            connection.close();\n        }\n    };\n    ConnectionManager.prototype.updateStrategy = function () {\n        this.strategy = this.options.getStrategy({\n            key: this.key,\n            timeline: this.timeline,\n            useTLS: this.usingTLS\n        });\n    };\n    ConnectionManager.prototype.retryIn = function (delay) {\n        var _this = this;\n        this.timeline.info({ action: 'retry', delay: delay });\n        if (delay > 0) {\n            this.emit('connecting_in', Math.round(delay / 1000));\n        }\n        this.retryTimer = new OneOffTimer(delay || 0, function () {\n            _this.disconnectInternally();\n            _this.connect();\n        });\n    };\n    ConnectionManager.prototype.clearRetryTimer = function () {\n        if (this.retryTimer) {\n            this.retryTimer.ensureAborted();\n            this.retryTimer = null;\n        }\n    };\n    ConnectionManager.prototype.setUnavailableTimer = function () {\n        var _this = this;\n        this.unavailableTimer = new OneOffTimer(this.options.unavailableTimeout, function () {\n            _this.updateState('unavailable');\n        });\n    };\n    ConnectionManager.prototype.clearUnavailableTimer = function () {\n        if (this.unavailableTimer) {\n            this.unavailableTimer.ensureAborted();\n        }\n    };\n    ConnectionManager.prototype.sendActivityCheck = function () {\n        var _this = this;\n        this.stopActivityCheck();\n        this.connection.ping();\n        this.activityTimer = new OneOffTimer(this.options.pongTimeout, function () {\n            _this.timeline.error({ pong_timed_out: _this.options.pongTimeout });\n            _this.retryIn(0);\n        });\n    };\n    ConnectionManager.prototype.resetActivityCheck = function () {\n        var _this = this;\n        this.stopActivityCheck();\n        if (this.connection && !this.connection.handlesActivityChecks()) {\n            this.activityTimer = new OneOffTimer(this.activityTimeout, function () {\n                _this.sendActivityCheck();\n            });\n        }\n    };\n    ConnectionManager.prototype.stopActivityCheck = function () {\n        if (this.activityTimer) {\n            this.activityTimer.ensureAborted();\n        }\n    };\n    ConnectionManager.prototype.buildConnectionCallbacks = function (errorCallbacks) {\n        var _this = this;\n        return extend({}, errorCallbacks, {\n            message: function (message) {\n                _this.resetActivityCheck();\n                _this.emit('message', message);\n            },\n            ping: function () {\n                _this.send_event('pusher:pong', {});\n            },\n            activity: function () {\n                _this.resetActivityCheck();\n            },\n            error: function (error) {\n                _this.emit('error', error);\n            },\n            closed: function () {\n                _this.abandonConnection();\n                if (_this.shouldRetry()) {\n                    _this.retryIn(1000);\n                }\n            }\n        });\n    };\n    ConnectionManager.prototype.buildHandshakeCallbacks = function (errorCallbacks) {\n        var _this = this;\n        return extend({}, errorCallbacks, {\n            connected: function (handshake) {\n                _this.activityTimeout = Math.min(_this.options.activityTimeout, handshake.activityTimeout, handshake.connection.activityTimeout || Infinity);\n                _this.clearUnavailableTimer();\n                _this.setConnection(handshake.connection);\n                _this.socket_id = _this.connection.id;\n                _this.updateState('connected', { socket_id: _this.socket_id });\n            }\n        });\n    };\n    ConnectionManager.prototype.buildErrorCallbacks = function () {\n        var _this = this;\n        var withErrorEmitted = function (callback) {\n            return function (result) {\n                if (result.error) {\n                    _this.emit('error', { type: 'WebSocketError', error: result.error });\n                }\n                callback(result);\n            };\n        };\n        return {\n            tls_only: withErrorEmitted(function () {\n                _this.usingTLS = true;\n                _this.updateStrategy();\n                _this.retryIn(0);\n            }),\n            refused: withErrorEmitted(function () {\n                _this.disconnect();\n            }),\n            backoff: withErrorEmitted(function () {\n                _this.retryIn(1000);\n            }),\n            retry: withErrorEmitted(function () {\n                _this.retryIn(0);\n            })\n        };\n    };\n    ConnectionManager.prototype.setConnection = function (connection) {\n        this.connection = connection;\n        for (var event in this.connectionCallbacks) {\n            this.connection.bind(event, this.connectionCallbacks[event]);\n        }\n        this.resetActivityCheck();\n    };\n    ConnectionManager.prototype.abandonConnection = function () {\n        if (!this.connection) {\n            return;\n        }\n        this.stopActivityCheck();\n        for (var event in this.connectionCallbacks) {\n            this.connection.unbind(event, this.connectionCallbacks[event]);\n        }\n        var connection = this.connection;\n        this.connection = null;\n        return connection;\n    };\n    ConnectionManager.prototype.updateState = function (newState, data) {\n        var previousState = this.state;\n        this.state = newState;\n        if (previousState !== newState) {\n            var newStateDescription = newState;\n            if (newStateDescription === 'connected') {\n                newStateDescription += ' with new socket ID ' + data.socket_id;\n            }\n            logger.debug('State changed', previousState + ' -> ' + newStateDescription);\n            this.timeline.info({ state: newState, params: data });\n            this.emit('state_change', { previous: previousState, current: newState });\n            this.emit(newState, data);\n        }\n    };\n    ConnectionManager.prototype.shouldRetry = function () {\n        return this.state === 'connecting' || this.state === 'connected';\n    };\n    return ConnectionManager;\n}(dispatcher));\n/* harmony default export */ var connection_manager = (connection_manager_ConnectionManager);\n\n// CONCATENATED MODULE: ./src/core/channels/channels.ts\n\n\n\n\nvar channels_Channels = (function () {\n    function Channels() {\n        this.channels = {};\n    }\n    Channels.prototype.add = function (name, pusher) {\n        if (!this.channels[name]) {\n            this.channels[name] = createChannel(name, pusher);\n        }\n        return this.channels[name];\n    };\n    Channels.prototype.all = function () {\n        return values(this.channels);\n    };\n    Channels.prototype.find = function (name) {\n        return this.channels[name];\n    };\n    Channels.prototype.remove = function (name) {\n        var channel = this.channels[name];\n        delete this.channels[name];\n        return channel;\n    };\n    Channels.prototype.disconnect = function () {\n        objectApply(this.channels, function (channel) {\n            channel.disconnect();\n        });\n    };\n    return Channels;\n}());\n/* harmony default export */ var channels = (channels_Channels);\nfunction createChannel(name, pusher) {\n    if (name.indexOf('private-encrypted-') === 0) {\n        if (pusher.config.nacl) {\n            return factory.createEncryptedChannel(name, pusher, pusher.config.nacl);\n        }\n        var errMsg = 'Tried to subscribe to a private-encrypted- channel but no nacl implementation available';\n        var suffix = url_store.buildLogSuffix('encryptedChannelSupport');\n        throw new UnsupportedFeature(errMsg + \". \" + suffix);\n    }\n    else if (name.indexOf('private-') === 0) {\n        return factory.createPrivateChannel(name, pusher);\n    }\n    else if (name.indexOf('presence-') === 0) {\n        return factory.createPresenceChannel(name, pusher);\n    }\n    else {\n        return factory.createChannel(name, pusher);\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/utils/factory.ts\n\n\n\n\n\n\n\n\n\n\nvar Factory = {\n    createChannels: function () {\n        return new channels();\n    },\n    createConnectionManager: function (key, options) {\n        return new connection_manager(key, options);\n    },\n    createChannel: function (name, pusher) {\n        return new channels_channel(name, pusher);\n    },\n    createPrivateChannel: function (name, pusher) {\n        return new private_channel(name, pusher);\n    },\n    createPresenceChannel: function (name, pusher) {\n        return new presence_channel(name, pusher);\n    },\n    createEncryptedChannel: function (name, pusher, nacl) {\n        return new encrypted_channel(name, pusher, nacl);\n    },\n    createTimelineSender: function (timeline, options) {\n        return new timeline_sender(timeline, options);\n    },\n    createAuthorizer: function (channel, options) {\n        if (options.authorizer) {\n            return options.authorizer(channel, options);\n        }\n        return new pusher_authorizer(channel, options);\n    },\n    createHandshake: function (transport, callback) {\n        return new connection_handshake(transport, callback);\n    },\n    createAssistantToTheTransportManager: function (manager, transport, options) {\n        return new assistant_to_the_transport_manager(manager, transport, options);\n    }\n};\n/* harmony default export */ var factory = (Factory);\n\n// CONCATENATED MODULE: ./src/core/transports/transport_manager.ts\n\nvar transport_manager_TransportManager = (function () {\n    function TransportManager(options) {\n        this.options = options || {};\n        this.livesLeft = this.options.lives || Infinity;\n    }\n    TransportManager.prototype.getAssistant = function (transport) {\n        return factory.createAssistantToTheTransportManager(this, transport, {\n            minPingDelay: this.options.minPingDelay,\n            maxPingDelay: this.options.maxPingDelay\n        });\n    };\n    TransportManager.prototype.isAlive = function () {\n        return this.livesLeft > 0;\n    };\n    TransportManager.prototype.reportDeath = function () {\n        this.livesLeft -= 1;\n    };\n    return TransportManager;\n}());\n/* harmony default export */ var transport_manager = (transport_manager_TransportManager);\n\n// CONCATENATED MODULE: ./src/core/strategies/sequential_strategy.ts\n\n\n\nvar sequential_strategy_SequentialStrategy = (function () {\n    function SequentialStrategy(strategies, options) {\n        this.strategies = strategies;\n        this.loop = Boolean(options.loop);\n        this.failFast = Boolean(options.failFast);\n        this.timeout = options.timeout;\n        this.timeoutLimit = options.timeoutLimit;\n    }\n    SequentialStrategy.prototype.isSupported = function () {\n        return any(this.strategies, util.method('isSupported'));\n    };\n    SequentialStrategy.prototype.connect = function (minPriority, callback) {\n        var _this = this;\n        var strategies = this.strategies;\n        var current = 0;\n        var timeout = this.timeout;\n        var runner = null;\n        var tryNextStrategy = function (error, handshake) {\n            if (handshake) {\n                callback(null, handshake);\n            }\n            else {\n                current = current + 1;\n                if (_this.loop) {\n                    current = current % strategies.length;\n                }\n                if (current < strategies.length) {\n                    if (timeout) {\n                        timeout = timeout * 2;\n                        if (_this.timeoutLimit) {\n                            timeout = Math.min(timeout, _this.timeoutLimit);\n                        }\n                    }\n                    runner = _this.tryStrategy(strategies[current], minPriority, { timeout: timeout, failFast: _this.failFast }, tryNextStrategy);\n                }\n                else {\n                    callback(true);\n                }\n            }\n        };\n        runner = this.tryStrategy(strategies[current], minPriority, { timeout: timeout, failFast: this.failFast }, tryNextStrategy);\n        return {\n            abort: function () {\n                runner.abort();\n            },\n            forceMinPriority: function (p) {\n                minPriority = p;\n                if (runner) {\n                    runner.forceMinPriority(p);\n                }\n            }\n        };\n    };\n    SequentialStrategy.prototype.tryStrategy = function (strategy, minPriority, options, callback) {\n        var timer = null;\n        var runner = null;\n        if (options.timeout > 0) {\n            timer = new OneOffTimer(options.timeout, function () {\n                runner.abort();\n                callback(true);\n            });\n        }\n        runner = strategy.connect(minPriority, function (error, handshake) {\n            if (error && timer && timer.isRunning() && !options.failFast) {\n                return;\n            }\n            if (timer) {\n                timer.ensureAborted();\n            }\n            callback(error, handshake);\n        });\n        return {\n            abort: function () {\n                if (timer) {\n                    timer.ensureAborted();\n                }\n                runner.abort();\n            },\n            forceMinPriority: function (p) {\n                runner.forceMinPriority(p);\n            }\n        };\n    };\n    return SequentialStrategy;\n}());\n/* harmony default export */ var sequential_strategy = (sequential_strategy_SequentialStrategy);\n\n// CONCATENATED MODULE: ./src/core/strategies/best_connected_ever_strategy.ts\n\n\nvar best_connected_ever_strategy_BestConnectedEverStrategy = (function () {\n    function BestConnectedEverStrategy(strategies) {\n        this.strategies = strategies;\n    }\n    BestConnectedEverStrategy.prototype.isSupported = function () {\n        return any(this.strategies, util.method('isSupported'));\n    };\n    BestConnectedEverStrategy.prototype.connect = function (minPriority, callback) {\n        return connect(this.strategies, minPriority, function (i, runners) {\n            return function (error, handshake) {\n                runners[i].error = error;\n                if (error) {\n                    if (allRunnersFailed(runners)) {\n                        callback(true);\n                    }\n                    return;\n                }\n                apply(runners, function (runner) {\n                    runner.forceMinPriority(handshake.transport.priority);\n                });\n                callback(null, handshake);\n            };\n        });\n    };\n    return BestConnectedEverStrategy;\n}());\n/* harmony default export */ var best_connected_ever_strategy = (best_connected_ever_strategy_BestConnectedEverStrategy);\nfunction connect(strategies, minPriority, callbackBuilder) {\n    var runners = map(strategies, function (strategy, i, _, rs) {\n        return strategy.connect(minPriority, callbackBuilder(i, rs));\n    });\n    return {\n        abort: function () {\n            apply(runners, abortRunner);\n        },\n        forceMinPriority: function (p) {\n            apply(runners, function (runner) {\n                runner.forceMinPriority(p);\n            });\n        }\n    };\n}\nfunction allRunnersFailed(runners) {\n    return collections_all(runners, function (runner) {\n        return Boolean(runner.error);\n    });\n}\nfunction abortRunner(runner) {\n    if (!runner.error && !runner.aborted) {\n        runner.abort();\n        runner.aborted = true;\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/strategies/cached_strategy.ts\n\n\n\n\nvar cached_strategy_CachedStrategy = (function () {\n    function CachedStrategy(strategy, transports, options) {\n        this.strategy = strategy;\n        this.transports = transports;\n        this.ttl = options.ttl || 1800 * 1000;\n        this.usingTLS = options.useTLS;\n        this.timeline = options.timeline;\n    }\n    CachedStrategy.prototype.isSupported = function () {\n        return this.strategy.isSupported();\n    };\n    CachedStrategy.prototype.connect = function (minPriority, callback) {\n        var usingTLS = this.usingTLS;\n        var info = fetchTransportCache(usingTLS);\n        var strategies = [this.strategy];\n        if (info && info.timestamp + this.ttl >= util.now()) {\n            var transport = this.transports[info.transport];\n            if (transport) {\n                this.timeline.info({\n                    cached: true,\n                    transport: info.transport,\n                    latency: info.latency\n                });\n                strategies.push(new sequential_strategy([transport], {\n                    timeout: info.latency * 2 + 1000,\n                    failFast: true\n                }));\n            }\n        }\n        var startTimestamp = util.now();\n        var runner = strategies\n            .pop()\n            .connect(minPriority, function cb(error, handshake) {\n            if (error) {\n                flushTransportCache(usingTLS);\n                if (strategies.length > 0) {\n                    startTimestamp = util.now();\n                    runner = strategies.pop().connect(minPriority, cb);\n                }\n                else {\n                    callback(error);\n                }\n            }\n            else {\n                storeTransportCache(usingTLS, handshake.transport.name, util.now() - startTimestamp);\n                callback(null, handshake);\n            }\n        });\n        return {\n            abort: function () {\n                runner.abort();\n            },\n            forceMinPriority: function (p) {\n                minPriority = p;\n                if (runner) {\n                    runner.forceMinPriority(p);\n                }\n            }\n        };\n    };\n    return CachedStrategy;\n}());\n/* harmony default export */ var cached_strategy = (cached_strategy_CachedStrategy);\nfunction getTransportCacheKey(usingTLS) {\n    return 'pusherTransport' + (usingTLS ? 'TLS' : 'NonTLS');\n}\nfunction fetchTransportCache(usingTLS) {\n    var storage = runtime.getLocalStorage();\n    if (storage) {\n        try {\n            var serializedCache = storage[getTransportCacheKey(usingTLS)];\n            if (serializedCache) {\n                return JSON.parse(serializedCache);\n            }\n        }\n        catch (e) {\n            flushTransportCache(usingTLS);\n        }\n    }\n    return null;\n}\nfunction storeTransportCache(usingTLS, transport, latency) {\n    var storage = runtime.getLocalStorage();\n    if (storage) {\n        try {\n            storage[getTransportCacheKey(usingTLS)] = safeJSONStringify({\n                timestamp: util.now(),\n                transport: transport,\n                latency: latency\n            });\n        }\n        catch (e) {\n        }\n    }\n}\nfunction flushTransportCache(usingTLS) {\n    var storage = runtime.getLocalStorage();\n    if (storage) {\n        try {\n            delete storage[getTransportCacheKey(usingTLS)];\n        }\n        catch (e) {\n        }\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/strategies/delayed_strategy.ts\n\nvar delayed_strategy_DelayedStrategy = (function () {\n    function DelayedStrategy(strategy, _a) {\n        var number = _a.delay;\n        this.strategy = strategy;\n        this.options = { delay: number };\n    }\n    DelayedStrategy.prototype.isSupported = function () {\n        return this.strategy.isSupported();\n    };\n    DelayedStrategy.prototype.connect = function (minPriority, callback) {\n        var strategy = this.strategy;\n        var runner;\n        var timer = new OneOffTimer(this.options.delay, function () {\n            runner = strategy.connect(minPriority, callback);\n        });\n        return {\n            abort: function () {\n                timer.ensureAborted();\n                if (runner) {\n                    runner.abort();\n                }\n            },\n            forceMinPriority: function (p) {\n                minPriority = p;\n                if (runner) {\n                    runner.forceMinPriority(p);\n                }\n            }\n        };\n    };\n    return DelayedStrategy;\n}());\n/* harmony default export */ var delayed_strategy = (delayed_strategy_DelayedStrategy);\n\n// CONCATENATED MODULE: ./src/core/strategies/if_strategy.ts\nvar IfStrategy = (function () {\n    function IfStrategy(test, trueBranch, falseBranch) {\n        this.test = test;\n        this.trueBranch = trueBranch;\n        this.falseBranch = falseBranch;\n    }\n    IfStrategy.prototype.isSupported = function () {\n        var branch = this.test() ? this.trueBranch : this.falseBranch;\n        return branch.isSupported();\n    };\n    IfStrategy.prototype.connect = function (minPriority, callback) {\n        var branch = this.test() ? this.trueBranch : this.falseBranch;\n        return branch.connect(minPriority, callback);\n    };\n    return IfStrategy;\n}());\n/* harmony default export */ var if_strategy = (IfStrategy);\n\n// CONCATENATED MODULE: ./src/core/strategies/first_connected_strategy.ts\nvar FirstConnectedStrategy = (function () {\n    function FirstConnectedStrategy(strategy) {\n        this.strategy = strategy;\n    }\n    FirstConnectedStrategy.prototype.isSupported = function () {\n        return this.strategy.isSupported();\n    };\n    FirstConnectedStrategy.prototype.connect = function (minPriority, callback) {\n        var runner = this.strategy.connect(minPriority, function (error, handshake) {\n            if (handshake) {\n                runner.abort();\n            }\n            callback(error, handshake);\n        });\n        return runner;\n    };\n    return FirstConnectedStrategy;\n}());\n/* harmony default export */ var first_connected_strategy = (FirstConnectedStrategy);\n\n// CONCATENATED MODULE: ./src/runtimes/web/default_strategy.ts\n\n\n\n\n\n\n\nfunction testSupportsStrategy(strategy) {\n    return function () {\n        return strategy.isSupported();\n    };\n}\nvar getDefaultStrategy = function (config, baseOptions, defineTransport) {\n    var definedTransports = {};\n    function defineTransportStrategy(name, type, priority, options, manager) {\n        var transport = defineTransport(config, name, type, priority, options, manager);\n        definedTransports[name] = transport;\n        return transport;\n    }\n    var ws_options = Object.assign({}, baseOptions, {\n        hostNonTLS: config.wsHost + ':' + config.wsPort,\n        hostTLS: config.wsHost + ':' + config.wssPort,\n        httpPath: config.wsPath\n    });\n    var wss_options = Object.assign({}, ws_options, {\n        useTLS: true\n    });\n    var sockjs_options = Object.assign({}, baseOptions, {\n        hostNonTLS: config.httpHost + ':' + config.httpPort,\n        hostTLS: config.httpHost + ':' + config.httpsPort,\n        httpPath: config.httpPath\n    });\n    var timeouts = {\n        loop: true,\n        timeout: 15000,\n        timeoutLimit: 60000\n    };\n    var ws_manager = new transport_manager({\n        lives: 2,\n        minPingDelay: 10000,\n        maxPingDelay: config.activityTimeout\n    });\n    var streaming_manager = new transport_manager({\n        lives: 2,\n        minPingDelay: 10000,\n        maxPingDelay: config.activityTimeout\n    });\n    var ws_transport = defineTransportStrategy('ws', 'ws', 3, ws_options, ws_manager);\n    var wss_transport = defineTransportStrategy('wss', 'ws', 3, wss_options, ws_manager);\n    var sockjs_transport = defineTransportStrategy('sockjs', 'sockjs', 1, sockjs_options);\n    var xhr_streaming_transport = defineTransportStrategy('xhr_streaming', 'xhr_streaming', 1, sockjs_options, streaming_manager);\n    var xdr_streaming_transport = defineTransportStrategy('xdr_streaming', 'xdr_streaming', 1, sockjs_options, streaming_manager);\n    var xhr_polling_transport = defineTransportStrategy('xhr_polling', 'xhr_polling', 1, sockjs_options);\n    var xdr_polling_transport = defineTransportStrategy('xdr_polling', 'xdr_polling', 1, sockjs_options);\n    var ws_loop = new sequential_strategy([ws_transport], timeouts);\n    var wss_loop = new sequential_strategy([wss_transport], timeouts);\n    var sockjs_loop = new sequential_strategy([sockjs_transport], timeouts);\n    var streaming_loop = new sequential_strategy([\n        new if_strategy(testSupportsStrategy(xhr_streaming_transport), xhr_streaming_transport, xdr_streaming_transport)\n    ], timeouts);\n    var polling_loop = new sequential_strategy([\n        new if_strategy(testSupportsStrategy(xhr_polling_transport), xhr_polling_transport, xdr_polling_transport)\n    ], timeouts);\n    var http_loop = new sequential_strategy([\n        new if_strategy(testSupportsStrategy(streaming_loop), new best_connected_ever_strategy([\n            streaming_loop,\n            new delayed_strategy(polling_loop, { delay: 4000 })\n        ]), polling_loop)\n    ], timeouts);\n    var http_fallback_loop = new if_strategy(testSupportsStrategy(http_loop), http_loop, sockjs_loop);\n    var wsStrategy;\n    if (baseOptions.useTLS) {\n        wsStrategy = new best_connected_ever_strategy([\n            ws_loop,\n            new delayed_strategy(http_fallback_loop, { delay: 2000 })\n        ]);\n    }\n    else {\n        wsStrategy = new best_connected_ever_strategy([\n            ws_loop,\n            new delayed_strategy(wss_loop, { delay: 2000 }),\n            new delayed_strategy(http_fallback_loop, { delay: 5000 })\n        ]);\n    }\n    return new cached_strategy(new first_connected_strategy(new if_strategy(testSupportsStrategy(ws_transport), wsStrategy, http_fallback_loop)), definedTransports, {\n        ttl: 1800000,\n        timeline: baseOptions.timeline,\n        useTLS: baseOptions.useTLS\n    });\n};\n/* harmony default export */ var default_strategy = (getDefaultStrategy);\n\n// CONCATENATED MODULE: ./src/runtimes/web/transports/transport_connection_initializer.ts\n\n/* harmony default export */ var transport_connection_initializer = (function () {\n    var self = this;\n    self.timeline.info(self.buildTimelineMessage({\n        transport: self.name + (self.options.useTLS ? 's' : '')\n    }));\n    if (self.hooks.isInitialized()) {\n        self.changeState('initialized');\n    }\n    else if (self.hooks.file) {\n        self.changeState('initializing');\n        Dependencies.load(self.hooks.file, { useTLS: self.options.useTLS }, function (error, callback) {\n            if (self.hooks.isInitialized()) {\n                self.changeState('initialized');\n                callback(true);\n            }\n            else {\n                if (error) {\n                    self.onError(error);\n                }\n                self.onClose();\n                callback(false);\n            }\n        });\n    }\n    else {\n        self.onClose();\n    }\n});\n\n// CONCATENATED MODULE: ./src/runtimes/web/http/http_xdomain_request.ts\n\nvar http_xdomain_request_hooks = {\n    getRequest: function (socket) {\n        var xdr = new window.XDomainRequest();\n        xdr.ontimeout = function () {\n            socket.emit('error', new RequestTimedOut());\n            socket.close();\n        };\n        xdr.onerror = function (e) {\n            socket.emit('error', e);\n            socket.close();\n        };\n        xdr.onprogress = function () {\n            if (xdr.responseText && xdr.responseText.length > 0) {\n                socket.onChunk(200, xdr.responseText);\n            }\n        };\n        xdr.onload = function () {\n            if (xdr.responseText && xdr.responseText.length > 0) {\n                socket.onChunk(200, xdr.responseText);\n            }\n            socket.emit('finished', 200);\n            socket.close();\n        };\n        return xdr;\n    },\n    abortRequest: function (xdr) {\n        xdr.ontimeout = xdr.onerror = xdr.onprogress = xdr.onload = null;\n        xdr.abort();\n    }\n};\n/* harmony default export */ var http_xdomain_request = (http_xdomain_request_hooks);\n\n// CONCATENATED MODULE: ./src/core/http/http_request.ts\nvar http_request_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar MAX_BUFFER_LENGTH = 256 * 1024;\nvar http_request_HTTPRequest = (function (_super) {\n    http_request_extends(HTTPRequest, _super);\n    function HTTPRequest(hooks, method, url) {\n        var _this = _super.call(this) || this;\n        _this.hooks = hooks;\n        _this.method = method;\n        _this.url = url;\n        return _this;\n    }\n    HTTPRequest.prototype.start = function (payload) {\n        var _this = this;\n        this.position = 0;\n        this.xhr = this.hooks.getRequest(this);\n        this.unloader = function () {\n            _this.close();\n        };\n        runtime.addUnloadListener(this.unloader);\n        this.xhr.open(this.method, this.url, true);\n        if (this.xhr.setRequestHeader) {\n            this.xhr.setRequestHeader('Content-Type', 'application/json');\n        }\n        this.xhr.send(payload);\n    };\n    HTTPRequest.prototype.close = function () {\n        if (this.unloader) {\n            runtime.removeUnloadListener(this.unloader);\n            this.unloader = null;\n        }\n        if (this.xhr) {\n            this.hooks.abortRequest(this.xhr);\n            this.xhr = null;\n        }\n    };\n    HTTPRequest.prototype.onChunk = function (status, data) {\n        while (true) {\n            var chunk = this.advanceBuffer(data);\n            if (chunk) {\n                this.emit('chunk', { status: status, data: chunk });\n            }\n            else {\n                break;\n            }\n        }\n        if (this.isBufferTooLong(data)) {\n            this.emit('buffer_too_long');\n        }\n    };\n    HTTPRequest.prototype.advanceBuffer = function (buffer) {\n        var unreadData = buffer.slice(this.position);\n        var endOfLinePosition = unreadData.indexOf('\\n');\n        if (endOfLinePosition !== -1) {\n            this.position += endOfLinePosition + 1;\n            return unreadData.slice(0, endOfLinePosition);\n        }\n        else {\n            return null;\n        }\n    };\n    HTTPRequest.prototype.isBufferTooLong = function (buffer) {\n        return this.position === buffer.length && buffer.length > MAX_BUFFER_LENGTH;\n    };\n    return HTTPRequest;\n}(dispatcher));\n/* harmony default export */ var http_request = (http_request_HTTPRequest);\n\n// CONCATENATED MODULE: ./src/core/http/state.ts\nvar State;\n(function (State) {\n    State[State[\"CONNECTING\"] = 0] = \"CONNECTING\";\n    State[State[\"OPEN\"] = 1] = \"OPEN\";\n    State[State[\"CLOSED\"] = 3] = \"CLOSED\";\n})(State || (State = {}));\n/* harmony default export */ var state = (State);\n\n// CONCATENATED MODULE: ./src/core/http/http_socket.ts\n\n\n\nvar autoIncrement = 1;\nvar http_socket_HTTPSocket = (function () {\n    function HTTPSocket(hooks, url) {\n        this.hooks = hooks;\n        this.session = randomNumber(1000) + '/' + randomString(8);\n        this.location = getLocation(url);\n        this.readyState = state.CONNECTING;\n        this.openStream();\n    }\n    HTTPSocket.prototype.send = function (payload) {\n        return this.sendRaw(JSON.stringify([payload]));\n    };\n    HTTPSocket.prototype.ping = function () {\n        this.hooks.sendHeartbeat(this);\n    };\n    HTTPSocket.prototype.close = function (code, reason) {\n        this.onClose(code, reason, true);\n    };\n    HTTPSocket.prototype.sendRaw = function (payload) {\n        if (this.readyState === state.OPEN) {\n            try {\n                runtime.createSocketRequest('POST', getUniqueURL(getSendURL(this.location, this.session))).start(payload);\n                return true;\n            }\n            catch (e) {\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    };\n    HTTPSocket.prototype.reconnect = function () {\n        this.closeStream();\n        this.openStream();\n    };\n    HTTPSocket.prototype.onClose = function (code, reason, wasClean) {\n        this.closeStream();\n        this.readyState = state.CLOSED;\n        if (this.onclose) {\n            this.onclose({\n                code: code,\n                reason: reason,\n                wasClean: wasClean\n            });\n        }\n    };\n    HTTPSocket.prototype.onChunk = function (chunk) {\n        if (chunk.status !== 200) {\n            return;\n        }\n        if (this.readyState === state.OPEN) {\n            this.onActivity();\n        }\n        var payload;\n        var type = chunk.data.slice(0, 1);\n        switch (type) {\n            case 'o':\n                payload = JSON.parse(chunk.data.slice(1) || '{}');\n                this.onOpen(payload);\n                break;\n            case 'a':\n                payload = JSON.parse(chunk.data.slice(1) || '[]');\n                for (var i = 0; i < payload.length; i++) {\n                    this.onEvent(payload[i]);\n                }\n                break;\n            case 'm':\n                payload = JSON.parse(chunk.data.slice(1) || 'null');\n                this.onEvent(payload);\n                break;\n            case 'h':\n                this.hooks.onHeartbeat(this);\n                break;\n            case 'c':\n                payload = JSON.parse(chunk.data.slice(1) || '[]');\n                this.onClose(payload[0], payload[1], true);\n                break;\n        }\n    };\n    HTTPSocket.prototype.onOpen = function (options) {\n        if (this.readyState === state.CONNECTING) {\n            if (options && options.hostname) {\n                this.location.base = replaceHost(this.location.base, options.hostname);\n            }\n            this.readyState = state.OPEN;\n            if (this.onopen) {\n                this.onopen();\n            }\n        }\n        else {\n            this.onClose(1006, 'Server lost session', true);\n        }\n    };\n    HTTPSocket.prototype.onEvent = function (event) {\n        if (this.readyState === state.OPEN && this.onmessage) {\n            this.onmessage({ data: event });\n        }\n    };\n    HTTPSocket.prototype.onActivity = function () {\n        if (this.onactivity) {\n            this.onactivity();\n        }\n    };\n    HTTPSocket.prototype.onError = function (error) {\n        if (this.onerror) {\n            this.onerror(error);\n        }\n    };\n    HTTPSocket.prototype.openStream = function () {\n        var _this = this;\n        this.stream = runtime.createSocketRequest('POST', getUniqueURL(this.hooks.getReceiveURL(this.location, this.session)));\n        this.stream.bind('chunk', function (chunk) {\n            _this.onChunk(chunk);\n        });\n        this.stream.bind('finished', function (status) {\n            _this.hooks.onFinished(_this, status);\n        });\n        this.stream.bind('buffer_too_long', function () {\n            _this.reconnect();\n        });\n        try {\n            this.stream.start();\n        }\n        catch (error) {\n            util.defer(function () {\n                _this.onError(error);\n                _this.onClose(1006, 'Could not start streaming', false);\n            });\n        }\n    };\n    HTTPSocket.prototype.closeStream = function () {\n        if (this.stream) {\n            this.stream.unbind_all();\n            this.stream.close();\n            this.stream = null;\n        }\n    };\n    return HTTPSocket;\n}());\nfunction getLocation(url) {\n    var parts = /([^\\?]*)\\/*(\\??.*)/.exec(url);\n    return {\n        base: parts[1],\n        queryString: parts[2]\n    };\n}\nfunction getSendURL(url, session) {\n    return url.base + '/' + session + '/xhr_send';\n}\nfunction getUniqueURL(url) {\n    var separator = url.indexOf('?') === -1 ? '?' : '&';\n    return url + separator + 't=' + +new Date() + '&n=' + autoIncrement++;\n}\nfunction replaceHost(url, hostname) {\n    var urlParts = /(https?:\\/\\/)([^\\/:]+)((\\/|:)?.*)/.exec(url);\n    return urlParts[1] + hostname + urlParts[3];\n}\nfunction randomNumber(max) {\n    return Math.floor(Math.random() * max);\n}\nfunction randomString(length) {\n    var result = [];\n    for (var i = 0; i < length; i++) {\n        result.push(randomNumber(32).toString(32));\n    }\n    return result.join('');\n}\n/* harmony default export */ var http_socket = (http_socket_HTTPSocket);\n\n// CONCATENATED MODULE: ./src/core/http/http_streaming_socket.ts\nvar http_streaming_socket_hooks = {\n    getReceiveURL: function (url, session) {\n        return url.base + '/' + session + '/xhr_streaming' + url.queryString;\n    },\n    onHeartbeat: function (socket) {\n        socket.sendRaw('[]');\n    },\n    sendHeartbeat: function (socket) {\n        socket.sendRaw('[]');\n    },\n    onFinished: function (socket, status) {\n        socket.onClose(1006, 'Connection interrupted (' + status + ')', false);\n    }\n};\n/* harmony default export */ var http_streaming_socket = (http_streaming_socket_hooks);\n\n// CONCATENATED MODULE: ./src/core/http/http_polling_socket.ts\nvar http_polling_socket_hooks = {\n    getReceiveURL: function (url, session) {\n        return url.base + '/' + session + '/xhr' + url.queryString;\n    },\n    onHeartbeat: function () {\n    },\n    sendHeartbeat: function (socket) {\n        socket.sendRaw('[]');\n    },\n    onFinished: function (socket, status) {\n        if (status === 200) {\n            socket.reconnect();\n        }\n        else {\n            socket.onClose(1006, 'Connection interrupted (' + status + ')', false);\n        }\n    }\n};\n/* harmony default export */ var http_polling_socket = (http_polling_socket_hooks);\n\n// CONCATENATED MODULE: ./src/runtimes/isomorphic/http/http_xhr_request.ts\n\nvar http_xhr_request_hooks = {\n    getRequest: function (socket) {\n        var Constructor = runtime.getXHRAPI();\n        var xhr = new Constructor();\n        xhr.onreadystatechange = xhr.onprogress = function () {\n            switch (xhr.readyState) {\n                case 3:\n                    if (xhr.responseText && xhr.responseText.length > 0) {\n                        socket.onChunk(xhr.status, xhr.responseText);\n                    }\n                    break;\n                case 4:\n                    if (xhr.responseText && xhr.responseText.length > 0) {\n                        socket.onChunk(xhr.status, xhr.responseText);\n                    }\n                    socket.emit('finished', xhr.status);\n                    socket.close();\n                    break;\n            }\n        };\n        return xhr;\n    },\n    abortRequest: function (xhr) {\n        xhr.onreadystatechange = null;\n        xhr.abort();\n    }\n};\n/* harmony default export */ var http_xhr_request = (http_xhr_request_hooks);\n\n// CONCATENATED MODULE: ./src/runtimes/isomorphic/http/http.ts\n\n\n\n\n\nvar HTTP = {\n    createStreamingSocket: function (url) {\n        return this.createSocket(http_streaming_socket, url);\n    },\n    createPollingSocket: function (url) {\n        return this.createSocket(http_polling_socket, url);\n    },\n    createSocket: function (hooks, url) {\n        return new http_socket(hooks, url);\n    },\n    createXHR: function (method, url) {\n        return this.createRequest(http_xhr_request, method, url);\n    },\n    createRequest: function (hooks, method, url) {\n        return new http_request(hooks, method, url);\n    }\n};\n/* harmony default export */ var http_http = (HTTP);\n\n// CONCATENATED MODULE: ./src/runtimes/web/http/http.ts\n\n\nhttp_http.createXDR = function (method, url) {\n    return this.createRequest(http_xdomain_request, method, url);\n};\n/* harmony default export */ var web_http_http = (http_http);\n\n// CONCATENATED MODULE: ./src/runtimes/web/runtime.ts\n\n\n\n\n\n\n\n\n\n\n\n\nvar Runtime = {\n    nextAuthCallbackID: 1,\n    auth_callbacks: {},\n    ScriptReceivers: ScriptReceivers,\n    DependenciesReceivers: DependenciesReceivers,\n    getDefaultStrategy: default_strategy,\n    Transports: transports_transports,\n    transportConnectionInitializer: transport_connection_initializer,\n    HTTPFactory: web_http_http,\n    TimelineTransport: jsonp_timeline,\n    getXHRAPI: function () {\n        return window.XMLHttpRequest;\n    },\n    getWebSocketAPI: function () {\n        return window.WebSocket || window.MozWebSocket;\n    },\n    setup: function (PusherClass) {\n        var _this = this;\n        window.Pusher = PusherClass;\n        var initializeOnDocumentBody = function () {\n            _this.onDocumentBody(PusherClass.ready);\n        };\n        if (!window.JSON) {\n            Dependencies.load('json2', {}, initializeOnDocumentBody);\n        }\n        else {\n            initializeOnDocumentBody();\n        }\n    },\n    getDocument: function () {\n        return document;\n    },\n    getProtocol: function () {\n        return this.getDocument().location.protocol;\n    },\n    getAuthorizers: function () {\n        return { ajax: xhr_auth, jsonp: jsonp_auth };\n    },\n    onDocumentBody: function (callback) {\n        var _this = this;\n        if (document.body) {\n            callback();\n        }\n        else {\n            setTimeout(function () {\n                _this.onDocumentBody(callback);\n            }, 0);\n        }\n    },\n    createJSONPRequest: function (url, data) {\n        return new jsonp_request(url, data);\n    },\n    createScriptRequest: function (src) {\n        return new script_request(src);\n    },\n    getLocalStorage: function () {\n        try {\n            return window.localStorage;\n        }\n        catch (e) {\n            return undefined;\n        }\n    },\n    createXHR: function () {\n        if (this.getXHRAPI()) {\n            return this.createXMLHttpRequest();\n        }\n        else {\n            return this.createMicrosoftXHR();\n        }\n    },\n    createXMLHttpRequest: function () {\n        var Constructor = this.getXHRAPI();\n        return new Constructor();\n    },\n    createMicrosoftXHR: function () {\n        return new ActiveXObject('Microsoft.XMLHTTP');\n    },\n    getNetwork: function () {\n        return net_info_Network;\n    },\n    createWebSocket: function (url) {\n        var Constructor = this.getWebSocketAPI();\n        return new Constructor(url);\n    },\n    createSocketRequest: function (method, url) {\n        if (this.isXHRSupported()) {\n            return this.HTTPFactory.createXHR(method, url);\n        }\n        else if (this.isXDRSupported(url.indexOf('https:') === 0)) {\n            return this.HTTPFactory.createXDR(method, url);\n        }\n        else {\n            throw 'Cross-origin HTTP requests are not supported';\n        }\n    },\n    isXHRSupported: function () {\n        var Constructor = this.getXHRAPI();\n        return (Boolean(Constructor) && new Constructor().withCredentials !== undefined);\n    },\n    isXDRSupported: function (useTLS) {\n        var protocol = useTLS ? 'https:' : 'http:';\n        var documentProtocol = this.getProtocol();\n        return (Boolean(window['XDomainRequest']) && documentProtocol === protocol);\n    },\n    addUnloadListener: function (listener) {\n        if (window.addEventListener !== undefined) {\n            window.addEventListener('unload', listener, false);\n        }\n        else if (window.attachEvent !== undefined) {\n            window.attachEvent('onunload', listener);\n        }\n    },\n    removeUnloadListener: function (listener) {\n        if (window.addEventListener !== undefined) {\n            window.removeEventListener('unload', listener, false);\n        }\n        else if (window.detachEvent !== undefined) {\n            window.detachEvent('onunload', listener);\n        }\n    }\n};\n/* harmony default export */ var runtime = (Runtime);\n\n// CONCATENATED MODULE: ./src/core/timeline/level.ts\nvar TimelineLevel;\n(function (TimelineLevel) {\n    TimelineLevel[TimelineLevel[\"ERROR\"] = 3] = \"ERROR\";\n    TimelineLevel[TimelineLevel[\"INFO\"] = 6] = \"INFO\";\n    TimelineLevel[TimelineLevel[\"DEBUG\"] = 7] = \"DEBUG\";\n})(TimelineLevel || (TimelineLevel = {}));\n/* harmony default export */ var timeline_level = (TimelineLevel);\n\n// CONCATENATED MODULE: ./src/core/timeline/timeline.ts\n\n\n\nvar timeline_Timeline = (function () {\n    function Timeline(key, session, options) {\n        this.key = key;\n        this.session = session;\n        this.events = [];\n        this.options = options || {};\n        this.sent = 0;\n        this.uniqueID = 0;\n    }\n    Timeline.prototype.log = function (level, event) {\n        if (level <= this.options.level) {\n            this.events.push(extend({}, event, { timestamp: util.now() }));\n            if (this.options.limit && this.events.length > this.options.limit) {\n                this.events.shift();\n            }\n        }\n    };\n    Timeline.prototype.error = function (event) {\n        this.log(timeline_level.ERROR, event);\n    };\n    Timeline.prototype.info = function (event) {\n        this.log(timeline_level.INFO, event);\n    };\n    Timeline.prototype.debug = function (event) {\n        this.log(timeline_level.DEBUG, event);\n    };\n    Timeline.prototype.isEmpty = function () {\n        return this.events.length === 0;\n    };\n    Timeline.prototype.send = function (sendfn, callback) {\n        var _this = this;\n        var data = extend({\n            session: this.session,\n            bundle: this.sent + 1,\n            key: this.key,\n            lib: 'js',\n            version: this.options.version,\n            cluster: this.options.cluster,\n            features: this.options.features,\n            timeline: this.events\n        }, this.options.params);\n        this.events = [];\n        sendfn(data, function (error, result) {\n            if (!error) {\n                _this.sent++;\n            }\n            if (callback) {\n                callback(error, result);\n            }\n        });\n        return true;\n    };\n    Timeline.prototype.generateUniqueID = function () {\n        this.uniqueID++;\n        return this.uniqueID;\n    };\n    return Timeline;\n}());\n/* harmony default export */ var timeline_timeline = (timeline_Timeline);\n\n// CONCATENATED MODULE: ./src/core/strategies/transport_strategy.ts\n\n\n\n\nvar transport_strategy_TransportStrategy = (function () {\n    function TransportStrategy(name, priority, transport, options) {\n        this.name = name;\n        this.priority = priority;\n        this.transport = transport;\n        this.options = options || {};\n    }\n    TransportStrategy.prototype.isSupported = function () {\n        return this.transport.isSupported({\n            useTLS: this.options.useTLS\n        });\n    };\n    TransportStrategy.prototype.connect = function (minPriority, callback) {\n        var _this = this;\n        if (!this.isSupported()) {\n            return failAttempt(new UnsupportedStrategy(), callback);\n        }\n        else if (this.priority < minPriority) {\n            return failAttempt(new TransportPriorityTooLow(), callback);\n        }\n        var connected = false;\n        var transport = this.transport.createConnection(this.name, this.priority, this.options.key, this.options);\n        var handshake = null;\n        var onInitialized = function () {\n            transport.unbind('initialized', onInitialized);\n            transport.connect();\n        };\n        var onOpen = function () {\n            handshake = factory.createHandshake(transport, function (result) {\n                connected = true;\n                unbindListeners();\n                callback(null, result);\n            });\n        };\n        var onError = function (error) {\n            unbindListeners();\n            callback(error);\n        };\n        var onClosed = function () {\n            unbindListeners();\n            var serializedTransport;\n            serializedTransport = safeJSONStringify(transport);\n            callback(new TransportClosed(serializedTransport));\n        };\n        var unbindListeners = function () {\n            transport.unbind('initialized', onInitialized);\n            transport.unbind('open', onOpen);\n            transport.unbind('error', onError);\n            transport.unbind('closed', onClosed);\n        };\n        transport.bind('initialized', onInitialized);\n        transport.bind('open', onOpen);\n        transport.bind('error', onError);\n        transport.bind('closed', onClosed);\n        transport.initialize();\n        return {\n            abort: function () {\n                if (connected) {\n                    return;\n                }\n                unbindListeners();\n                if (handshake) {\n                    handshake.close();\n                }\n                else {\n                    transport.close();\n                }\n            },\n            forceMinPriority: function (p) {\n                if (connected) {\n                    return;\n                }\n                if (_this.priority < p) {\n                    if (handshake) {\n                        handshake.close();\n                    }\n                    else {\n                        transport.close();\n                    }\n                }\n            }\n        };\n    };\n    return TransportStrategy;\n}());\n/* harmony default export */ var transport_strategy = (transport_strategy_TransportStrategy);\nfunction failAttempt(error, callback) {\n    util.defer(function () {\n        callback(error);\n    });\n    return {\n        abort: function () { },\n        forceMinPriority: function () { }\n    };\n}\n\n// CONCATENATED MODULE: ./src/core/strategies/strategy_builder.ts\n\n\n\n\n\nvar strategy_builder_Transports = runtime.Transports;\nvar strategy_builder_defineTransport = function (config, name, type, priority, options, manager) {\n    var transportClass = strategy_builder_Transports[type];\n    if (!transportClass) {\n        throw new UnsupportedTransport(type);\n    }\n    var enabled = (!config.enabledTransports ||\n        arrayIndexOf(config.enabledTransports, name) !== -1) &&\n        (!config.disabledTransports ||\n            arrayIndexOf(config.disabledTransports, name) === -1);\n    var transport;\n    if (enabled) {\n        options = Object.assign({ ignoreNullOrigin: config.ignoreNullOrigin }, options);\n        transport = new transport_strategy(name, priority, manager ? manager.getAssistant(transportClass) : transportClass, options);\n    }\n    else {\n        transport = strategy_builder_UnsupportedStrategy;\n    }\n    return transport;\n};\nvar strategy_builder_UnsupportedStrategy = {\n    isSupported: function () {\n        return false;\n    },\n    connect: function (_, callback) {\n        var deferred = util.defer(function () {\n            callback(new UnsupportedStrategy());\n        });\n        return {\n            abort: function () {\n                deferred.ensureAborted();\n            },\n            forceMinPriority: function () { }\n        };\n    }\n};\n\n// CONCATENATED MODULE: ./src/core/config.ts\n\n\nfunction getConfig(opts) {\n    var config = {\n        activityTimeout: opts.activityTimeout || defaults.activityTimeout,\n        authEndpoint: opts.authEndpoint || defaults.authEndpoint,\n        authTransport: opts.authTransport || defaults.authTransport,\n        cluster: opts.cluster || defaults.cluster,\n        httpPath: opts.httpPath || defaults.httpPath,\n        httpPort: opts.httpPort || defaults.httpPort,\n        httpsPort: opts.httpsPort || defaults.httpsPort,\n        pongTimeout: opts.pongTimeout || defaults.pongTimeout,\n        statsHost: opts.statsHost || defaults.stats_host,\n        unavailableTimeout: opts.unavailableTimeout || defaults.unavailableTimeout,\n        wsPath: opts.wsPath || defaults.wsPath,\n        wsPort: opts.wsPort || defaults.wsPort,\n        wssPort: opts.wssPort || defaults.wssPort,\n        enableStats: getEnableStatsConfig(opts),\n        httpHost: getHttpHost(opts),\n        useTLS: shouldUseTLS(opts),\n        wsHost: getWebsocketHost(opts)\n    };\n    if ('auth' in opts)\n        config.auth = opts.auth;\n    if ('authorizer' in opts)\n        config.authorizer = opts.authorizer;\n    if ('disabledTransports' in opts)\n        config.disabledTransports = opts.disabledTransports;\n    if ('enabledTransports' in opts)\n        config.enabledTransports = opts.enabledTransports;\n    if ('ignoreNullOrigin' in opts)\n        config.ignoreNullOrigin = opts.ignoreNullOrigin;\n    if ('timelineParams' in opts)\n        config.timelineParams = opts.timelineParams;\n    if ('nacl' in opts) {\n        config.nacl = opts.nacl;\n    }\n    return config;\n}\nfunction getHttpHost(opts) {\n    if (opts.httpHost) {\n        return opts.httpHost;\n    }\n    if (opts.cluster) {\n        return \"sockjs-\" + opts.cluster + \".pusher.com\";\n    }\n    return defaults.httpHost;\n}\nfunction getWebsocketHost(opts) {\n    if (opts.wsHost) {\n        return opts.wsHost;\n    }\n    if (opts.cluster) {\n        return getWebsocketHostFromCluster(opts.cluster);\n    }\n    return getWebsocketHostFromCluster(defaults.cluster);\n}\nfunction getWebsocketHostFromCluster(cluster) {\n    return \"ws-\" + cluster + \".pusher.com\";\n}\nfunction shouldUseTLS(opts) {\n    if (runtime.getProtocol() === 'https:') {\n        return true;\n    }\n    else if (opts.forceTLS === false) {\n        return false;\n    }\n    return true;\n}\nfunction getEnableStatsConfig(opts) {\n    if ('enableStats' in opts) {\n        return opts.enableStats;\n    }\n    if ('disableStats' in opts) {\n        return !opts.disableStats;\n    }\n    return false;\n}\n\n// CONCATENATED MODULE: ./src/core/pusher.ts\n\n\n\n\n\n\n\n\n\n\n\n\nvar pusher_Pusher = (function () {\n    function Pusher(app_key, options) {\n        var _this = this;\n        checkAppKey(app_key);\n        options = options || {};\n        if (!options.cluster && !(options.wsHost || options.httpHost)) {\n            var suffix = url_store.buildLogSuffix('javascriptQuickStart');\n            logger.warn(\"You should always specify a cluster when connecting. \" + suffix);\n        }\n        if ('disableStats' in options) {\n            logger.warn('The disableStats option is deprecated in favor of enableStats');\n        }\n        this.key = app_key;\n        this.config = getConfig(options);\n        this.channels = factory.createChannels();\n        this.global_emitter = new dispatcher();\n        this.sessionID = Math.floor(Math.random() * 1000000000);\n        this.timeline = new timeline_timeline(this.key, this.sessionID, {\n            cluster: this.config.cluster,\n            features: Pusher.getClientFeatures(),\n            params: this.config.timelineParams || {},\n            limit: 50,\n            level: timeline_level.INFO,\n            version: defaults.VERSION\n        });\n        if (this.config.enableStats) {\n            this.timelineSender = factory.createTimelineSender(this.timeline, {\n                host: this.config.statsHost,\n                path: '/timeline/v2/' + runtime.TimelineTransport.name\n            });\n        }\n        var getStrategy = function (options) {\n            return runtime.getDefaultStrategy(_this.config, options, strategy_builder_defineTransport);\n        };\n        this.connection = factory.createConnectionManager(this.key, {\n            getStrategy: getStrategy,\n            timeline: this.timeline,\n            activityTimeout: this.config.activityTimeout,\n            pongTimeout: this.config.pongTimeout,\n            unavailableTimeout: this.config.unavailableTimeout,\n            useTLS: Boolean(this.config.useTLS)\n        });\n        this.connection.bind('connected', function () {\n            _this.subscribeAll();\n            if (_this.timelineSender) {\n                _this.timelineSender.send(_this.connection.isUsingTLS());\n            }\n        });\n        this.connection.bind('message', function (event) {\n            var eventName = event.event;\n            var internal = eventName.indexOf('pusher_internal:') === 0;\n            if (event.channel) {\n                var channel = _this.channel(event.channel);\n                if (channel) {\n                    channel.handleEvent(event);\n                }\n            }\n            if (!internal) {\n                _this.global_emitter.emit(event.event, event.data);\n            }\n        });\n        this.connection.bind('connecting', function () {\n            _this.channels.disconnect();\n        });\n        this.connection.bind('disconnected', function () {\n            _this.channels.disconnect();\n        });\n        this.connection.bind('error', function (err) {\n            logger.warn(err);\n        });\n        Pusher.instances.push(this);\n        this.timeline.info({ instances: Pusher.instances.length });\n        if (Pusher.isReady) {\n            this.connect();\n        }\n    }\n    Pusher.ready = function () {\n        Pusher.isReady = true;\n        for (var i = 0, l = Pusher.instances.length; i < l; i++) {\n            Pusher.instances[i].connect();\n        }\n    };\n    Pusher.getClientFeatures = function () {\n        return keys(filterObject({ ws: runtime.Transports.ws }, function (t) {\n            return t.isSupported({});\n        }));\n    };\n    Pusher.prototype.channel = function (name) {\n        return this.channels.find(name);\n    };\n    Pusher.prototype.allChannels = function () {\n        return this.channels.all();\n    };\n    Pusher.prototype.connect = function () {\n        this.connection.connect();\n        if (this.timelineSender) {\n            if (!this.timelineSenderTimer) {\n                var usingTLS = this.connection.isUsingTLS();\n                var timelineSender = this.timelineSender;\n                this.timelineSenderTimer = new PeriodicTimer(60000, function () {\n                    timelineSender.send(usingTLS);\n                });\n            }\n        }\n    };\n    Pusher.prototype.disconnect = function () {\n        this.connection.disconnect();\n        if (this.timelineSenderTimer) {\n            this.timelineSenderTimer.ensureAborted();\n            this.timelineSenderTimer = null;\n        }\n    };\n    Pusher.prototype.bind = function (event_name, callback, context) {\n        this.global_emitter.bind(event_name, callback, context);\n        return this;\n    };\n    Pusher.prototype.unbind = function (event_name, callback, context) {\n        this.global_emitter.unbind(event_name, callback, context);\n        return this;\n    };\n    Pusher.prototype.bind_global = function (callback) {\n        this.global_emitter.bind_global(callback);\n        return this;\n    };\n    Pusher.prototype.unbind_global = function (callback) {\n        this.global_emitter.unbind_global(callback);\n        return this;\n    };\n    Pusher.prototype.unbind_all = function (callback) {\n        this.global_emitter.unbind_all();\n        return this;\n    };\n    Pusher.prototype.subscribeAll = function () {\n        var channelName;\n        for (channelName in this.channels.channels) {\n            if (this.channels.channels.hasOwnProperty(channelName)) {\n                this.subscribe(channelName);\n            }\n        }\n    };\n    Pusher.prototype.subscribe = function (channel_name) {\n        var channel = this.channels.add(channel_name, this);\n        if (channel.subscriptionPending && channel.subscriptionCancelled) {\n            channel.reinstateSubscription();\n        }\n        else if (!channel.subscriptionPending &&\n            this.connection.state === 'connected') {\n            channel.subscribe();\n        }\n        return channel;\n    };\n    Pusher.prototype.unsubscribe = function (channel_name) {\n        var channel = this.channels.find(channel_name);\n        if (channel && channel.subscriptionPending) {\n            channel.cancelSubscription();\n        }\n        else {\n            channel = this.channels.remove(channel_name);\n            if (channel && channel.subscribed) {\n                channel.unsubscribe();\n            }\n        }\n    };\n    Pusher.prototype.send_event = function (event_name, data, channel) {\n        return this.connection.send_event(event_name, data, channel);\n    };\n    Pusher.prototype.shouldUseTLS = function () {\n        return this.config.useTLS;\n    };\n    Pusher.instances = [];\n    Pusher.isReady = false;\n    Pusher.logToConsole = false;\n    Pusher.Runtime = runtime;\n    Pusher.ScriptReceivers = runtime.ScriptReceivers;\n    Pusher.DependenciesReceivers = runtime.DependenciesReceivers;\n    Pusher.auth_callbacks = runtime.auth_callbacks;\n    return Pusher;\n}());\n/* harmony default export */ var core_pusher = __webpack_exports__[\"default\"] = (pusher_Pusher);\nfunction checkAppKey(key) {\n    if (key === null || key === undefined) {\n        throw 'You must pass your app key when you instantiate Pusher.';\n    }\n}\nruntime.setup(pusher_Pusher);\n\n\n/***/ })\n/******/ ]);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/pusher-js/dist/web/pusher.js\n");

/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n   true ? module.exports : 0\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/regenerator-runtime/runtime.js\n");

/***/ }),

/***/ "./node_modules/slim-js/dist/directives/all.js":
/*!*****************************************************!*\
  !*** ./node_modules/slim-js/dist/directives/all.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../index.js */ \"./node_modules/slim-js/dist/index.js\");\nvar{block:M,repeatCtx:E,internals:p,index:ie}=_index_js__WEBPACK_IMPORTED_MODULE_0__.Internals,A=\"*foreach\",h=Symbol(),b=new Range,T={attribute:(t,e)=>e===A,process:({targetNode:t,scopeNode:e,expression:r})=>{let o=document.createElement(\"template\");t[M]=\"abort\",t.removeAttribute(A);let i=t.outerHTML,a=document.createComment(\"*foreach\"),u=t.parentElement||t.parentNode||e.shadowRoot||e;u.insertBefore(a,t);let n=[];function f(l=[]){let c=l.length,v=n.length;if(c<v){let{[c]:s,[v-1]:d}=n;b.setStartBefore(s),b.setEndAfter(d),b.deleteContents(),n.slice(c).forEach(m=>{m[p][h].clear(),(0,_index_js__WEBPACK_IMPORTED_MODULE_0__.removeBindings)(e,m)}),n.length=c}v=n.length,o.innerHTML=i.repeat(Math.max(0,c-v)),b.selectNodeContents(o.content);let x=b.extractContents(),y=Array.from(x.children);y.forEach((s,d)=>{s[E]=l[n.length+d];let{bounds:m,clear:j}=(0,_index_js__WEBPACK_IMPORTED_MODULE_0__.processDOM)(e,s);s[p]=s[p]||{},s[p][h]={bounds:m,clear:j},m.forEach(R=>R())}),u.insertBefore(x,a),n.forEach((s,d)=>{s[E]=l[d],s[p][h].bounds.forEach(m=>m())}),n.push(...y)}return{update:f,removeNode:!0}}};_index_js__WEBPACK_IMPORTED_MODULE_0__.DirectiveRegistry.add(T,!0);var{block:O}=_index_js__WEBPACK_IMPORTED_MODULE_0__.Internals,w=(t,e)=>{let r=t.cloneNode(!0),{clear:o,bounds:i}=(0,_index_js__WEBPACK_IMPORTED_MODULE_0__.processDOM)(e,r);return{clear:o,bounds:i,copy:r}},L={attribute:(t,e)=>e===\"*if\",process:({scopeNode:t,targetNode:e,expression:r})=>{let o=document.createComment(\"*if\");e[O]=\"abort\",e.removeAttribute(\"*if\"),e.parentNode?.insertBefore(o,e);let i,a,u;return{update:f=>{f?(!i&&({copy:i,bounds:a,clear:u}=w(e,t)),a.forEach(l=>l()),o.parentNode?.insertBefore(i,o)):i&&(i.remove(),u(),i=a=u=void 0)},removeNode:!0,removeAttribute:!0}},noExecution:!1};_index_js__WEBPACK_IMPORTED_MODULE_0__.DirectiveRegistry.add(L);var{dashToCamel:z}=_index_js__WEBPACK_IMPORTED_MODULE_0__.Utils,{debug:S,block:$}=_index_js__WEBPACK_IMPORTED_MODULE_0__.Internals,q={attribute:(t,e)=>e.startsWith(\".\"),process:({attributeName:t,targetNode:e})=>{let r=z(t.slice(1));return{update:o=>{e[$]!==\"abort\"&&(e[r]=o)},removeAttribute:!_index_js__WEBPACK_IMPORTED_MODULE_0__.Slim[S]}}};_index_js__WEBPACK_IMPORTED_MODULE_0__.DirectiveRegistry.add(q);var J={attribute:(t,e,r=\"\")=>{let o=e[0];return r&&o!==\"@\"&&o!==\".\"&&o!==\"*\"&&r.slice(0,2)===\"{{\"&&r.slice(-2)===\"}}\"},process:({attributeName:t,targetNode:e})=>e[_index_js__WEBPACK_IMPORTED_MODULE_0__.Internals.block]===\"abort\"?{}:{update:r=>{if(e[_index_js__WEBPACK_IMPORTED_MODULE_0__.Internals.block]===\"abort\")return e.removeAttribute(t);typeof r==\"boolean\"||typeof r==\"undefined\"||r===null?r?e.setAttribute(t,\"\"):e.removeAttribute(t):e.setAttribute(t,\"\"+r)},removeNode:!1,removeAttribute:!0}};_index_js__WEBPACK_IMPORTED_MODULE_0__.DirectiveRegistry.add(J);var{dashToCamel:V,memoize:X,createFunction:Y}=_index_js__WEBPACK_IMPORTED_MODULE_0__.Utils,Z=X(V),N=/(.+)(\\((.*)\\)){1}/,ee={attribute:(t,e)=>e.startsWith(\"@\"),process:({attributeName:t,targetNode:e,scopeNode:r,expression:o,context:i})=>{let a=Z(t.slice(1)),u=N.test(o||\"\"),n=function(f){let l=Y(\"event\",\"item\",`return ${o};`),c;return u||(c=l.call(r)),c?c(f,i):l.call(r,f,i())};return e.addEventListener(a,n),{removeAttribute:!0}}};_index_js__WEBPACK_IMPORTED_MODULE_0__.DirectiveRegistry.add(ee);var re={attribute:(t,e)=>e===\"#ref\",process:({attribute:t,targetNode:e,scopeNode:r})=>{let o=t.value;return Object.defineProperty(r,o,{value:e,configurable:!0}),{removeAttribute:!0}},noExecution:!0};_index_js__WEBPACK_IMPORTED_MODULE_0__.DirectiveRegistry.add(re);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2xpbS1qcy9kaXN0L2RpcmVjdGl2ZXMvYWxsLmpzLmpzIiwibWFwcGluZ3MiOiI7O0FBQW1HLElBQUkseUNBQXlDLENBQUMsZ0RBQUMsd0NBQXdDLGlDQUFpQyxzQ0FBc0MsSUFBSSx5Q0FBeUMsa0NBQWtDLHdHQUF3RyxvQkFBb0IsU0FBUyxpQkFBaUIsMEJBQTBCLFFBQVEsSUFBSSxjQUFjLEdBQUcsK0VBQStFLGdCQUFnQix5REFBQyxNQUFNLGFBQWEsaUZBQWlGLG1EQUFtRCxrQkFBa0IsbUJBQW1CLElBQUksaUJBQWlCLENBQUMscURBQUMsTUFBTSxhQUFhLFVBQVUsaUJBQWlCLG1CQUFtQix3Q0FBd0MseUNBQXlDLGVBQWUsT0FBTywwQkFBMEIsNERBQUssT0FBc0YsSUFBSSxRQUFRLENBQUMsZ0RBQUMsV0FBVyx1QkFBdUIsaUJBQWlCLENBQUMscURBQUMsTUFBTSxPQUFPLHlCQUF5QixJQUFJLHFDQUFxQyxzQ0FBc0MsSUFBSSxvQ0FBb0Msc0VBQXNFLFVBQVUsT0FBTyxXQUFXLFNBQVMsd0JBQXdCLDZGQUE2RixtQ0FBbUMsaUJBQWlCLDREQUFLLElBQXdGLElBQUksY0FBYyxDQUFDLDRDQUFDLEVBQUUsZ0JBQWdCLENBQUMsZ0RBQUMsSUFBSSw2Q0FBNkMsNkJBQTZCLElBQUksb0JBQW9CLE9BQU8sV0FBVyx5QkFBeUIsa0JBQWtCLDJDQUFDLE9BQU8sNERBQUssSUFBbUUsT0FBTyx1QkFBdUIsV0FBVyx1REFBdUQsb0JBQW9CLEVBQUUsV0FBVyw2QkFBNkIsS0FBSyxzREFBTyxjQUFjLEVBQUUsV0FBVyxLQUFLLHNEQUFPLHdDQUF3Qyx3SEFBd0gsb0NBQW9DLDREQUFLLElBQStELElBQUkseUNBQXlDLENBQUMsNENBQUMsMEJBQTBCLEVBQUUsTUFBTSw2Q0FBNkMsZ0VBQWdFLElBQUksa0RBQWtELGlDQUFpQyxHQUFHLEtBQUssa0RBQWtELGdDQUFnQyxzQkFBc0IsNERBQUssS0FBc0QsUUFBUSxzQ0FBc0MscUNBQXFDLElBQUksY0FBYyxrQ0FBa0Msd0JBQXdCLEdBQUcsb0JBQW9CLGlCQUFpQiw0REFBTSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zbGltLWpzL2Rpc3QvZGlyZWN0aXZlcy9hbGwuanM/ZWY1NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnR7cHJvY2Vzc0RPTSBhcyBDLHJlbW92ZUJpbmRpbmdzIGFzIGcsSW50ZXJuYWxzIGFzIGssRGlyZWN0aXZlUmVnaXN0cnkgYXMgQn1mcm9tXCIuLi9pbmRleC5qc1wiO3ZhcntibG9jazpNLHJlcGVhdEN0eDpFLGludGVybmFsczpwLGluZGV4OmllfT1rLEE9XCIqZm9yZWFjaFwiLGg9U3ltYm9sKCksYj1uZXcgUmFuZ2UsVD17YXR0cmlidXRlOih0LGUpPT5lPT09QSxwcm9jZXNzOih7dGFyZ2V0Tm9kZTp0LHNjb3BlTm9kZTplLGV4cHJlc3Npb246cn0pPT57bGV0IG89ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRlbXBsYXRlXCIpO3RbTV09XCJhYm9ydFwiLHQucmVtb3ZlQXR0cmlidXRlKEEpO2xldCBpPXQub3V0ZXJIVE1MLGE9ZG9jdW1lbnQuY3JlYXRlQ29tbWVudChcIipmb3JlYWNoXCIpLHU9dC5wYXJlbnRFbGVtZW50fHx0LnBhcmVudE5vZGV8fGUuc2hhZG93Um9vdHx8ZTt1Lmluc2VydEJlZm9yZShhLHQpO2xldCBuPVtdO2Z1bmN0aW9uIGYobD1bXSl7bGV0IGM9bC5sZW5ndGgsdj1uLmxlbmd0aDtpZihjPHYpe2xldHtbY106cyxbdi0xXTpkfT1uO2Iuc2V0U3RhcnRCZWZvcmUocyksYi5zZXRFbmRBZnRlcihkKSxiLmRlbGV0ZUNvbnRlbnRzKCksbi5zbGljZShjKS5mb3JFYWNoKG09PnttW3BdW2hdLmNsZWFyKCksZyhlLG0pfSksbi5sZW5ndGg9Y312PW4ubGVuZ3RoLG8uaW5uZXJIVE1MPWkucmVwZWF0KE1hdGgubWF4KDAsYy12KSksYi5zZWxlY3ROb2RlQ29udGVudHMoby5jb250ZW50KTtsZXQgeD1iLmV4dHJhY3RDb250ZW50cygpLHk9QXJyYXkuZnJvbSh4LmNoaWxkcmVuKTt5LmZvckVhY2goKHMsZCk9PntzW0VdPWxbbi5sZW5ndGgrZF07bGV0e2JvdW5kczptLGNsZWFyOmp9PUMoZSxzKTtzW3BdPXNbcF18fHt9LHNbcF1baF09e2JvdW5kczptLGNsZWFyOmp9LG0uZm9yRWFjaChSPT5SKCkpfSksdS5pbnNlcnRCZWZvcmUoeCxhKSxuLmZvckVhY2goKHMsZCk9PntzW0VdPWxbZF0sc1twXVtoXS5ib3VuZHMuZm9yRWFjaChtPT5tKCkpfSksbi5wdXNoKC4uLnkpfXJldHVybnt1cGRhdGU6ZixyZW1vdmVOb2RlOiEwfX19O0IuYWRkKFQsITApO2ltcG9ydHtEaXJlY3RpdmVSZWdpc3RyeSBhcyBfLEludGVybmFscyBhcyBILHByb2Nlc3NET00gYXMgSX1mcm9tXCIuLi9pbmRleC5qc1wiO3ZhcntibG9jazpPfT1ILHc9KHQsZSk9PntsZXQgcj10LmNsb25lTm9kZSghMCkse2NsZWFyOm8sYm91bmRzOml9PUkoZSxyKTtyZXR1cm57Y2xlYXI6byxib3VuZHM6aSxjb3B5OnJ9fSxMPXthdHRyaWJ1dGU6KHQsZSk9PmU9PT1cIippZlwiLHByb2Nlc3M6KHtzY29wZU5vZGU6dCx0YXJnZXROb2RlOmUsZXhwcmVzc2lvbjpyfSk9PntsZXQgbz1kb2N1bWVudC5jcmVhdGVDb21tZW50KFwiKmlmXCIpO2VbT109XCJhYm9ydFwiLGUucmVtb3ZlQXR0cmlidXRlKFwiKmlmXCIpLGUucGFyZW50Tm9kZT8uaW5zZXJ0QmVmb3JlKG8sZSk7bGV0IGksYSx1O3JldHVybnt1cGRhdGU6Zj0+e2Y/KCFpJiYoe2NvcHk6aSxib3VuZHM6YSxjbGVhcjp1fT13KGUsdCkpLGEuZm9yRWFjaChsPT5sKCkpLG8ucGFyZW50Tm9kZT8uaW5zZXJ0QmVmb3JlKGksbykpOmkmJihpLnJlbW92ZSgpLHUoKSxpPWE9dT12b2lkIDApfSxyZW1vdmVOb2RlOiEwLHJlbW92ZUF0dHJpYnV0ZTohMH19LG5vRXhlY3V0aW9uOiExfTtfLmFkZChMKTtpbXBvcnR7VXRpbHMgYXMgRixJbnRlcm5hbHMgYXMgUCxEaXJlY3RpdmVSZWdpc3RyeSBhcyBVLFNsaW0gYXMgV31mcm9tXCIuLi9pbmRleC5qc1wiO3ZhcntkYXNoVG9DYW1lbDp6fT1GLHtkZWJ1ZzpTLGJsb2NrOiR9PVAscT17YXR0cmlidXRlOih0LGUpPT5lLnN0YXJ0c1dpdGgoXCIuXCIpLHByb2Nlc3M6KHthdHRyaWJ1dGVOYW1lOnQsdGFyZ2V0Tm9kZTplfSk9PntsZXQgcj16KHQuc2xpY2UoMSkpO3JldHVybnt1cGRhdGU6bz0+e2VbJF0hPT1cImFib3J0XCImJihlW3JdPW8pfSxyZW1vdmVBdHRyaWJ1dGU6IVdbU119fX07VS5hZGQocSk7aW1wb3J0e0RpcmVjdGl2ZVJlZ2lzdHJ5IGFzIEcsSW50ZXJuYWxzIGFzIER9ZnJvbVwiLi4vaW5kZXguanNcIjt2YXIgSj17YXR0cmlidXRlOih0LGUscj1cIlwiKT0+e2xldCBvPWVbMF07cmV0dXJuIHImJm8hPT1cIkBcIiYmbyE9PVwiLlwiJiZvIT09XCIqXCImJnIuc2xpY2UoMCwyKT09PVwie3tcIiYmci5zbGljZSgtMik9PT1cIn19XCJ9LHByb2Nlc3M6KHthdHRyaWJ1dGVOYW1lOnQsdGFyZ2V0Tm9kZTplfSk9PmVbRC5ibG9ja109PT1cImFib3J0XCI/e306e3VwZGF0ZTpyPT57aWYoZVtELmJsb2NrXT09PVwiYWJvcnRcIilyZXR1cm4gZS5yZW1vdmVBdHRyaWJ1dGUodCk7dHlwZW9mIHI9PVwiYm9vbGVhblwifHx0eXBlb2Ygcj09XCJ1bmRlZmluZWRcInx8cj09PW51bGw/cj9lLnNldEF0dHJpYnV0ZSh0LFwiXCIpOmUucmVtb3ZlQXR0cmlidXRlKHQpOmUuc2V0QXR0cmlidXRlKHQsXCJcIityKX0scmVtb3ZlTm9kZTohMSxyZW1vdmVBdHRyaWJ1dGU6ITB9fTtHLmFkZChKKTtpbXBvcnR7RGlyZWN0aXZlUmVnaXN0cnkgYXMgSyxVdGlscyBhcyBRfWZyb21cIi4uL2luZGV4LmpzXCI7dmFye2Rhc2hUb0NhbWVsOlYsbWVtb2l6ZTpYLGNyZWF0ZUZ1bmN0aW9uOll9PVEsWj1YKFYpLE49LyguKykoXFwoKC4qKVxcKSl7MX0vLGVlPXthdHRyaWJ1dGU6KHQsZSk9PmUuc3RhcnRzV2l0aChcIkBcIikscHJvY2Vzczooe2F0dHJpYnV0ZU5hbWU6dCx0YXJnZXROb2RlOmUsc2NvcGVOb2RlOnIsZXhwcmVzc2lvbjpvLGNvbnRleHQ6aX0pPT57bGV0IGE9Wih0LnNsaWNlKDEpKSx1PU4udGVzdChvfHxcIlwiKSxuPWZ1bmN0aW9uKGYpe2xldCBsPVkoXCJldmVudFwiLFwiaXRlbVwiLGByZXR1cm4gJHtvfTtgKSxjO3JldHVybiB1fHwoYz1sLmNhbGwocikpLGM/YyhmLGkpOmwuY2FsbChyLGYsaSgpKX07cmV0dXJuIGUuYWRkRXZlbnRMaXN0ZW5lcihhLG4pLHtyZW1vdmVBdHRyaWJ1dGU6ITB9fX07Sy5hZGQoZWUpO2ltcG9ydHtEaXJlY3RpdmVSZWdpc3RyeSBhcyB0ZX1mcm9tXCIuLi9pbmRleC5qc1wiO3ZhciByZT17YXR0cmlidXRlOih0LGUpPT5lPT09XCIjcmVmXCIscHJvY2Vzczooe2F0dHJpYnV0ZTp0LHRhcmdldE5vZGU6ZSxzY29wZU5vZGU6cn0pPT57bGV0IG89dC52YWx1ZTtyZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsbyx7dmFsdWU6ZSxjb25maWd1cmFibGU6ITB9KSx7cmVtb3ZlQXR0cmlidXRlOiEwfX0sbm9FeGVjdXRpb246ITB9O3RlLmFkZChyZSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/slim-js/dist/directives/all.js\n");

/***/ }),

/***/ "./node_modules/slim-js/dist/index.js":
/*!********************************************!*\
  !*** ./node_modules/slim-js/dist/index.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Component\": () => (/* binding */ u),\n/* harmony export */   \"DirectiveRegistry\": () => (/* binding */ Z),\n/* harmony export */   \"Internals\": () => (/* binding */ rt),\n/* harmony export */   \"Phase\": () => (/* binding */ st),\n/* harmony export */   \"PluginRegistry\": () => (/* binding */ C),\n/* harmony export */   \"Slim\": () => (/* binding */ u),\n/* harmony export */   \"Utils\": () => (/* binding */ pe),\n/* harmony export */   \"createBind\": () => (/* binding */ te),\n/* harmony export */   \"processDOM\": () => (/* binding */ ne),\n/* harmony export */   \"removeBindings\": () => (/* binding */ Re)\n/* harmony export */ });\nvar $=Object.defineProperty;var De=(e,t,o)=>t in e?$(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o;var Oe=e=>$(e,\"__esModule\",{value:!0});var Se=(e,t)=>{Oe(e);for(var o in t)$(e,o,{get:t[o],enumerable:!0})};var q=(e,t,o)=>(De(e,typeof t!=\"symbol\"?t+\"\":t,o),o);var pe={};Se(pe,{NOOP:()=>R,createFunction:()=>M,dashToCamel:()=>Ae,findCtx:()=>H,forceUpdate:()=>je,isForcedUpdate:()=>Q,lazyQueue:()=>Y,markFlush:()=>X,memoize:()=>D,normalize:()=>J,requestIdleCallback:()=>k});var p=Symbol,a=p(\"block\"),E=p(\"repeat\"),k=window.requestIdleCallback||((e,...t)=>setTimeout(e)),N=p(\"internals\"),v=p(),A=p(),y=p(),F=p(),U=p(),le=p();var _=new WeakSet,de=new WeakMap;function je(e,...t){let o=[...arguments].slice(1),n=de.get(e);if(!n)return console.error(\"Flush error\");_.add(e),o.length?n(...o):n(),requestAnimationFrame(()=>_.delete(e))}var H=e=>{for(;e&&!e[E];)e=e.parentElement;return e?.[E]},Q=e=>_.has(e),X=(e,t)=>de.set(e,t),ve=/-[a-z]/g,Ae=e=>e.indexOf(\"-\")<0?e:e.replace(ve,t=>t[1].toUpperCase()),ye={timeRemaining:()=>!0},Y=(e,t=20,o=R)=>{let n={timeout:t},i=e[Symbol.iterator](),r=i.next(),l=()=>k(d,n),d=(s=ye)=>{for(;s.timeRemaining()&&!r.done;)r.value(),r=i.next();s?.didTimeout&&!r.done&&(r.value(),r=i.next()),r.done?o():l()};l()},J=e=>e.replace(/\\n/g,\"\").replace(/[\\t ]+\\</g,\"<\").replace(/\\>[\\t ]+\\</g,\"><\").replace(/\\>[\\t ]+$/g,\">\"),D=e=>{let t={};return o=>t[o]||(t[o]=e(o))},me={},M=(...e)=>{let t=e.join(\"$\");return me[t]||(me[t]=new Function(...e))},R=()=>{};var Fe=Symbol(),Me=/(\\{\\{([^\\{|^\\}]+)\\}\\})/gi,ue=/(this\\.[\\w+|\\d*]*)+/gi,fe=/item(\\.[\\w+|\\d*]*)*/gi,Pe=(e=\"\")=>{let t=[],o=null;for(ue.lastIndex=fe.lastIndex=0;o=ue.exec(e);)t.push(o[1].split(\".\")[1]);return fe.test(e)&&t.push(Fe),{paths:t,expressions:t.length?e.match(Me)||[]:[]}},G=D(Pe);var O=Symbol(),K=class{constructor(){this[O]=[]}add(t,o=!1){o?this[O].unshift(t):this[O].push(t)}getAll(){return[...this[O]]}},he=class extends K{exec(t,o){this[O].forEach(n=>n(t,o))}},Z=new K,C=new he;var xe=[],Ee={},ee=\"abort\",P=console,ge=(e,t,...o)=>u[U]&&(P.group(e),P.error(t),P.info(...o),P.groupEnd()),Ie=D(e=>\"`\"+e.replaceAll(\"{{\",\"${\").replaceAll(\"}}\",\"}\")+\"`\"),ze=NodeFilter.SHOW_ELEMENT|NodeFilter.SHOW_TEXT,be=e=>document.createTreeWalker(e,ze),I=(e,t)=>typeof e===t,S=new WeakMap,Be=e=>I(e,\"function\")?e():e,te=(e,t,o,n)=>{let i=S.get(e)||S.set(e,{}).get(e);if(!i[o]){let l=(Object.getOwnPropertyDescriptor(e,o)||Ee).set,d=e[o];Object.defineProperty(e,o,{get:()=>d,set:s=>{(s!==d||I(s,\"object\"))&&(d=s,l&&l(s),oe(e,o,d))}})}(i[o]=i[o]||new Set).add(t);let r=t[N]=t[N]||{};return I(o,\"symbol\")?R:((r[o]=r[o]||new Set).add(n),()=>{r[o].delete(n)})},Ne=(e,t,o)=>{(e[t]||xe).forEach(n=>{let i=n[E]||o;n[N][t].forEach(r=>r(i))})},oe=(e,t,o)=>{let n=S.get(e)||S.set(e,{}).get(e);t!==\"*\"?Ne(n,t,o):Object.keys(n).forEach(i=>Ne(n,i,e[i]))},Re=(e,t,o=\"*\")=>{let n=S.get(e)||Ee;if(o===\"*\"){Object.keys(n).forEach(r=>Re(e,t,r));return}let i=n[o];if(i){let r=be(t),l=r.currentNode;for(;l;)i.delete(l),l=r.nextNode()}},ne=(e,t)=>{let o=new Set,n=new Set,i=new Set,r=new Set,l=Z.getAll(),d=be(t),s=d.currentNode||d.nextNode();for(;s;s=d.nextNode()){let m=s;s.nodeType,s.nodeValue,s.addEventListener;let w=s.nodeName,z=()=>H(m);if(s.nodeType===Node.ELEMENT_NODE){let c=s;if(w.includes(\"-\")&&I(c[a],\"undefined\")&&(c[a]=!0,requestAnimationFrame(()=>c[a]=!1)),c[a]===ee)continue;let T=Array.from(c.attributes),g=0,B=T.length;e:for(g;g<B;g++){let f=T[g],b=f.nodeName,h=f.nodeValue||\"\";if(s[a]===ee)break e;let x=h.trim(),j=x.slice(0,2)===\"{{\"&&x.slice(-2)===\"}}\"?x.slice(2,-2):x,re=~x.indexOf(\"{{\")?G(j).paths:xe;t:for(let L of l){if(s[a]===ee)break t;if(L.attribute(f,b,h)){let{update:ie,removeAttribute:Te,removeNode:ke}=L.process({attribute:f,attributeName:b,attributeValue:h,context:z,expression:j,props:re,scopeNode:e,targetNode:c,targetNodeName:w});if(Te&&i.add(f),ke&&r.add(c),ie){let ce=L.noExecution?R:M(\"item\",`return ${j}`),ae=(W=z())=>{try{let V=ce===R?void 0:ce.call(e,Be(W));ie(V,Q(e))}catch(V){ge(`Directive Error ${b}`,V.message,`Expression: ${j}`,\"Node\",c)}};n.add(ae),re.forEach(W=>{o.add(te(e,s,W,ae))})}}}}}else if(s.nodeType===Node.TEXT_NODE){let c=s.textContent;if(!~c.indexOf(\"{{\"))continue;let T=s,{paths:g}=G(c),B=Ie(c),f=M(\"item\",`return ${B}`),b=(h=z())=>{try{T.nodeValue=f.call(e,h)}catch(x){ge(`Expression error: ${c}`,x.message,\"Node\",T.parentElement)}};n.add(b),g.forEach(h=>o.add(te(e,s,h,b)))}}return r.forEach(m=>m.remove()),u[U]||i.forEach(m=>{try{m.ownerElement.removeAttribute(m.nodeName)}catch(w){}}),{flush:(...m)=>{m.length?m.forEach(w=>oe(e,w)):oe(e,\"*\")},clear:()=>Y(o),bounds:n}};var Ce=Symbol,se=Ce(),we=Ce(),u=class extends HTMLElement{static element(t,o,n=class extends Slim{}){n.template=o,customElements.define(t,n)}constructor(){super();this[se]()}onBeforeCreated(){}onCreated(){}onAdded(){}onRemoved(){}onRender(){}connectedCallback(){this.onAdded(),C.exec(y,this)}disconnectedCallback(){this.onRemoved(),C.exec(F,this)}[se](){if(this[a]!==\"abort\"){if(this[a])return requestAnimationFrame(()=>this[se]());this.onBeforeCreated(),this.constructor.useShadow&&!this.shadowRoot&&this.attachShadow({mode:\"open\"}),C.exec(v,this),this[we]()}}[we](){let t=J(this.constructor.template);if(t){let o=document.createElement(\"template\");o.innerHTML=t,Promise.resolve().then(()=>{let{flush:n}=ne(this,o.content);X(this,n),n(),this.onCreated(),C.exec(A,this),(this.shadowRoot||this).appendChild(o.content),this.onRender()})}}};q(u,\"template\",\"\"),q(u,\"useShadow\",!0);var st={ADDED:y,CREATE:v,RENDER:A,REMOVED:F},rt={repeatCtx:E,internals:N,block:a,index:le,requestIdleCallback:k};Window.prototype.Slim=u;\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/slim-js/dist/index.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"/js/app": 0,
/******/ 			"css/app": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkIds[i]] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunk"] = self["webpackChunk"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["css/app"], () => (__webpack_require__("./resources/js/app.js")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["css/app"], () => (__webpack_require__("./resources/css/app.css")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;